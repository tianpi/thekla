<tagfile>
  <compound kind="class">
    <name>SbBarrier</name>
    <filename>classSbBarrier.html</filename>
    <member kind="function">
      <name>SbBarrier</name>
      <anchor>489b5e57710f46efa15a526346434079</anchor>
      <arglist>(unsigned int count)</arglist>
    </member>
    <member kind="function">
      <name>~SbBarrier</name>
      <anchor>3b59a2d2980a03f3a36f3f08e3a1141c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>enter</name>
      <anchor>7dd70ac09f94ae8669a4985236b8a9fd</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbBox2f</name>
    <filename>classSbBox2f.html</filename>
    <member kind="function">
      <name>SbBox2f</name>
      <anchor>f60e9222058dbdcd867cbb048c721b03</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbBox2f</name>
      <anchor>488cf3016af1093b2189a19cc9087fc6</anchor>
      <arglist>(float xmin, float ymin, float xmax, float ymax)</arglist>
    </member>
    <member kind="function">
      <name>SbBox2f</name>
      <anchor>e96dae1e996e1f4d60c4d738924733d4</anchor>
      <arglist>(const SbVec2f &amp;min, const SbVec2f &amp;max)</arglist>
    </member>
    <member kind="function">
      <name>~SbBox2f</name>
      <anchor>a75d978c6b6b61767ce6246f3ae4356a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getMin</name>
      <anchor>4c3f5237eab11eb573ad5dd197dddf69</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getMax</name>
      <anchor>def18ca6285056b08d44138c3d1ee37e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getCenter</name>
      <anchor>ba253f3e70bff6c93e175dfba6f54e6c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>extendBy</name>
      <anchor>e2e64a1f974668066070f8b85256cc1e</anchor>
      <arglist>(const SbVec2f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>extendBy</name>
      <anchor>2d6c817d8fde53380e5bd1fa68b22f08</anchor>
      <arglist>(const SbBox2f &amp;box)</arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>cfd1639fbf4df552c0058cbc7477646b</anchor>
      <arglist>(const SbVec2f &amp;point) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>7401884a79096c9ed0955f0e0018eee7</anchor>
      <arglist>(const SbBox2f &amp;box) const </arglist>
    </member>
    <member kind="function">
      <name>getClosestPoint</name>
      <anchor>19a0a6034585503301241599dd5f94ad</anchor>
      <arglist>(const SbVec2f &amp;p) const </arglist>
    </member>
    <member kind="function">
      <name>setBounds</name>
      <anchor>8aaa3915dff78daec064cb34e3ff81d7</anchor>
      <arglist>(float xmin, float ymin, float xmax, float ymax)</arglist>
    </member>
    <member kind="function">
      <name>setBounds</name>
      <anchor>370328e30e72639174865f46ab73dee0</anchor>
      <arglist>(const SbVec2f &amp;min, const SbVec2f &amp;max)</arglist>
    </member>
    <member kind="function">
      <name>getBounds</name>
      <anchor>45e11f6106b3897c55777cca63a2e70d</anchor>
      <arglist>(float &amp;xmin, float &amp;ymin, float &amp;xmax, float &amp;ymax) const </arglist>
    </member>
    <member kind="function">
      <name>getBounds</name>
      <anchor>e9cfbeaf74eddef4d10c7c6aabe87e6c</anchor>
      <arglist>(SbVec2f &amp;min, SbVec2f &amp;max) const </arglist>
    </member>
    <member kind="function">
      <name>getOrigin</name>
      <anchor>4767ac77e6acec1981bd2f07c8385b1c</anchor>
      <arglist>(float &amp;x0, float &amp;y0) const </arglist>
    </member>
    <member kind="function">
      <name>getSize</name>
      <anchor>b28f674e584c00d98533f6cd7affbde4</anchor>
      <arglist>(float &amp;w, float &amp;h) const </arglist>
    </member>
    <member kind="function">
      <name>getAspectRatio</name>
      <anchor>3bb2a9743b41994cf27ed9ebc23d6c54</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>makeEmpty</name>
      <anchor>8a53357d402331b2433a190182c055dc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isEmpty</name>
      <anchor>374158ced7a6565ba21f2cdaa2cb2366</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>hasArea</name>
      <anchor>6d2a7c6a1859f2d1ef32a05039340695</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>44f45d9426e170bec8f85b0fd82033d8</anchor>
      <arglist>(const SbBox2f &amp;b1, const SbBox2f &amp;b2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>ca1673211be6ce175bc5ac0c795feaa3</anchor>
      <arglist>(const SbBox2f &amp;b1, const SbBox2f &amp;b2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbBox2s</name>
    <filename>classSbBox2s.html</filename>
    <member kind="function">
      <name>SbBox2s</name>
      <anchor>9c89d2e09b48756623200f573d3d8c32</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbBox2s</name>
      <anchor>dc4b8796c9228ef325f6c7e63ecb3442</anchor>
      <arglist>(short xmin, short ymin, short xmax, short ymax)</arglist>
    </member>
    <member kind="function">
      <name>SbBox2s</name>
      <anchor>dd4da33ab4b42f20a52237cd6a59a033</anchor>
      <arglist>(const SbVec2s &amp;boxmin, const SbVec2s &amp;boxmax)</arglist>
    </member>
    <member kind="function">
      <name>~SbBox2s</name>
      <anchor>69ed57208872c1e6b511ad898611e10d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getMin</name>
      <anchor>91a1e049c92a5b2fdd13d019a627e0cf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getMax</name>
      <anchor>2968325960913e67bee599cc10687882</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>extendBy</name>
      <anchor>1dca266f470c5a66671ee6cab151ad3f</anchor>
      <arglist>(const SbVec2s &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>extendBy</name>
      <anchor>f04182b3564b7e62eeda4ab6d5f36de6</anchor>
      <arglist>(const SbBox2s &amp;box)</arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>4b9b4b852219efec3734aa94ce4c6c70</anchor>
      <arglist>(const SbVec2s &amp;point) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>56ba599429cb7882e499f97508c02dd2</anchor>
      <arglist>(const SbBox2s &amp;box) const </arglist>
    </member>
    <member kind="function">
      <name>setBounds</name>
      <anchor>650461db35797edb2802a3e8378dc6ff</anchor>
      <arglist>(short xmin, short ymin, short xmax, short ymax)</arglist>
    </member>
    <member kind="function">
      <name>setBounds</name>
      <anchor>49a6a8e18f59ed576c9a696346430ad9</anchor>
      <arglist>(const SbVec2s &amp;boxmin, const SbVec2s &amp;boxmax)</arglist>
    </member>
    <member kind="function">
      <name>getBounds</name>
      <anchor>4d926e9b29187c9d478c4393d061b648</anchor>
      <arglist>(short &amp;xmin, short &amp;ymin, short &amp;xmax, short &amp;ymax) const </arglist>
    </member>
    <member kind="function">
      <name>getBounds</name>
      <anchor>c6cca524d1d588469e4e331641cf4c84</anchor>
      <arglist>(SbVec2s &amp;boxmin, SbVec2s &amp;boxmax) const </arglist>
    </member>
    <member kind="function">
      <name>getOrigin</name>
      <anchor>0adb3836750e29ea6dc135fcc4c49a05</anchor>
      <arglist>(short &amp;originX, short &amp;originY) const </arglist>
    </member>
    <member kind="function">
      <name>getSize</name>
      <anchor>1acda6274210fc28351d8fb99d666cce</anchor>
      <arglist>(short &amp;sizeX, short &amp;sizeY) const </arglist>
    </member>
    <member kind="function">
      <name>getAspectRatio</name>
      <anchor>241be4815b5fcc2a2b0ff00f4788edf6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>makeEmpty</name>
      <anchor>a22e56acd95b2ffdc76ddf77ee0c6bcb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>1042a3532734ad78f25483c2f1305458</anchor>
      <arglist>(const SbBox2s &amp;b1, const SbBox2s &amp;b2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>56b6a6b0eb776ef2ad99e78bc27993d7</anchor>
      <arglist>(const SbBox2s &amp;b1, const SbBox2s &amp;b2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbBox3f</name>
    <filename>classSbBox3f.html</filename>
    <member kind="function">
      <name>SbBox3f</name>
      <anchor>cda68a85f93e1c8756d2f1804e1fab4e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbBox3f</name>
      <anchor>05f84715ef9e420b2f03f6c6524050ba</anchor>
      <arglist>(const float minx, const float miny, const float minz, const float maxx, const float maxy, const float maxz)</arglist>
    </member>
    <member kind="function">
      <name>SbBox3f</name>
      <anchor>b875362281eb42cbac227de6ec8e9252</anchor>
      <arglist>(const SbVec3f &amp;min, const SbVec3f &amp;max)</arglist>
    </member>
    <member kind="function">
      <name>~SbBox3f</name>
      <anchor>09d6d3f0188cce03b34390f7725a4bd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getMin</name>
      <anchor>c8dc8307c75142946783dd2b457859b2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getMax</name>
      <anchor>c69fd7a029fdef8683639ebd95c94e2d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getMin</name>
      <anchor>19ba3e3cd73083cfe9a099813616c4cc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getMax</name>
      <anchor>6957d8a5bd2296ff6174885b79ad7acf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getCenter</name>
      <anchor>2423226714e3d49db4b6b8ee1e6e5cc6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>extendBy</name>
      <anchor>eb06cbad2d0aa38513498d465cdc1c8a</anchor>
      <arglist>(const SbVec3f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>extendBy</name>
      <anchor>e81199b5fe1786b8f621d794a153c20a</anchor>
      <arglist>(const SbBox3f &amp;box)</arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>075e55b265ac2fc36441ad12871ae484</anchor>
      <arglist>(const SbVec3f &amp;point) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>10a1a38f8b2a7a35d93b45e9b398c274</anchor>
      <arglist>(const SbBox3f &amp;box) const </arglist>
    </member>
    <member kind="function">
      <name>setBounds</name>
      <anchor>30ad4985c2e0e74e31a3ebef733c7eae</anchor>
      <arglist>(const float minx, const float miny, const float minz, const float maxx, const float maxy, const float maxz)</arglist>
    </member>
    <member kind="function">
      <name>setBounds</name>
      <anchor>2c88e2e87f25f74e1a56295406b8d5be</anchor>
      <arglist>(const SbVec3f &amp;min, const SbVec3f &amp;max)</arglist>
    </member>
    <member kind="function">
      <name>getBounds</name>
      <anchor>a607838827da2f074064ef1c6acc0312</anchor>
      <arglist>(float &amp;minx, float &amp;miny, float &amp;minz, float &amp;maxx, float &amp;maxy, float &amp;maxz) const </arglist>
    </member>
    <member kind="function">
      <name>getBounds</name>
      <anchor>87ba7e5352e0f84cb79076e2cf9c69f8</anchor>
      <arglist>(SbVec3f &amp;min, SbVec3f &amp;max) const </arglist>
    </member>
    <member kind="function">
      <name>getOrigin</name>
      <anchor>8c79d4e8fb3560073419078984f02876</anchor>
      <arglist>(float &amp;x0, float &amp;y0, float &amp;z0) const </arglist>
    </member>
    <member kind="function">
      <name>getSize</name>
      <anchor>ebddb8adba4640156505b1ecb06a14a1</anchor>
      <arglist>(float &amp;dx, float &amp;dy, float &amp;dz) const </arglist>
    </member>
    <member kind="function">
      <name>makeEmpty</name>
      <anchor>5ef7fe06e8ceb456f75fc2762a9b50aa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isEmpty</name>
      <anchor>1a6b29cab6d14c8a4175ed23940ae638</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>hasVolume</name>
      <anchor>fe4b5cdcd2b3a92177545fb69f9b5a93</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getSpan</name>
      <anchor>70176c1cbf01656d4b5951f0270ee83e</anchor>
      <arglist>(const SbVec3f &amp;dir, float &amp;dmin, float &amp;dmax) const </arglist>
    </member>
    <member kind="function">
      <name>transform</name>
      <anchor>ef13d65bf2de3ce2f3bc963b6d1bda7e</anchor>
      <arglist>(const SbMatrix &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <name>getVolume</name>
      <anchor>4b2c392aabd479a6b4b2063ad09ca344</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>outside</name>
      <anchor>b93b10d14f5eb5b8f5ea4d67bf5de334</anchor>
      <arglist>(const SbMatrix &amp;mvp, int &amp;cullbits) const </arglist>
    </member>
    <member kind="function">
      <name>getClosestPoint</name>
      <anchor>2bcd8de27983faebb08bb61d328a7307</anchor>
      <arglist>(const SbVec3f &amp;point) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>c7921bece2465caaae2b2c407bfc0655</anchor>
      <arglist>(FILE *file) const </arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>b8d0c8d5fad634d9067c36c06c5427fc</anchor>
      <arglist>(const SbBox3f &amp;b1, const SbBox3f &amp;b2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>445f1b0feaacc059e3d63e03641f5ee0</anchor>
      <arglist>(const SbBox3f &amp;b1, const SbBox3f &amp;b2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbBSPTree</name>
    <filename>classSbBSPTree.html</filename>
    <member kind="function">
      <name>coin_bspnode</name>
      <anchor>69cce8d61dede89abae09ba25d574b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SbBSPTree</name>
      <anchor>81cd11e722bd4d8782c9b2617e0e3907</anchor>
      <arglist>(const int maxnodepts=64, const int initsize=4)</arglist>
    </member>
    <member kind="function">
      <name>~SbBSPTree</name>
      <anchor>20b5c9fe452abb73582520f2503f302e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>numPoints</name>
      <anchor>cabe1a2ce55abf7bd81d7189370b940d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>getPoint</name>
      <anchor>e7b02a0ced518b5cf5ba4ea9e248325b</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>getPoint</name>
      <anchor>9ec6294a48cdd6f578387d03d86886b1</anchor>
      <arglist>(const int idx, SbVec3f &amp;pt) const </arglist>
    </member>
    <member kind="function">
      <name>getUserData</name>
      <anchor>76173717bb73ad3985689e213e426d4d</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>setUserData</name>
      <anchor>3e0dc00d4b8a12821f8cf6995fd9620e</anchor>
      <arglist>(const int idx, void *const data)</arglist>
    </member>
    <member kind="function">
      <name>addPoint</name>
      <anchor>94c0936113aecbd1089f5692965cdde6</anchor>
      <arglist>(const SbVec3f &amp;pt, void *const userdata=NULL)</arglist>
    </member>
    <member kind="function">
      <name>removePoint</name>
      <anchor>be40262d6438a4228b4acc9ff944b9b3</anchor>
      <arglist>(const SbVec3f &amp;pt)</arglist>
    </member>
    <member kind="function">
      <name>removePoint</name>
      <anchor>7c352323ca873a56b2dafc4e1022ec07</anchor>
      <arglist>(const int idx)</arglist>
    </member>
    <member kind="function">
      <name>findPoint</name>
      <anchor>2c5b590a42feeaa07404e33187cbd6c5</anchor>
      <arglist>(const SbVec3f &amp;pos) const </arglist>
    </member>
    <member kind="function">
      <name>findClosest</name>
      <anchor>976e48d9573af9c661dbc7c07ff705eb</anchor>
      <arglist>(const SbVec3f &amp;pos) const </arglist>
    </member>
    <member kind="function">
      <name>clear</name>
      <anchor>e2d8a472cce88969ad72455554f25842</anchor>
      <arglist>(const int initsize=4)</arglist>
    </member>
    <member kind="function">
      <name>findPoints</name>
      <anchor>5a42133555ca189a93348b7b15c9c721</anchor>
      <arglist>(const SbSphere &amp;sphere, SbIntList &amp;array) const </arglist>
    </member>
    <member kind="function">
      <name>findClosest</name>
      <anchor>30241b721d474f107510837c6fe8ff3f</anchor>
      <arglist>(const SbSphere &amp;sphere, SbIntList &amp;array) const </arglist>
    </member>
    <member kind="function">
      <name>getBBox</name>
      <anchor>d12878eb4e012cb869560e168ad488d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>getPointsArrayPtr</name>
      <anchor>44f0f2af2000a791d814cc1618e135d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>findPoints</name>
      <anchor>7a2860d3095b13a0caff048ecba1a6ce</anchor>
      <arglist>(const SbSphere &amp;sphere, SbList&lt; int &gt; &amp;array) const </arglist>
    </member>
    <member kind="function">
      <name>findClosest</name>
      <anchor>61bcf839b193be178f471fa7e1e5cf33</anchor>
      <arglist>(const SbSphere &amp;sphere, SbList&lt; int &gt; &amp;array) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbClip</name>
    <filename>classSbClip.html</filename>
    <member kind="function">
      <name>SbClip</name>
      <anchor>d84357d002b55482d098de8d44ff7d3e</anchor>
      <arglist>(SbClipCallback *callback=NULL, void *userdata=NULL)</arglist>
    </member>
    <member kind="function">
      <name>addVertex</name>
      <anchor>341c5e4129ebef7f8447d408350ae98a</anchor>
      <arglist>(const SbVec3f &amp;v, void *vdata=NULL)</arglist>
    </member>
    <member kind="function">
      <name>reset</name>
      <anchor>0f4196a57e40383c33d04e9e19d2d5fc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>clip</name>
      <anchor>db59533f96dbca4e433fa8194e69677a</anchor>
      <arglist>(const SbPlane &amp;plane)</arglist>
    </member>
    <member kind="function">
      <name>getNumVertices</name>
      <anchor>c370e148fa6838c46f83409bec65840f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getVertex</name>
      <anchor>c9c8f0b50c8db80ced3063eabb6be9f4</anchor>
      <arglist>(const int idx, SbVec3f &amp;v, void **vdata=NULL) const </arglist>
    </member>
    <member kind="function">
      <name>getVertexData</name>
      <anchor>3107cb450b83fe492b7dbf4b4c78db88</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbColor</name>
    <base>SbVec3f</base>
    <filename>classSbColor.html</filename>
    <member kind="function">
      <name>SbColor</name>
      <anchor>57b97220a4686bf7f16c9a7daa81e995</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbColor</name>
      <anchor>d505d11c8d16b471e41d35a0f19bad6f</anchor>
      <arglist>(const SbVec3f &amp;v)</arglist>
    </member>
    <member kind="function">
      <name>SbColor</name>
      <anchor>8c13fdb8bb612dc9050af5fee374cc2d</anchor>
      <arglist>(const float *const rgb)</arglist>
    </member>
    <member kind="function">
      <name>SbColor</name>
      <anchor>f4c539e5b646684bd3687a529d66ad8a</anchor>
      <arglist>(const float r, const float g, const float b)</arglist>
    </member>
    <member kind="function">
      <name>setHSVValue</name>
      <anchor>b0e0b257d9e44ccfeb0361e060dfc7ee</anchor>
      <arglist>(float h, float s, float v)</arglist>
    </member>
    <member kind="function">
      <name>setHSVValue</name>
      <anchor>06585db40ed0e0e3ad8ad9f0426acf49</anchor>
      <arglist>(const float hsv[3])</arglist>
    </member>
    <member kind="function">
      <name>getHSVValue</name>
      <anchor>e6ff17e35f2e3054d34806cb8189b0f7</anchor>
      <arglist>(float &amp;h, float &amp;s, float &amp;v) const </arglist>
    </member>
    <member kind="function">
      <name>getHSVValue</name>
      <anchor>94c675166c62eb52768bac743d5ee372</anchor>
      <arglist>(float hsv[3]) const </arglist>
    </member>
    <member kind="function">
      <name>setPackedValue</name>
      <anchor>ea92d5997a1ac924c9bf68c9c9c23ecb</anchor>
      <arglist>(const uint32_t rgba, float &amp;transparency)</arglist>
    </member>
    <member kind="function">
      <name>getPackedValue</name>
      <anchor>690a376d590c60393d1a9e31bcc3a3bb</anchor>
      <arglist>(const float transparency=0.0f) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbColor4f</name>
    <filename>classSbColor4f.html</filename>
    <member kind="function">
      <name>SbColor4f</name>
      <anchor>bf2300514eb7df2d08870e181f2fc4d4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbColor4f</name>
      <anchor>826be8ddb1351ccfd293d7e43e3c1aed</anchor>
      <arglist>(const SbColor &amp;rgb, const float alpha)</arglist>
    </member>
    <member kind="function">
      <name>SbColor4f</name>
      <anchor>ee7803324174c72f1c50185c97007aa5</anchor>
      <arglist>(const SbVec4f &amp;v)</arglist>
    </member>
    <member kind="function">
      <name>SbColor4f</name>
      <anchor>e76a933cb041ea3717fe2a565de13b2b</anchor>
      <arglist>(const float *const rgba)</arglist>
    </member>
    <member kind="function">
      <name>SbColor4f</name>
      <anchor>d1a3fec4de9db97cd1ebd48e81810f27</anchor>
      <arglist>(const float r, const float g, const float b, const float a=1.0f)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>4b4894afb2bb85d3398b1ee18e3087d4</anchor>
      <arglist>(const float r, const float g, const float b, const float a=1.0f)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>800bec94d1e9de045f9c274ad256d913</anchor>
      <arglist>(const float col[4])</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>715af0da049d60bfd307c62d899b828d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>6a8d80bc0b6c99f22de3ec3c709c0dfb</anchor>
      <arglist>(float &amp;r, float &amp;g, float &amp;b, float &amp;a)</arglist>
    </member>
    <member kind="function">
      <name>setRGB</name>
      <anchor>734808c688beb9359623a13dc0d5f010</anchor>
      <arglist>(const SbColor &amp;col)</arglist>
    </member>
    <member kind="function">
      <name>getRGB</name>
      <anchor>973c01d8c620d3003e6bdd538d0b3360</anchor>
      <arglist>(SbColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <name>setHSVValue</name>
      <anchor>18d2536de1a547cb257aadc6e50dd88f</anchor>
      <arglist>(float h, float s, float v, float a=1.0f)</arglist>
    </member>
    <member kind="function">
      <name>setHSVValue</name>
      <anchor>04e5474068c768e2fc4eb6850b50237a</anchor>
      <arglist>(const float hsv[3], float alpha=1.0f)</arglist>
    </member>
    <member kind="function">
      <name>getHSVValue</name>
      <anchor>240dccc38d73379abc757bf074fa7820</anchor>
      <arglist>(float &amp;h, float &amp;s, float &amp;v) const </arglist>
    </member>
    <member kind="function">
      <name>getHSVValue</name>
      <anchor>4c41a43e085132a314c087e4bbac542a</anchor>
      <arglist>(float hsv[3]) const </arglist>
    </member>
    <member kind="function">
      <name>setPackedValue</name>
      <anchor>22e7a117d0bf23c0ac65575fa25bd677</anchor>
      <arglist>(const uint32_t rgba)</arglist>
    </member>
    <member kind="function">
      <name>getPackedValue</name>
      <anchor>52629067a54c01dfa70a11fd02da3da0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>276f5de9641d3972f43617649c561f67</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>e8a3bdb9100bf8dce49cdaf2328b759c</anchor>
      <arglist>(const int idx)</arglist>
    </member>
    <member kind="function">
      <name>operator *=</name>
      <anchor>fd8bd344b3731ed68ef0eabada3e9ee0</anchor>
      <arglist>(const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator/=</name>
      <anchor>b257bf4d02b46088c6b1f2d3a06c7d23</anchor>
      <arglist>(const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator+=</name>
      <anchor>26329aa5fe3dda3ee1d3f3146bc33b96</anchor>
      <arglist>(const SbColor4f &amp;c)</arglist>
    </member>
    <member kind="function">
      <name>operator-=</name>
      <anchor>fe4e215e3f77dc75b6e33323baeddc30</anchor>
      <arglist>(const SbColor4f &amp;c)</arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>066e1f59f27edb7512417358d643f82f</anchor>
      <arglist>(const SbColor4f &amp;c, const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>e38d2bc02bbacd42e78a7cc97df36264</anchor>
      <arglist>(const float d, const SbColor4f &amp;c)</arglist>
    </member>
    <member kind="function">
      <name>operator/</name>
      <anchor>e48a713a98060ce1409e185c9a79bb3c</anchor>
      <arglist>(const SbColor4f &amp;c, const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator+</name>
      <anchor>7681baa1f2aca9f602b8ca4141a30ccb</anchor>
      <arglist>(const SbColor4f &amp;v1, const SbColor4f &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator-</name>
      <anchor>555100ee71c33ba2ec63cdad33d42110</anchor>
      <arglist>(const SbColor4f &amp;v1, const SbColor4f &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>3fff3adfe14963774875fd2d5116aa31</anchor>
      <arglist>(const SbColor4f &amp;v1, const SbColor4f &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>ab73e3db4033c10a001e6c08feb26015</anchor>
      <arglist>(const SbColor4f &amp;v1, const SbColor4f &amp;v2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbCondVar</name>
    <filename>classSbCondVar.html</filename>
    <member kind="function">
      <name>SbCondVar</name>
      <anchor>b3b497c28999fab0f0cf00b33b8eaca6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SbCondVar</name>
      <anchor>4213268061e6033f01079ec95ebbd6c7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>wait</name>
      <anchor>85db83550b2fdb97da6e3da701272eac</anchor>
      <arglist>(SbMutex &amp;mutex)</arglist>
    </member>
    <member kind="function">
      <name>timedWait</name>
      <anchor>007014698d0ae9c6d7cf499dce723297</anchor>
      <arglist>(SbMutex &amp;mutex, SbTime period)</arglist>
    </member>
    <member kind="function">
      <name>wakeOne</name>
      <anchor>0f7361b36eefde18d239f3615dff7c16</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>wakeAll</name>
      <anchor>3a307c3fe62892245564975f05cd4e37</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbCylinder</name>
    <filename>classSbCylinder.html</filename>
    <member kind="function">
      <name>SbCylinder</name>
      <anchor>b268ab24f22bd16e48cf39208af2ecc2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbCylinder</name>
      <anchor>8fddfda354f81860438fb87545cfc345</anchor>
      <arglist>(const SbLine &amp;a, const float r)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>f90337238a8ab3a5db63e0a69c5e9d71</anchor>
      <arglist>(const SbLine &amp;a, const float r)</arglist>
    </member>
    <member kind="function">
      <name>setAxis</name>
      <anchor>67bbd92c4b5d74aa76c795c44a50a003</anchor>
      <arglist>(const SbLine &amp;a)</arglist>
    </member>
    <member kind="function">
      <name>setRadius</name>
      <anchor>03a31659f75d8da21d426051bc2bf9b1</anchor>
      <arglist>(const float r)</arglist>
    </member>
    <member kind="function">
      <name>getAxis</name>
      <anchor>ddfae1b302c037f56574b7b6362bb4bb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getRadius</name>
      <anchor>02a8d5b7a192889abe798962d1ab5d53</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>3342f6f716873e1ec71907aa167ba970</anchor>
      <arglist>(const SbLine &amp;l, SbVec3f &amp;intersection) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>c69c116097c43eaa4fe1e64d71550000</anchor>
      <arglist>(const SbLine &amp;l, SbVec3f &amp;enter, SbVec3f &amp;exit) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>b42dc00c9f080d0f307e89739c75d5b2</anchor>
      <arglist>(FILE *file) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbCylinderPlaneProjector</name>
    <base>SbCylinderSectionProjector</base>
    <filename>classSbCylinderPlaneProjector.html</filename>
    <member kind="function">
      <name>SbCylinderPlaneProjector</name>
      <anchor>256b25692052575a6855ef86f4cbd192</anchor>
      <arglist>(const float edgetol=0.9f, const SbBool orienttoeye=1)</arglist>
    </member>
    <member kind="function">
      <name>SbCylinderPlaneProjector</name>
      <anchor>e84d86e859e7bbf9770849b5846412e6</anchor>
      <arglist>(const SbCylinder &amp;cyl, const float edgetol=0.9f, const SbBool orienttoeye=1)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>db328b12149ab9c8f3a172d7fc78040c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>project</name>
      <anchor>fb1bc7a499cfab6096c991dfb14ee569</anchor>
      <arglist>(const SbVec2f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>getRotation</name>
      <anchor>ca777eb280e6dec53fdfe4df92248799</anchor>
      <arglist>(const SbVec3f &amp;point1, const SbVec3f &amp;point2)</arglist>
    </member>
    <member kind="function">
      <name>getRotation</name>
      <anchor>4aba339a4a76f500347952d5c901fbc7</anchor>
      <arglist>(const SbVec3f &amp;point1, const SbBool tol1, const SbVec3f &amp;point2, const SbBool tol2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbCylinderProjector</name>
    <base>SbProjector</base>
    <filename>classSbCylinderProjector.html</filename>
    <member kind="function">
      <name>SbCylinderProjector</name>
      <anchor>6dd2e2729ca64533ad3f6e46c5a04226</anchor>
      <arglist>(const SbBool orienttoeye)</arglist>
    </member>
    <member kind="function">
      <name>SbCylinderProjector</name>
      <anchor>0c3291f74209ce8faed25c9074ec10f9</anchor>
      <arglist>(const SbCylinder &amp;cylinder, const SbBool orienttoeye)</arglist>
    </member>
    <member kind="function">
      <name>project</name>
      <anchor>0932d5f18d746906ef42ab363d8913be</anchor>
      <arglist>(const SbVec2f &amp;point)=0</arglist>
    </member>
    <member kind="function">
      <name>projectAndGetRotation</name>
      <anchor>8c299f86e571141f3cdaa07c222b7b07</anchor>
      <arglist>(const SbVec2f &amp;point, SbRotation &amp;rot)</arglist>
    </member>
    <member kind="function">
      <name>getRotation</name>
      <anchor>a5dd6c4bc18a40ed5706b22beedcee58</anchor>
      <arglist>(const SbVec3f &amp;point1, const SbVec3f &amp;point2)=0</arglist>
    </member>
    <member kind="function">
      <name>setCylinder</name>
      <anchor>c4c6c87f8bc0656f781b9281d9c37294</anchor>
      <arglist>(const SbCylinder &amp;cyl)</arglist>
    </member>
    <member kind="function">
      <name>getCylinder</name>
      <anchor>35df77d446b36e2c374f9ab78e853196</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setOrientToEye</name>
      <anchor>366afa63e637a639ed16ee34374d7073</anchor>
      <arglist>(const SbBool orienttoeye)</arglist>
    </member>
    <member kind="function">
      <name>isOrientToEye</name>
      <anchor>b8427c0e6d749b739728b7af507d7d3c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setFront</name>
      <anchor>3a66f1c989709170b78c07cf172293ae</anchor>
      <arglist>(const SbBool infront)</arglist>
    </member>
    <member kind="function">
      <name>isFront</name>
      <anchor>013b148faf20892010ea0184860170f2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isPointInFront</name>
      <anchor>73f1f508e65589e63f18a79b3b076e6d</anchor>
      <arglist>(const SbVec3f &amp;point) const </arglist>
    </member>
    <member kind="function">
      <name>setWorkingSpace</name>
      <anchor>67017820b22d21be5008a09517cad5d9</anchor>
      <arglist>(const SbMatrix &amp;space)</arglist>
    </member>
    <member kind="function">
      <name>intersectCylinderFront</name>
      <anchor>11b8f0cd7a7d1f7946e10283aa0fb394</anchor>
      <arglist>(const SbLine &amp;line, SbVec3f &amp;result)</arglist>
    </member>
    <member kind="function">
      <name>intersectFront</name>
      <anchor>6040babe44b89117f1cb3bc0cdffc377</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>cylinder</name>
      <anchor>a3debf12deff6aa74807637383eacd77</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>orientToEye</name>
      <anchor>fed152233dd402a2376f300c34adfa84</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>needSetup</name>
      <anchor>f4238e26836efac6c8d10a8579a7ec70</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lastPoint</name>
      <anchor>f2e2f91ad80b06fa7072bad5bdd78647</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbCylinderSectionProjector</name>
    <base>SbCylinderProjector</base>
    <filename>classSbCylinderSectionProjector.html</filename>
    <member kind="function">
      <name>SbCylinderSectionProjector</name>
      <anchor>f4339fb253d23f5b51ff490a3d0a02d7</anchor>
      <arglist>(const float edgetol=0.9f, const SbBool orienttoeye=1)</arglist>
    </member>
    <member kind="function">
      <name>SbCylinderSectionProjector</name>
      <anchor>357957fb5cf7eafa6fc2bb4049ff9c95</anchor>
      <arglist>(const SbCylinder &amp;cyl, const float edgetol=0.9f, const SbBool orienttoeye=1)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>3385ed8d4720d5db3d028c4b6b7e5b10</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>project</name>
      <anchor>1559a388a0fdcd3de1ef8a2fe1066388</anchor>
      <arglist>(const SbVec2f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>getRotation</name>
      <anchor>520520c707d304d80d4e6a8dd7f0374f</anchor>
      <arglist>(const SbVec3f &amp;point1, const SbVec3f &amp;point2)</arglist>
    </member>
    <member kind="function">
      <name>setTolerance</name>
      <anchor>5d62015051b829b7af812d98fd0303be</anchor>
      <arglist>(const float edgetol)</arglist>
    </member>
    <member kind="function">
      <name>getTolerance</name>
      <anchor>7c83b84a42f126133e4d9b6ce13e1c89</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isWithinTolerance</name>
      <anchor>901871f080a352cdaec49f13a0ccce13</anchor>
      <arglist>(const SbVec3f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>setupTolerance</name>
      <anchor>bbed8e29371e9d9b76e5341883bfdd7c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>tolerance</name>
      <anchor>efc718ff69cf2e490fd9de532a9b43ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tolDist</name>
      <anchor>798cc0c751300b98aa20d6381994a802</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeDir</name>
      <anchor>6c1a2f3bba580766b888672dfdfd6834</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeLine</name>
      <anchor>989430109a1f431e9a6a60a75e47cef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeDist</name>
      <anchor>a1a721305a73dc62e97aff7be3b3e5a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tolPlane</name>
      <anchor>5d8b4276b37a9b596458366615506ecb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbCylinderSheetProjector</name>
    <base>SbCylinderProjector</base>
    <filename>classSbCylinderSheetProjector.html</filename>
    <member kind="function">
      <name>SbCylinderSheetProjector</name>
      <anchor>a5dbe692464cbd4cef30e0388f4dc9f9</anchor>
      <arglist>(const SbBool orienttoeye=1)</arglist>
    </member>
    <member kind="function">
      <name>SbCylinderSheetProjector</name>
      <anchor>118b7fd5b969c669b87fbb3b6da5d35a</anchor>
      <arglist>(const SbCylinder &amp;cyl, const SbBool orienttoeye=1)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>637eed19f250bb485cae830aeec43e9f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>project</name>
      <anchor>c37ca81fe5dd8d1e7ecb176b692c8697</anchor>
      <arglist>(const SbVec2f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>getRotation</name>
      <anchor>69a4e33d14b05a51533f45e977116bbe</anchor>
      <arglist>(const SbVec3f &amp;point1, const SbVec3f &amp;point2)</arglist>
    </member>
    <member kind="function">
      <name>setupPlane</name>
      <anchor>f48ce18494eb4209176f1f6aab916d0d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>workingProjPoint</name>
      <anchor>00ea3600bebe862c80d4cf120eaa184f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeDir</name>
      <anchor>f431cab97204963a160c156e04d103ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tolPlane</name>
      <anchor>ba60a9c4f3431342af1a621f31179ddb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbDict</name>
    <filename>classSbDict.html</filename>
    <member kind="function">
      <name>SbDict</name>
      <anchor>92792a27e53f730d81c3f545ea1aeb66</anchor>
      <arglist>(const int entries=251)</arglist>
    </member>
    <member kind="function">
      <name>SbDict</name>
      <anchor>dc2e06721f4e751e6c4b128eaed92b1c</anchor>
      <arglist>(const SbDict &amp;from)</arglist>
    </member>
    <member kind="function">
      <name>~SbDict</name>
      <anchor>bc0830ad6fc3f118ef9364193b488bd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>79d4f48693dedcc4e643b7e65beecca3</anchor>
      <arglist>(const SbDict &amp;from)</arglist>
    </member>
    <member kind="function">
      <name>applyToAll</name>
      <anchor>3ceb31df6fd417e2bb40b496cb7c6f89</anchor>
      <arglist>(void(*rtn)(unsigned long key, void *value)) const </arglist>
    </member>
    <member kind="function">
      <name>applyToAll</name>
      <anchor>aecc46040c0c77f27335e2ea8e2c8893</anchor>
      <arglist>(void(*rtn)(unsigned long key, void *value, void *data), void *data) const </arglist>
    </member>
    <member kind="function">
      <name>clear</name>
      <anchor>7a685b879d51576ad1719b9beca0b03b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>enter</name>
      <anchor>0b36ec5938fe2ee9efaf9d2e1eb699f2</anchor>
      <arglist>(const unsigned long key, void *const value)</arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>fb59b5d18dba6d95716579c3b1144baa</anchor>
      <arglist>(const unsigned long key, void *&amp;value) const </arglist>
    </member>
    <member kind="function">
      <name>makePList</name>
      <anchor>7899d71e83dc06751a2f84a6e47945f5</anchor>
      <arglist>(SbPList &amp;keys, SbPList &amp;values)</arglist>
    </member>
    <member kind="function">
      <name>remove</name>
      <anchor>add8a48c251adae820fe27b9e869cf27</anchor>
      <arglist>(const unsigned long key)</arglist>
    </member>
    <member kind="function">
      <name>setHashingFunction</name>
      <anchor>bebc0d4fad8eea01ee6ad6b17cbf6365</anchor>
      <arglist>(unsigned long(*func)(const unsigned long key))</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbFifo</name>
    <filename>classSbFifo.html</filename>
    <member kind="function">
      <name>assign</name>
      <anchor>fea4434352b8f7792378ee6b97401a37</anchor>
      <arglist>(void *ptr, uint32_t type)</arglist>
    </member>
    <member kind="function">
      <name>retrieve</name>
      <anchor>e21306c4a6e1f4d685c53974fa51e679</anchor>
      <arglist>(void *&amp;ptr, uint32_t &amp;type)</arglist>
    </member>
    <member kind="function">
      <name>tryRetrieve</name>
      <anchor>404327e1c67e7b827b281af6062a63f9</anchor>
      <arglist>(void *&amp;ptr, uint32_t &amp;type)</arglist>
    </member>
    <member kind="function">
      <name>size</name>
      <anchor>3478b9110c1198a4166e7c21e187d66f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>lock</name>
      <anchor>61374eb789b769ff97cc24780f9ed1ad</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>unlock</name>
      <anchor>ad401dfbbd7da2c8874160e821bb94d8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>peek</name>
      <anchor>fcea6ea6990c5df470a4ed4fc92a6395</anchor>
      <arglist>(void *&amp;item, uint32_t &amp;type) const </arglist>
    </member>
    <member kind="function">
      <name>contains</name>
      <anchor>9267271ec8431754d5568f1ac3e5951b</anchor>
      <arglist>(void *item) const </arglist>
    </member>
    <member kind="function">
      <name>reclaim</name>
      <anchor>a21973185d84f17018ac17cd3ae5ccbc</anchor>
      <arglist>(void *item)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbImage</name>
    <filename>classSbImage.html</filename>
    <member kind="function">
      <name>SbImage</name>
      <anchor>550b12717f54edaea466e959d2980d89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbImage</name>
      <anchor>778084cf728861bd8d0914ea2fcba96e</anchor>
      <arglist>(const unsigned char *bytes, const SbVec2s &amp;size, const int bytesperpixel)</arglist>
    </member>
    <member kind="function">
      <name>SbImage</name>
      <anchor>3c65278b7e9875b5b3b96cd5f40811ec</anchor>
      <arglist>(const unsigned char *bytes, const SbVec3s &amp;size, const int bytesperpixel)</arglist>
    </member>
    <member kind="function">
      <name>~SbImage</name>
      <anchor>79f9dcc12b3fe1c11f2d4fc289610f1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>8c119ce77ae392580d3f4776adeb72ce</anchor>
      <arglist>(const SbVec2s &amp;size, const int bytesperpixel, const unsigned char *bytes)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>1d234ffdf7ae23b249cd9978044c7e69</anchor>
      <arglist>(const SbVec3s &amp;size, const int bytesperpixel, const unsigned char *bytes)</arglist>
    </member>
    <member kind="function">
      <name>setValuePtr</name>
      <anchor>5393d25e565e123ebc889055612592bf</anchor>
      <arglist>(const SbVec2s &amp;size, const int bytesperpixel, const unsigned char *bytes)</arglist>
    </member>
    <member kind="function">
      <name>setValuePtr</name>
      <anchor>4cdc0f3a01dc4651a4aa9794d58357d2</anchor>
      <arglist>(const SbVec3s &amp;size, const int bytesperpixel, const unsigned char *bytes)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>cb2f388d0b8578c5404c4bf1dd5fffd9</anchor>
      <arglist>(SbVec2s &amp;size, int &amp;bytesperpixel) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>ba15636b7fa4e247ac28d3d5117ffb94</anchor>
      <arglist>(SbVec3s &amp;size, int &amp;bytesperpixel) const </arglist>
    </member>
    <member kind="function">
      <name>getSize</name>
      <anchor>71bb34fa531a99feda2afbd471451f5a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>readFile</name>
      <anchor>869f0fa0bfe5b58bf31e8c00bc0dc6c0</anchor>
      <arglist>(const SbString &amp;filename, const SbString *const *searchdirectories=NULL, const int numdirectories=0)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>c55f4c3fc5de35ac845092d5c8100f39</anchor>
      <arglist>(const SbImage &amp;image) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>6e2bbeae4c05a1d6246b7adf5ccb3500</anchor>
      <arglist>(const SbImage &amp;image) const </arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>5f21488a4af52f41f22015396315f6e8</anchor>
      <arglist>(const SbImage &amp;image)</arglist>
    </member>
    <member kind="function">
      <name>searchForFile</name>
      <anchor>1155f75c7b9aa27fcd0b004bde938704</anchor>
      <arglist>(const SbString &amp;basename, const SbString *const *dirlist, const int numdirs)</arglist>
    </member>
    <member kind="function">
      <name>hasData</name>
      <anchor>8de2c2de07a2a77896943adf637e49f2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>readLock</name>
      <anchor>53e32fee8d919ea93694cc057901b9e8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>readUnlock</name>
      <anchor>05425d2892c309c392a5287aac4ade46</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>scheduleReadFile</name>
      <anchor>eb76fecd85ad2b627f4b3bd247e1df3a</anchor>
      <arglist>(SbImageScheduleReadCB *cb, void *closure, const SbString &amp;filename, const SbString *const *searchdirectories=NULL, const int numdirectories=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbIntList</name>
    <base>SbPList</base>
    <filename>classSbIntList.html</filename>
    <member kind="function">
      <name>SbIntList</name>
      <anchor>77787425ccf57683a584e891c16f783b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbIntList</name>
      <anchor>fca9c9369d5fe31414c0b068772fe0bf</anchor>
      <arglist>(const int sizehint)</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>a7c78267d6164e2e3d9550e7c1c023c0</anchor>
      <arglist>(const int item)</arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>8c36ff744a7dc5749699447d696f77bc</anchor>
      <arglist>(const int item)</arglist>
    </member>
    <member kind="function">
      <name>insert</name>
      <anchor>832e8fa620c7101da392b1a77c3bb9bf</anchor>
      <arglist>(const int item, const int addbefore)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>e439fa049157086bd96326ae5d698bc1</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbLine</name>
    <filename>classSbLine.html</filename>
    <member kind="function">
      <name>SbLine</name>
      <anchor>a8db4c11f19c63d8431002d34edaa515</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbLine</name>
      <anchor>5ab86e886ad329357c68bbb67c92d53c</anchor>
      <arglist>(const SbVec3f &amp;origin, const SbVec3f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>6beb09e9ca8cf702ddcf0b2a56793a1d</anchor>
      <arglist>(const SbVec3f &amp;origin, const SbVec3f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>getClosestPoints</name>
      <anchor>23f8cd0d0f777342689530b43ed37bc4</anchor>
      <arglist>(const SbLine &amp;line2, SbVec3f &amp;ptOnThis, SbVec3f &amp;ptOnLine2) const </arglist>
    </member>
    <member kind="function">
      <name>getClosestPoint</name>
      <anchor>fc49eedb145ef1991c44f28b5917bcd0</anchor>
      <arglist>(const SbVec3f &amp;point) const </arglist>
    </member>
    <member kind="function">
      <name>getPosition</name>
      <anchor>0443fe92e89186972fdc2d373bb14985</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getDirection</name>
      <anchor>a7fd52fea972cb036d0143b40343c4e2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>9cd8e3b4c988f491a1b4df3857dcb993</anchor>
      <arglist>(FILE *file) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbLineProjector</name>
    <base>SbProjector</base>
    <filename>classSbLineProjector.html</filename>
    <member kind="function">
      <name>SbLineProjector</name>
      <anchor>62208e6694d0c49d5f5f2285253dd2c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>0e27b2257ff05292cf44c0ad5fff8798</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>project</name>
      <anchor>37d1853c90acf15a9f1b89f5ce916328</anchor>
      <arglist>(const SbVec2f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>setLine</name>
      <anchor>67f4544fb46670d4a5a1f7d19f07a3c9</anchor>
      <arglist>(const SbLine &amp;line)</arglist>
    </member>
    <member kind="function">
      <name>getLine</name>
      <anchor>9cbcedfbc8a50fae937f50c5ea58d230</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getVector</name>
      <anchor>0ac417f0ecb8ba48885eb38797cd8cb0</anchor>
      <arglist>(const SbVec2f &amp;viewpos1, const SbVec2f &amp;viewpos2)</arglist>
    </member>
    <member kind="function">
      <name>getVector</name>
      <anchor>69cdc927750e6a129219255de434f535</anchor>
      <arglist>(const SbVec2f &amp;viewpos)</arglist>
    </member>
    <member kind="function">
      <name>setStartPosition</name>
      <anchor>1a5e94503de9afdc59070e6c2e3da3fc</anchor>
      <arglist>(const SbVec2f &amp;viewpos)</arglist>
    </member>
    <member kind="function">
      <name>setStartPosition</name>
      <anchor>d03cee2f1c3908b186d9373dd320b6c5</anchor>
      <arglist>(const SbVec3f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>line</name>
      <anchor>941a98593075b2dd72aefe27389675dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lastPoint</name>
      <anchor>933b480d6eee70fa3dea6a5fcf4aae5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbList</name>
    <filename>classSbList.html</filename>
    <member kind="function">
      <name>SbList</name>
      <anchor>b18cad4eb2d06030cd564917a8c331f4</anchor>
      <arglist>(const int sizehint=DEFAULTSIZE)</arglist>
    </member>
    <member kind="function">
      <name>SbList</name>
      <anchor>189665fb116eed3812bad8a2da247d3d</anchor>
      <arglist>(const SbList&lt; Type &gt; &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>~SbList</name>
      <anchor>e7c20239e83b64aec15b53273622618d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>d35a42495f3ecb04a19a387dc468ce92</anchor>
      <arglist>(const SbList&lt; Type &gt; &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>54522df5b70fac1df3c4eaa8808ccbc6</anchor>
      <arglist>(const SbList&lt; Type &gt; &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>fit</name>
      <anchor>d92621e814796448b9fe0990bdb959ab</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>e98b0264bc9a47902cb36386dde1341c</anchor>
      <arglist>(const Type item)</arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>965b16dcd3df1052b9926312905f87ae</anchor>
      <arglist>(const Type item) const </arglist>
    </member>
    <member kind="function">
      <name>insert</name>
      <anchor>da8fe73c9935bd004fc2b9c07bc68638</anchor>
      <arglist>(const Type item, const int insertbefore)</arglist>
    </member>
    <member kind="function">
      <name>removeItem</name>
      <anchor>b4817441dd2125c7dc22b7b6d3d84155</anchor>
      <arglist>(const Type item)</arglist>
    </member>
    <member kind="function">
      <name>remove</name>
      <anchor>a3ca1bc32dde2755b354dd250fbed1da</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>removeFast</name>
      <anchor>5c53be30fa6d84a05676128ff4f1e4b3</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>getLength</name>
      <anchor>8527386d48de36971b2460f61e4873e7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>truncate</name>
      <anchor>0dc149facedb4f0ac8c1ccb2d628ed1d</anchor>
      <arglist>(const int length, const int dofit=0)</arglist>
    </member>
    <member kind="function">
      <name>push</name>
      <anchor>f8b64ab9fa5562d1ae179a2ba3c825fe</anchor>
      <arglist>(const Type item)</arglist>
    </member>
    <member kind="function">
      <name>pop</name>
      <anchor>23a3b993144dfe304eee41cb555549f7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getArrayPtr</name>
      <anchor>b28a59b1a848e2e553f18ecd08527a58</anchor>
      <arglist>(const int start=0) const </arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>e520560666e824264137d148e824243e</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>61f700e59d16e5d793d9ba97f071e822</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>974b3f9163c9c6b7960d1c73ee2dc4e8</anchor>
      <arglist>(const SbList&lt; Type &gt; &amp;l) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>fcd87df8458e16206ff4c7d5c5ce303e</anchor>
      <arglist>(const SbList&lt; Type &gt; &amp;l) const </arglist>
    </member>
    <member kind="function">
      <name>expand</name>
      <anchor>ed7f50965b7b3a655b8013c440313980</anchor>
      <arglist>(const int size)</arglist>
    </member>
    <member kind="function">
      <name>getArraySize</name>
      <anchor>528ac3389f454a8206bca3b166d2a5f8</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbMatrix</name>
    <filename>classSbMatrix.html</filename>
    <member kind="function">
      <name>SbMatrix</name>
      <anchor>a9c543c99277c8efe81ecaa27d2977a3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbMatrix</name>
      <anchor>f4f62a6e3d63538dc5660b59592f3559</anchor>
      <arglist>(const float a11, const float a12, const float a13, const float a14, const float a21, const float a22, const float a23, const float a24, const float a31, const float a32, const float a33, const float a34, const float a41, const float a42, const float a43, const float a44)</arglist>
    </member>
    <member kind="function">
      <name>SbMatrix</name>
      <anchor>11cc61c8a398ca99f727c24e9dac5145</anchor>
      <arglist>(const SbMat &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <name>SbMatrix</name>
      <anchor>14a38bb0c23bd9899b73e1cf6d42674f</anchor>
      <arglist>(const SbMat *matrix)</arglist>
    </member>
    <member kind="function">
      <name>~SbMatrix</name>
      <anchor>56c2af917e531b6a2c689277da0e5e40</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>b923719276439757ba9c351af0d48645</anchor>
      <arglist>(const SbMat &amp;m)</arglist>
    </member>
    <member kind="function">
      <name>operator float *</name>
      <anchor>2e9cb965db606983daab26f713cd85bd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>53b9da1c1ed8a4aabe50962719b16f21</anchor>
      <arglist>(const SbMatrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>823e51aa6487c9445f08520664bb0f24</anchor>
      <arglist>(const SbMat &amp;m)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>985e8cd7ac8771a0fc4da0579932d19c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>makeIdentity</name>
      <anchor>a3932a07fef33751bea1d2afad98dd80</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setRotate</name>
      <anchor>d980a0a21520443af5f27ad2c3a0ac4d</anchor>
      <arglist>(const SbRotation &amp;q)</arglist>
    </member>
    <member kind="function">
      <name>inverse</name>
      <anchor>4e99f030b83ae08e885ed43558a1b9b5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>det3</name>
      <anchor>39aa5544c14e36f3090be4284a3ba2a6</anchor>
      <arglist>(int r1, int r2, int r3, int c1, int c2, int c3) const </arglist>
    </member>
    <member kind="function">
      <name>det3</name>
      <anchor>8f7fddeb6c22a4e8b3170b4400e4512d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>det4</name>
      <anchor>e5de806e797f203628e8fae31a653c32</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>equals</name>
      <anchor>69ddc3035f28bcce3457c49b886f75f5</anchor>
      <arglist>(const SbMatrix &amp;m, float tolerance) const </arglist>
    </member>
    <member kind="function">
      <name>operator SbMat &amp;</name>
      <anchor>68ebdb48cc42675a9608de80ac995b03</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>d01011ae53be487a1a5951ee501d81f7</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>c568d42a060b5b72a35d6f8795279161</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>2f48f009fcc63c5ccb7a7c49bc80d03a</anchor>
      <arglist>(const SbRotation &amp;q)</arglist>
    </member>
    <member kind="function">
      <name>operator *=</name>
      <anchor>30f88b939aa104b95fbf6e7d14e80359</anchor>
      <arglist>(const SbMatrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>d5b9d0fc68e6657036e34cf941768adb</anchor>
      <arglist>(SbMat &amp;m) const </arglist>
    </member>
    <member kind="function">
      <name>identity</name>
      <anchor>dc24591ea5071d7d8f18eee7066c36e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setScale</name>
      <anchor>c3fe68df7dff290a61a29ee3494559fb</anchor>
      <arglist>(const float s)</arglist>
    </member>
    <member kind="function">
      <name>setScale</name>
      <anchor>20666edc6bd3449c8121213504e2d779</anchor>
      <arglist>(const SbVec3f &amp;s)</arglist>
    </member>
    <member kind="function">
      <name>setTranslate</name>
      <anchor>9e7499122cfa98b5e3eec4832248343d</anchor>
      <arglist>(const SbVec3f &amp;t)</arglist>
    </member>
    <member kind="function">
      <name>setTransform</name>
      <anchor>b213f7106629056c14f92d7cca1b0e40</anchor>
      <arglist>(const SbVec3f &amp;t, const SbRotation &amp;r, const SbVec3f &amp;s)</arglist>
    </member>
    <member kind="function">
      <name>setTransform</name>
      <anchor>35048991968e198707e5186ac9c12c68</anchor>
      <arglist>(const SbVec3f &amp;t, const SbRotation &amp;r, const SbVec3f &amp;s, const SbRotation &amp;so)</arglist>
    </member>
    <member kind="function">
      <name>setTransform</name>
      <anchor>aa26b5ff6e108f1ad44552320dec9375</anchor>
      <arglist>(const SbVec3f &amp;translation, const SbRotation &amp;rotation, const SbVec3f &amp;scaleFactor, const SbRotation &amp;scaleOrientation, const SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>getTransform</name>
      <anchor>2ab231640a3a3211716de76c07606e70</anchor>
      <arglist>(SbVec3f &amp;t, SbRotation &amp;r, SbVec3f &amp;s, SbRotation &amp;so) const </arglist>
    </member>
    <member kind="function">
      <name>getTransform</name>
      <anchor>3ddfbb7b43f8d347717cc6621d5457d1</anchor>
      <arglist>(SbVec3f &amp;translation, SbRotation &amp;rotation, SbVec3f &amp;scaleFactor, SbRotation &amp;scaleOrientation, const SbVec3f &amp;center) const </arglist>
    </member>
    <member kind="function">
      <name>factor</name>
      <anchor>efdcc23eccf6de5cbf7eafd230f206cc</anchor>
      <arglist>(SbMatrix &amp;r, SbVec3f &amp;s, SbMatrix &amp;u, SbVec3f &amp;t, SbMatrix &amp;proj)</arglist>
    </member>
    <member kind="function">
      <name>LUDecomposition</name>
      <anchor>44442a984a6db189e521b8e599187eb3</anchor>
      <arglist>(int index[4], float &amp;d)</arglist>
    </member>
    <member kind="function">
      <name>LUBackSubstitution</name>
      <anchor>d680536320c79d550eeb1e9b4ce8a90d</anchor>
      <arglist>(int index[4], float b[4]) const </arglist>
    </member>
    <member kind="function">
      <name>transpose</name>
      <anchor>a0ef21dc210ce541751d3dd389be6074</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>multRight</name>
      <anchor>95c83d6772896a1c592d9f02ef9b9b73</anchor>
      <arglist>(const SbMatrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <name>multLeft</name>
      <anchor>9fb67deb0eba537ad84e4a7064ced20d</anchor>
      <arglist>(const SbMatrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <name>multMatrixVec</name>
      <anchor>d96d19c79f60edf82502db778af0c10e</anchor>
      <arglist>(const SbVec3f &amp;src, SbVec3f &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <name>multVecMatrix</name>
      <anchor>f7fb9a0687aefbc3a853b87923bb538d</anchor>
      <arglist>(const SbVec3f &amp;src, SbVec3f &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <name>multDirMatrix</name>
      <anchor>d29df20d6916d82dbf90290a83a7d9a4</anchor>
      <arglist>(const SbVec3f &amp;src, SbVec3f &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <name>multLineMatrix</name>
      <anchor>8ee6706c8ddadca45266b6217bec8ab4</anchor>
      <arglist>(const SbLine &amp;src, SbLine &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <name>multVecMatrix</name>
      <anchor>725fdbc6bb273e222544ec4f242912e5</anchor>
      <arglist>(const SbVec4f &amp;src, SbVec4f &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>2170946f1261bb3cb3e43dbc07a7d965</anchor>
      <arglist>(FILE *fp) const </arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>95d715c1f29d9ea051a243481bd3b254</anchor>
      <arglist>(const SbMatrix &amp;m1, const SbMatrix &amp;m2)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>bf8843860b5e03a0061ebe2ec9d8a9ad</anchor>
      <arglist>(const SbMatrix &amp;m1, const SbMatrix &amp;m2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>00563ae0cae392aefedeb3a6f77ce9f4</anchor>
      <arglist>(const SbMatrix &amp;m1, const SbMatrix &amp;m2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbMutex</name>
    <filename>classSbMutex.html</filename>
    <member kind="function">
      <name>SbCondVar</name>
      <anchor>38bd9c73b977fada0dc3fa96be750e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SbMutex</name>
      <anchor>e7857a045d7550ad718cda575accc148</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SbMutex</name>
      <anchor>ae98fce780daa8d0ed300d62ec890d19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>lock</name>
      <anchor>11a98c1845259531731881ebbb034ff4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>tryLock</name>
      <anchor>e3337ed5640f256e6b17cb577b33583c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>unlock</name>
      <anchor>092dc22599d7c1cd72735345a876e8d0</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbName</name>
    <filename>classSbName.html</filename>
    <member kind="function">
      <name>SbName</name>
      <anchor>d6a4c7d4f516d74b22a0f054065c4d1b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbName</name>
      <anchor>e6fef503e4327443b2e4967a6ce7663c</anchor>
      <arglist>(const char *nameString)</arglist>
    </member>
    <member kind="function">
      <name>SbName</name>
      <anchor>b523d9d8a9ebe1a7e7d7206579cba24f</anchor>
      <arglist>(const SbString &amp;str)</arglist>
    </member>
    <member kind="function">
      <name>SbName</name>
      <anchor>29e5b8239dd822004d5a332bfecec96e</anchor>
      <arglist>(const SbName &amp;name)</arglist>
    </member>
    <member kind="function">
      <name>~SbName</name>
      <anchor>835f59a095cc997fac967a1d6ddfac52</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getString</name>
      <anchor>3b56356c5c5f8e3fabc0dbc47c6499fe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getLength</name>
      <anchor>8922348ac9a89bd418ec7cc580d7b037</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isIdentStartChar</name>
      <anchor>8542c60491baad59191fa04c8f05c7ff</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function">
      <name>isIdentChar</name>
      <anchor>3f201ffe519350d5ae06f31fc30ed9c9</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function">
      <name>isBaseNameStartChar</name>
      <anchor>b4e8fb488f254fda26e22055223ecf0e</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function">
      <name>isBaseNameChar</name>
      <anchor>d4c80d5dd355792ef2406f09d47b42de</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function">
      <name>operator!</name>
      <anchor>4dd95424ad0fc82a5dd7ea7b3e13738e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>operator const char *</name>
      <anchor>11223b37f380585bc94e490ff300091f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>1a9e2e87224f997e7b85ea4270f31491</anchor>
      <arglist>(const SbName &amp;lhs, const char *rhs)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>11b92ad49c0bd13adc4cfa5bbaa4ff0d</anchor>
      <arglist>(const char *lhs, const SbName &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>f664e0fe96b220633d87506098c586ff</anchor>
      <arglist>(const SbName &amp;lhs, const SbName &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>817a20561fe7a7cc170a871975806296</anchor>
      <arglist>(const SbName &amp;lhs, const char *rhs)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>ed52cb7e045ed247aba2ca9e0715c031</anchor>
      <arglist>(const char *lhs, const SbName &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>29000d9ba142f3ad44fb42b0c9b9baf3</anchor>
      <arglist>(const SbName &amp;lhs, const SbName &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbPlane</name>
    <filename>classSbPlane.html</filename>
    <member kind="function">
      <name>SbPlane</name>
      <anchor>1db5bae636297d29cc50435cd2f85cde</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbPlane</name>
      <anchor>9d318bb4c7e48e81dfee4248048b3c0b</anchor>
      <arglist>(const SbVec3f &amp;normal, const float D)</arglist>
    </member>
    <member kind="function">
      <name>SbPlane</name>
      <anchor>cb9fc24accebfae55bc56cd1deda2aa7</anchor>
      <arglist>(const SbVec3f &amp;p0, const SbVec3f &amp;p1, const SbVec3f &amp;p2)</arglist>
    </member>
    <member kind="function">
      <name>SbPlane</name>
      <anchor>ed3e3d54f30693e031efd3373f35a25c</anchor>
      <arglist>(const SbVec3f &amp;normal, const SbVec3f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>offset</name>
      <anchor>324e8467ece2b14d3cd993d471862a6e</anchor>
      <arglist>(const float d)</arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>3fdc7674d58978e6084aeaa9904bc45b</anchor>
      <arglist>(const SbLine &amp;l, SbVec3f &amp;intersection) const </arglist>
    </member>
    <member kind="function">
      <name>transform</name>
      <anchor>383bc77412bbf7173e96a8e14e5a3325</anchor>
      <arglist>(const SbMatrix &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <name>isInHalfSpace</name>
      <anchor>06ed999695986b64637e7259ed08e025</anchor>
      <arglist>(const SbVec3f &amp;point) const </arglist>
    </member>
    <member kind="function">
      <name>getDistance</name>
      <anchor>c0edd1b836dc4a1b82b30e2022c96af4</anchor>
      <arglist>(const SbVec3f &amp;point) const </arglist>
    </member>
    <member kind="function">
      <name>getNormal</name>
      <anchor>406e0a08d2cf669cdb6d46985451e0c3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getDistanceFromOrigin</name>
      <anchor>866c4110060e528e8c97a1bc68c87942</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>e2473004750eecc7ad898be2683d13f3</anchor>
      <arglist>(FILE *file) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>4ca26e88b3a18f2ca194f27ad3e4dfbb</anchor>
      <arglist>(const SbPlane &amp;pl, SbLine &amp;line)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>8830930d3c1f38ec5d41cc9b5416a142</anchor>
      <arglist>(const SbPlane &amp;p1, const SbPlane &amp;p2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>45b6be8ea7abb92fa999a67e5724bd4b</anchor>
      <arglist>(const SbPlane &amp;p1, const SbPlane &amp;p2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbPlaneProjector</name>
    <base>SbProjector</base>
    <filename>classSbPlaneProjector.html</filename>
    <member kind="function">
      <name>SbPlaneProjector</name>
      <anchor>13985ed24810dfe06e2322de2ea3fe46</anchor>
      <arglist>(const SbBool orient=0)</arglist>
    </member>
    <member kind="function">
      <name>SbPlaneProjector</name>
      <anchor>b87830e0049e7afdeb9bff63f45dda25</anchor>
      <arglist>(const SbPlane &amp;plane, const SbBool orient=0)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>e3f3b295ffcddc449ed87884696cc22a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>project</name>
      <anchor>f53fe67381ccac9b29de56c243ab5243</anchor>
      <arglist>(const SbVec2f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>setPlane</name>
      <anchor>87b6cc3c0b0081f6794283c08bf6a815</anchor>
      <arglist>(const SbPlane &amp;plane)</arglist>
    </member>
    <member kind="function">
      <name>getPlane</name>
      <anchor>e1631081487749e1d59d50f5d7421577</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setOrientToEye</name>
      <anchor>338c5c92203c71af31467f53e7ca067e</anchor>
      <arglist>(const SbBool orienttoeye)</arglist>
    </member>
    <member kind="function">
      <name>isOrientToEye</name>
      <anchor>67f83822957c8b8bc0d242bb0e16dee0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getVector</name>
      <anchor>71bff22fade60bab1dff0712fc9c1b09</anchor>
      <arglist>(const SbVec2f &amp;viewpos1, const SbVec2f &amp;viewpos2)</arglist>
    </member>
    <member kind="function">
      <name>getVector</name>
      <anchor>4078f3a50298f318235dd7385db0c82c</anchor>
      <arglist>(const SbVec2f &amp;viewpos)</arglist>
    </member>
    <member kind="function">
      <name>setStartPosition</name>
      <anchor>313f157900e6b80cee0bcb7247966d9a</anchor>
      <arglist>(const SbVec2f &amp;viewpos)</arglist>
    </member>
    <member kind="function">
      <name>setStartPosition</name>
      <anchor>2b9100b73f90134a2f178ea73b5d2a57</anchor>
      <arglist>(const SbVec3f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>setupPlane</name>
      <anchor>688bfaa1b95d749458ffb137314c5703</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>plane</name>
      <anchor>285bd75831659701d3be8e67233d9b39</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>nonOrientPlane</name>
      <anchor>1306a57449db989650f04758486d3951</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>orientToEye</name>
      <anchor>217fdecb25351d4f4b83ebbf061e52a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>needSetup</name>
      <anchor>ca42872fdc02d9914112c9d9c85c6a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lastPoint</name>
      <anchor>fbd27c654699465a946209f344b94d72</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbPList</name>
    <filename>classSbPList.html</filename>
    <member kind="function">
      <name>SbPList</name>
      <anchor>a7f2d079fc9b7f79159c52bfc84c1903</anchor>
      <arglist>(const int sizehint=DEFAULTSIZE)</arglist>
    </member>
    <member kind="function">
      <name>SbPList</name>
      <anchor>f811d0ca4b528e41ded787620a098302</anchor>
      <arglist>(const SbPList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>~SbPList</name>
      <anchor>bd1d6b798ff7e7ca94a2c0cd421a99b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>fde90b2b3d0a9f12bdf0525bc6f8dd95</anchor>
      <arglist>(const SbPList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>ebfa0b8e1ecc80d7fa4b290bcc0a63d4</anchor>
      <arglist>(const SbPList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>fit</name>
      <anchor>74b60d94666a2e26bfd8d594093171b3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>61404440e153af0870eac6183d09fc04</anchor>
      <arglist>(void *item)</arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>2a1636490324dc243990114af901d656</anchor>
      <arglist>(void *item) const </arglist>
    </member>
    <member kind="function">
      <name>insert</name>
      <anchor>f500b13baee20036c51b7746c9b046b0</anchor>
      <arglist>(void *item, const int insertbefore)</arglist>
    </member>
    <member kind="function">
      <name>removeItem</name>
      <anchor>4e876aa0634c39c25d6492a70691341d</anchor>
      <arglist>(void *item)</arglist>
    </member>
    <member kind="function">
      <name>remove</name>
      <anchor>6a4deead2d652da76afce4a6d6cbf755</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>removeFast</name>
      <anchor>85f37433e030fb1845a1f210098b805d</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>getLength</name>
      <anchor>ccb7298ca284c3e7bb2a7bff3706c9a4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>truncate</name>
      <anchor>c32c857e4308dd6b638275d90ea6fc60</anchor>
      <arglist>(const int length, const int fit=0)</arglist>
    </member>
    <member kind="function">
      <name>getArrayPtr</name>
      <anchor>b29c4fcd0c37d4356fa8d776ee3dc506</anchor>
      <arglist>(const int start=0) const </arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>9b4d944db89e8d9faaadcdc86a20970d</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>00666511202c8b820dd86b102230d9da</anchor>
      <arglist>(const SbPList &amp;l) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>0d9b46c3f7278629cf2a01d57e1e1912</anchor>
      <arglist>(const SbPList &amp;l) const </arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>a426c733e4fe6caf207f8e744d0ccd79</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>2594a4326065d15ec4bcb3104b4e74b6</anchor>
      <arglist>(const int index, void *item)</arglist>
    </member>
    <member kind="function">
      <name>expand</name>
      <anchor>28744f335b05d2e87bbc000f39a9e241</anchor>
      <arglist>(const int size)</arglist>
    </member>
    <member kind="function">
      <name>getArraySize</name>
      <anchor>26537c96975f9cc9d781ea8cc5f68b4a</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbProjector</name>
    <filename>classSbProjector.html</filename>
    <member kind="function">
      <name>SbProjector</name>
      <anchor>f5e966f3ff29a796d35c7a1e0c6284e5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SbProjector</name>
      <anchor>6414ffa4d6d0635f1261b71a5df81ea9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>project</name>
      <anchor>10aa00e733aae551b5e813bce2e52d2d</anchor>
      <arglist>(const SbVec2f &amp;point)=0</arglist>
    </member>
    <member kind="function">
      <name>setViewVolume</name>
      <anchor>31e07b5d3f93e5be01f1945536e74a18</anchor>
      <arglist>(const SbViewVolume &amp;vol)</arglist>
    </member>
    <member kind="function">
      <name>getViewVolume</name>
      <anchor>f9c675566ac78be97e2c5f8dfde640e0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setWorkingSpace</name>
      <anchor>cc11d72e261a3a27304377d673e48b21</anchor>
      <arglist>(const SbMatrix &amp;space)</arglist>
    </member>
    <member kind="function">
      <name>getWorkingSpace</name>
      <anchor>0c8973e3b20cea311ab0067ef45c7820</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>a33a37be8140f93ccad65e06a1f5c88b</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function">
      <name>getWorkingLine</name>
      <anchor>0383142c3d4e1e69d13af75884905c9e</anchor>
      <arglist>(const SbVec2f &amp;point) const </arglist>
    </member>
    <member kind="function">
      <name>findVanishingDistance</name>
      <anchor>d0157c8540c59a47168fcb0d4a62af58</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>verifyProjection</name>
      <anchor>c501fd419478c1cdad459d218d44d75f</anchor>
      <arglist>(const SbVec3f &amp;projpt) const </arglist>
    </member>
    <member kind="function">
      <name>viewVol</name>
      <anchor>f87ecfa2c2a1f99472327b7721eca310</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>worldToWorking</name>
      <anchor>9320194b4e872c21a2f6b04a2ff9d815</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>workingToWorld</name>
      <anchor>9cb662f372bcc9d01a7b392cde75e8e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbRotation</name>
    <filename>classSbRotation.html</filename>
    <member kind="function">
      <name>SbRotation</name>
      <anchor>f7b34a3688cd8e1bfc3482bddb997b82</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbRotation</name>
      <anchor>abdc5a912bc0a6690dd47083a8b3f39f</anchor>
      <arglist>(const SbVec3f &amp;axis, const float radians)</arglist>
    </member>
    <member kind="function">
      <name>SbRotation</name>
      <anchor>e048a5c82d3f01f275f6223c8e180092</anchor>
      <arglist>(const float q[4])</arglist>
    </member>
    <member kind="function">
      <name>SbRotation</name>
      <anchor>b86e1cbd8aec00ea9006be02649fa93f</anchor>
      <arglist>(const float q0, const float q1, const float q2, const float q3)</arglist>
    </member>
    <member kind="function">
      <name>SbRotation</name>
      <anchor>c42b51c454f31c7e4427801097cfda1f</anchor>
      <arglist>(const SbMatrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <name>SbRotation</name>
      <anchor>5a71d62e68580ed900c071b3cf605b56</anchor>
      <arglist>(const SbVec3f &amp;rotateFrom, const SbVec3f &amp;rotateTo)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>56ceb5d89693bb481816cef1aa6888cb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>3a23df52b8445707f0b2f7af62b46193</anchor>
      <arglist>(float &amp;q0, float &amp;q1, float &amp;q2, float &amp;q3) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>341d6be6f5b7207edb5eb4f118f4e352</anchor>
      <arglist>(const float q0, const float q1, const float q2, const float q3)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>2ffaac1ce15b20631d9b7a207e70354f</anchor>
      <arglist>(SbVec3f &amp;axis, float &amp;radians) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>2e724099b40235538bf2d950aefc4c27</anchor>
      <arglist>(SbMatrix &amp;matrix) const </arglist>
    </member>
    <member kind="function">
      <name>invert</name>
      <anchor>60bf4c2709c944b64bef644375250d88</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>inverse</name>
      <anchor>b4ccde92fa0e3a49ba7253572495d0ad</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>3f7dfa32c2ab80fc0e6808ca1940512d</anchor>
      <arglist>(const float q[4])</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>39efcb6f3651bea7b194f2e56cfb910f</anchor>
      <arglist>(const SbMatrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>0346dd919d996967cb7d1b907214f0ab</anchor>
      <arglist>(const SbVec3f &amp;axis, const float radians)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>0e4f23004de7569337960d7e5011e63d</anchor>
      <arglist>(const SbVec3f &amp;rotateFrom, const SbVec3f &amp;rotateTo)</arglist>
    </member>
    <member kind="function">
      <name>operator *=</name>
      <anchor>7f8232b6798656f896b10bb0ae92550c</anchor>
      <arglist>(const SbRotation &amp;q)</arglist>
    </member>
    <member kind="function">
      <name>operator *=</name>
      <anchor>192282055f034a48edc0bd5cf5a00cc5</anchor>
      <arglist>(const float s)</arglist>
    </member>
    <member kind="function">
      <name>equals</name>
      <anchor>94dea2c6dfbe3556d2bd74e923bbd671</anchor>
      <arglist>(const SbRotation &amp;r, const float tolerance) const </arglist>
    </member>
    <member kind="function">
      <name>multVec</name>
      <anchor>7bf8bae2e9ae953e50769fad99689be5</anchor>
      <arglist>(const SbVec3f &amp;src, SbVec3f &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <name>scaleAngle</name>
      <anchor>ecf5befb7013da43f9c459ee86a81e80</anchor>
      <arglist>(const float scaleFactor)</arglist>
    </member>
    <member kind="function">
      <name>slerp</name>
      <anchor>04650493010ed066c2d055596f38c6f4</anchor>
      <arglist>(const SbRotation &amp;rot0, const SbRotation &amp;rot1, float t)</arglist>
    </member>
    <member kind="function">
      <name>identity</name>
      <anchor>185e88e106dbba29d4bb8339ff28c4ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>ac469a8233c886ca5236f984e704429e</anchor>
      <arglist>(FILE *fp) const </arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>083b52d28a5b2c848ec051b051383816</anchor>
      <arglist>(const SbRotation &amp;q1, const SbRotation &amp;q2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>5fb0f927ad287d0913505d7f7ac04429</anchor>
      <arglist>(const SbRotation &amp;q1, const SbRotation &amp;q2)</arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>10c486d8d9ec66dca3a3db76168e385e</anchor>
      <arglist>(const SbRotation &amp;q1, const SbRotation &amp;q2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbRWMutex</name>
    <filename>classSbRWMutex.html</filename>
    <member kind="function">
      <name>SbRWMutex</name>
      <anchor>19b8ffed84bf46f3abd130ed234329e3</anchor>
      <arglist>(Precedence policy)</arglist>
    </member>
    <member kind="function">
      <name>~SbRWMutex</name>
      <anchor>f7b1c2134417acb227aacb378dd588d3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>writeLock</name>
      <anchor>2217fe8c4e2a1e46532ce8909c74e311</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>tryWriteLock</name>
      <anchor>d7ae44c3ff5b6c3640ee47c6222ba947</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>writeUnlock</name>
      <anchor>6bdb75c783e2f94bce65bd9b6ca93f92</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>readLock</name>
      <anchor>edc318e5f18fbcc7dd969459b1ddb866</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>tryReadLock</name>
      <anchor>9719b02ae94fd7a01cf2de8f5aab75f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>readUnlock</name>
      <anchor>faddc2d4f8e0b6315a4fda6e804d04e8</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbSphere</name>
    <filename>classSbSphere.html</filename>
    <member kind="function">
      <name>SbSphere</name>
      <anchor>73387572407620a899681cb05af33cd0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbSphere</name>
      <anchor>10410586031d8b3c9b5bc55876f3b1c9</anchor>
      <arglist>(const SbVec3f &amp;center, const float radius)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>906782620b3e8bdb004ba314e9f90cbe</anchor>
      <arglist>(const SbVec3f &amp;center, const float radius)</arglist>
    </member>
    <member kind="function">
      <name>setCenter</name>
      <anchor>4b7d11065b77b3d1ea4308880a6b0574</anchor>
      <arglist>(const SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>setRadius</name>
      <anchor>27485e86fea83dff472e6042eab71ed3</anchor>
      <arglist>(const float radius)</arglist>
    </member>
    <member kind="function">
      <name>getCenter</name>
      <anchor>51899824c3284da57977780d4197ad6a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getRadius</name>
      <anchor>b0baed9c052cd61025e0ce6f592494b4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>circumscribe</name>
      <anchor>57d815c498ead420cfe4b480fd4a6aa2</anchor>
      <arglist>(const SbBox3f &amp;box)</arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>8d5150f1558437d3df085a99148b2da6</anchor>
      <arglist>(const SbLine &amp;l, SbVec3f &amp;intersection) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>19ce686c2aa73243e226c4f6248cebc2</anchor>
      <arglist>(const SbLine &amp;l, SbVec3f &amp;enter, SbVec3f &amp;exit) const </arglist>
    </member>
    <member kind="function">
      <name>pointInside</name>
      <anchor>abe23950f304691ffe483d5204c110de</anchor>
      <arglist>(const SbVec3f &amp;p) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>90637cee3bd8473e4b99ed8ab0fcb009</anchor>
      <arglist>(FILE *file) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbSpherePlaneProjector</name>
    <base>SbSphereSectionProjector</base>
    <filename>classSbSpherePlaneProjector.html</filename>
    <member kind="function">
      <name>SbSpherePlaneProjector</name>
      <anchor>1ec1a64cf1919be36046f45b15dab7f6</anchor>
      <arglist>(const float edgetol=0.9f, const SbBool orienttoeye=1)</arglist>
    </member>
    <member kind="function">
      <name>SbSpherePlaneProjector</name>
      <anchor>d4e22c5907f885c23fdc8a16ffc255bc</anchor>
      <arglist>(const SbSphere &amp;sph, const float edgetol=0.9f, const SbBool orienttoeye=1)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>979ad6f81c3272af5fb4e011b6144e0b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>project</name>
      <anchor>ffe7047c1f8ef6c2bcf2032d76bd73c4</anchor>
      <arglist>(const SbVec2f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>getRotation</name>
      <anchor>b0010e8222fbf7f4a86b8a18260e45e1</anchor>
      <arglist>(const SbVec3f &amp;point1, const SbVec3f &amp;point2)</arglist>
    </member>
    <member kind="function">
      <name>getRotation</name>
      <anchor>8fb39b306183be8e6353e43df6bfc349</anchor>
      <arglist>(const SbVec3f &amp;point1, const SbBool tol1, const SbVec3f &amp;point2, const SbBool tol2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbSphereProjector</name>
    <base>SbProjector</base>
    <filename>classSbSphereProjector.html</filename>
    <member kind="function">
      <name>SbSphereProjector</name>
      <anchor>868f57ebec32957883b1321b0adf955b</anchor>
      <arglist>(const SbBool orienttoeye)</arglist>
    </member>
    <member kind="function">
      <name>SbSphereProjector</name>
      <anchor>378cd6b9ec089b03a78251e433d57758</anchor>
      <arglist>(const SbSphere &amp;s, const SbBool orienttoeye)</arglist>
    </member>
    <member kind="function">
      <name>projectAndGetRotation</name>
      <anchor>c38482c976e0d9054e794a034abcf79e</anchor>
      <arglist>(const SbVec2f &amp;point, SbRotation &amp;rot)</arglist>
    </member>
    <member kind="function">
      <name>getRotation</name>
      <anchor>9c4d57571349f6233e78e351b949a7b9</anchor>
      <arglist>(const SbVec3f &amp;point1, const SbVec3f &amp;point2)=0</arglist>
    </member>
    <member kind="function">
      <name>setSphere</name>
      <anchor>ce6896e5966432ac44d86c04d1e4eb61</anchor>
      <arglist>(const SbSphere &amp;sph)</arglist>
    </member>
    <member kind="function">
      <name>getSphere</name>
      <anchor>04cedf93a2991d4c01cf62d682bfb410</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setOrientToEye</name>
      <anchor>c4d069b1a39639e6700a63d659c7236f</anchor>
      <arglist>(const SbBool orienttoeye)</arglist>
    </member>
    <member kind="function">
      <name>isOrientToEye</name>
      <anchor>21c3eb49a33a231fd5029313839716de</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setFront</name>
      <anchor>071532046e8c7319df2a29befe5903e2</anchor>
      <arglist>(const SbBool infront)</arglist>
    </member>
    <member kind="function">
      <name>isFront</name>
      <anchor>4a3d6320e55c3ce61d70279418336bfc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isPointInFront</name>
      <anchor>cba3d30ad794463d201f395cefc05125</anchor>
      <arglist>(const SbVec3f &amp;point) const </arglist>
    </member>
    <member kind="function">
      <name>setWorkingSpace</name>
      <anchor>fe1519305c87d7726dc40b9daaa59764</anchor>
      <arglist>(const SbMatrix &amp;space)</arglist>
    </member>
    <member kind="function">
      <name>intersectSphereFront</name>
      <anchor>b08294fd4cac38679167e552e4940ab0</anchor>
      <arglist>(const SbLine &amp;l, SbVec3f &amp;result)</arglist>
    </member>
    <member kind="function">
      <name>intersectFront</name>
      <anchor>f53c03608a41fad58f82856113d20f65</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>sphere</name>
      <anchor>b0ba051f5995c4924989789b99ca818f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>orientToEye</name>
      <anchor>0883b57c43eb641b44359f5caeb977fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>needSetup</name>
      <anchor>136681b3e872e38473160fe0fde0352d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lastPoint</name>
      <anchor>23eb381f2626c24f4c2fa378e89412b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbSphereSectionProjector</name>
    <base>SbSphereProjector</base>
    <filename>classSbSphereSectionProjector.html</filename>
    <member kind="function">
      <name>SbSphereSectionProjector</name>
      <anchor>bad53e24d5ec6b529011838cb5674a55</anchor>
      <arglist>(const float edgetol=0.9f, const SbBool orienttoeye=1)</arglist>
    </member>
    <member kind="function">
      <name>SbSphereSectionProjector</name>
      <anchor>1f602d7664626c712ca8e98354be7bcd</anchor>
      <arglist>(const SbSphere &amp;sph, const float edgetol=0.9f, const SbBool orienttoeye=1)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>029c0ba8ce899c0767cca58f8bd1daae</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>project</name>
      <anchor>e9bd7709409cf32532354b67bb0cb8f9</anchor>
      <arglist>(const SbVec2f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>getRotation</name>
      <anchor>cb939b44f139674396cfb9304a2fa686</anchor>
      <arglist>(const SbVec3f &amp;point1, const SbVec3f &amp;point2)</arglist>
    </member>
    <member kind="function">
      <name>setTolerance</name>
      <anchor>b54f9887c3ba8b10ca0154d3049688b3</anchor>
      <arglist>(const float edgetol)</arglist>
    </member>
    <member kind="function">
      <name>getTolerance</name>
      <anchor>9948856bbb657386faa06e89f63563d9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setRadialFactor</name>
      <anchor>a089532afabe3ba67335ce603a7c879b</anchor>
      <arglist>(const float rad=0.0f)</arglist>
    </member>
    <member kind="function">
      <name>getRadialFactor</name>
      <anchor>b761d04897f2ddb3a848ae9884f9a28b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isWithinTolerance</name>
      <anchor>c5f2c7751c2eda4828cf891a39509b8f</anchor>
      <arglist>(const SbVec3f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>setupTolerance</name>
      <anchor>482a9ff7c5301f9ae5bca606f3f5d345</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>tolerance</name>
      <anchor>7428f52b5d33e7c256361c1bfccf9b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tolDist</name>
      <anchor>8680e19ea7232b1f972fbc5c17478bd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>radialFactor</name>
      <anchor>b221449da9bff16c2ffc0a7cd3e4f26f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planePoint</name>
      <anchor>9d54fc42f4321c46a2cc8ff4b074e0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeDir</name>
      <anchor>f31156dbf1e400fb807ab9754bcd13c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeDist</name>
      <anchor>d6d329c6cdc0645d91226668351118e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tolPlane</name>
      <anchor>1607bd15508d9d1f93a3371f8f31b460</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbSphereSheetProjector</name>
    <base>SbSphereProjector</base>
    <filename>classSbSphereSheetProjector.html</filename>
    <member kind="function">
      <name>SbSphereSheetProjector</name>
      <anchor>1d0e09c13e36d735f572ae8131cb9efb</anchor>
      <arglist>(const SbBool orienttoeye=1)</arglist>
    </member>
    <member kind="function">
      <name>SbSphereSheetProjector</name>
      <anchor>80883c2bafd9c9bee97468fdc7d3d918</anchor>
      <arglist>(const SbSphere &amp;sph, const SbBool orienttoeye=1)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>78b0fb44dc547a05cd624f4ccb1bd00e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>project</name>
      <anchor>0bcb1b01105408906699823d85f8990c</anchor>
      <arglist>(const SbVec2f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>getRotation</name>
      <anchor>e98f637b246b3defc53a8db8c228d5b0</anchor>
      <arglist>(const SbVec3f &amp;point1, const SbVec3f &amp;point2)</arglist>
    </member>
    <member kind="function">
      <name>setupPlane</name>
      <anchor>9e7eea331df3c3fd6197b9d308c444c1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>workingProjPoint</name>
      <anchor>1e15498d6b5eec4688af05be0e980815</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planePoint</name>
      <anchor>82db4e1ef68eecc7d51b3d88f1178b7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeDir</name>
      <anchor>b262ce8024b732bb3533c5b78b2ec862</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeDist</name>
      <anchor>6e28d2fee1faf1f50d41f3185826c5dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tolPlane</name>
      <anchor>c4f5bcfe4f3032b8cba40d94572a1e82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbStorage</name>
    <filename>classSbStorage.html</filename>
    <member kind="function">
      <name>SbStorage</name>
      <anchor>5078ed820277675e1a7dc9131a751656</anchor>
      <arglist>(unsigned int size)</arglist>
    </member>
    <member kind="function">
      <name>SbStorage</name>
      <anchor>06e27495b3a398a43bf82730822e136b</anchor>
      <arglist>(unsigned int size, void(*constr)(void *), void(*destr)(void *))</arglist>
    </member>
    <member kind="function">
      <name>~SbStorage</name>
      <anchor>a3e2808f280b4c01473a4f13a5e28f27</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>e18253cfa1f3933263b7107812ee1566</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>applyToAll</name>
      <anchor>21bb59093d887ab1c6bb5e7e82b21a3c</anchor>
      <arglist>(SbStorageApplyFunc *func, void *closure)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbString</name>
    <filename>classSbString.html</filename>
    <member kind="function">
      <name>apply</name>
      <anchor>43c6cd3980e2681859f01b645e48122b</anchor>
      <arglist>(char(*func)(char input))</arglist>
    </member>
    <member kind="function">
      <name>SbString</name>
      <anchor>d8bd7fd681ed31cae3c2165b9575e65d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbString</name>
      <anchor>3100d87da8215cf09b4386cb500ad464</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function">
      <name>SbString</name>
      <anchor>5107e4772f6e2088d256d34da1e30730</anchor>
      <arglist>(const char *s, int start, int end)</arglist>
    </member>
    <member kind="function">
      <name>SbString</name>
      <anchor>4aa2a3f963edba4e22746393f82d5855</anchor>
      <arglist>(const SbString &amp;s)</arglist>
    </member>
    <member kind="function">
      <name>SbString</name>
      <anchor>39c40a499231bc125b14b802c0b85f70</anchor>
      <arglist>(const int digits)</arglist>
    </member>
    <member kind="function">
      <name>~SbString</name>
      <anchor>33b47eab7803f9d9cec6db6862ab2120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>hash</name>
      <anchor>8fe69cd2307f145cd8579e78623f2770</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>hash</name>
      <anchor>eb40745b411a8d8efb71f1c738e3df8d</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function">
      <name>getLength</name>
      <anchor>40ff62a8a6b3c2279e41a40c4d90d987</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>makeEmpty</name>
      <anchor>18a85d660b5d9b924a9f086786d53478</anchor>
      <arglist>(SbBool freeold=1)</arglist>
    </member>
    <member kind="function">
      <name>getString</name>
      <anchor>36c93f1212c84f3c509bab21befcaf9e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getSubString</name>
      <anchor>a0a2e1d9447be4508e70f0438e2047d7</anchor>
      <arglist>(int startidx, int endidx=-1) const </arglist>
    </member>
    <member kind="function">
      <name>deleteSubString</name>
      <anchor>7d14b085ab8efac7bf5ee5a3b4a88e4f</anchor>
      <arglist>(int startidx, int endidx=-1)</arglist>
    </member>
    <member kind="function">
      <name>addIntString</name>
      <anchor>c371e6d216d1f29b15b0fe6bd7023e99</anchor>
      <arglist>(const int value)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>504691fd9edb039ce9a81b80fd5c6e25</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>ff8574febe670eb6ed208c38ef9a530f</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>48e6dd186644cb4248fa467873bda3bb</anchor>
      <arglist>(const SbString &amp;s)</arglist>
    </member>
    <member kind="function">
      <name>operator+=</name>
      <anchor>7b4907e540abc08f9e966105ed9f20a9</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function">
      <name>operator+=</name>
      <anchor>876f50865efc300930a7b242a1417a4b</anchor>
      <arglist>(const SbString &amp;s)</arglist>
    </member>
    <member kind="function">
      <name>operator+=</name>
      <anchor>45c3f7f9f4c2b8798f2cb44ccf16dc17</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function">
      <name>operator!</name>
      <anchor>12ace3d31334950a73c0034afa5727e8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>compareSubString</name>
      <anchor>c2abacbc36a4e80da68e3efb2d378762</anchor>
      <arglist>(const char *text, int offset=0) const </arglist>
    </member>
    <member kind="function">
      <name>sprintf</name>
      <anchor>5b8b394310de686b49033d6e5ef16280</anchor>
      <arglist>(const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <name>vsprintf</name>
      <anchor>f55ef20fed88bf7dbb8cb1eaf2457af3</anchor>
      <arglist>(const char *formatstr, va_list args)</arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>1187400f9d3f0c458475c0882fa25a68</anchor>
      <arglist>(const SbString &amp;s) const </arglist>
    </member>
    <member kind="function">
      <name>findAll</name>
      <anchor>503482650e525fc7c75887ee2c80602c</anchor>
      <arglist>(const SbString &amp;s, SbIntList &amp;found) const </arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>cb6753b1515604ca971a1a87aff2f428</anchor>
      <arglist>(const SbString &amp;sbstr, const char *s)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>c9b65d4d28f6c30992fea63ddd7cf2b9</anchor>
      <arglist>(const char *s, const SbString &amp;sbstr)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>678e767b7619480700a63bc39c567734</anchor>
      <arglist>(const SbString &amp;str1, const SbString &amp;str2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>ea9790c709cb18bdb1d696b322dbf1cf</anchor>
      <arglist>(const SbString &amp;sbstr, const char *s)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>65681d9c628370051ef61439f119bf17</anchor>
      <arglist>(const char *s, const SbString &amp;sbstr)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>c7482060b03b437119ecae06d3986178</anchor>
      <arglist>(const SbString &amp;str1, const SbString &amp;str2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbStringList</name>
    <base>SbPList</base>
    <filename>classSbStringList.html</filename>
    <member kind="function">
      <name>append</name>
      <anchor>e5139ddb2e03fd87b31c03d907a90ac3</anchor>
      <arglist>(SbString *string)</arglist>
    </member>
    <member kind="function">
      <name>SbStringList</name>
      <anchor>5f9e3315b61678d13d6f2360cc0e8c98</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbStringList</name>
      <anchor>e66cdc3f06175aff254fd055db619b82</anchor>
      <arglist>(const int sizehint)</arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>417f2e12fef8f50b0b9c52b9cddcb304</anchor>
      <arglist>(SbString *string) const </arglist>
    </member>
    <member kind="function">
      <name>insert</name>
      <anchor>d3242b4d563ab18cf2ec232865490e35</anchor>
      <arglist>(SbString *string, int insertbefore)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>08fcc3f1c87d5dfc984efb7a0ff9da06</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>getArrayPtr</name>
      <anchor>81212f126cbb620500693d8109e3c5a6</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbTesselator</name>
    <filename>classSbTesselator.html</filename>
    <member kind="function">
      <name>SbTesselator</name>
      <anchor>5c0f65a75b6f631e46e5a3c7f9942b5d</anchor>
      <arglist>(void(*callback)(void *v0, void *v1, void *v2, void *data)=NULL, void *userdata=NULL)</arglist>
    </member>
    <member kind="function">
      <name>~SbTesselator</name>
      <anchor>635c1016d1bcde86146bb86b04ccb17e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>beginPolygon</name>
      <anchor>8d76fbc39ce4393d7278cffacde61000</anchor>
      <arglist>(SbBool keepVertices=0, const SbVec3f &amp;normal=SbVec3f(0.0f, 0.0f, 0.0f))</arglist>
    </member>
    <member kind="function">
      <name>addVertex</name>
      <anchor>efa3b7a22e769602fae46054725d7a0b</anchor>
      <arglist>(const SbVec3f &amp;v, void *data)</arglist>
    </member>
    <member kind="function">
      <name>endPolygon</name>
      <anchor>904c2f4eb454771851a600fce8957385</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setCallback</name>
      <anchor>cb3d9df8f281cf4740f983408cc63799</anchor>
      <arglist>(void(*callback)(void *v0, void *v1, void *v2, void *data), void *data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbThread</name>
    <filename>classSbThread.html</filename>
    <member kind="function">
      <name>SbThread</name>
      <anchor>8cd79b77bda5740da08e715d84aeadd8</anchor>
      <arglist>(cc_thread *thrd)</arglist>
    </member>
    <member kind="function">
      <name>~SbThread</name>
      <anchor>50b99c06a3db15e7fb91755426a62711</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>create</name>
      <anchor>af3eb53105fcc05e7e6c2661d2ebce5e</anchor>
      <arglist>(void *(*func)(void *), void *closure)</arglist>
    </member>
    <member kind="function">
      <name>destroy</name>
      <anchor>29e1154947ff2f00b9e5978c3b6066e2</anchor>
      <arglist>(SbThread *thread)</arglist>
    </member>
    <member kind="function">
      <name>join</name>
      <anchor>7991ededb3b1e471bfeb21d01de41bb8</anchor>
      <arglist>(void **retval=0L)</arglist>
    </member>
    <member kind="function">
      <name>join</name>
      <anchor>ff7428cf3547f40c7cd293c82dad9ece</anchor>
      <arglist>(SbThread *thread, void **retval=0L)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbThreadAutoLock</name>
    <filename>classSbThreadAutoLock.html</filename>
    <member kind="function">
      <name>SbThreadAutoLock</name>
      <anchor>b38b3875759be4b05ab2525508543cdf</anchor>
      <arglist>(SbMutex *mutexptr)</arglist>
    </member>
    <member kind="function">
      <name>~SbThreadAutoLock</name>
      <anchor>cf227191a2fa009db0c1a7a9e370c182</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>mutex</name>
      <anchor>b085bce6e0ab141492e5e37715e23441</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbTime</name>
    <filename>classSbTime.html</filename>
    <member kind="function">
      <name>SbTime</name>
      <anchor>9f7c034551e616cadd327ddef6310484</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbTime</name>
      <anchor>3579ba1742a3827a42f5a6d34b3d8de5</anchor>
      <arglist>(const double sec)</arglist>
    </member>
    <member kind="function">
      <name>SbTime</name>
      <anchor>43c176cc2f6d54eb4d0bdb57d9cea8c7</anchor>
      <arglist>(const int32_t sec, const long usec)</arglist>
    </member>
    <member kind="function">
      <name>SbTime</name>
      <anchor>7b1d561c19cc78f7e061fc50c9b0021f</anchor>
      <arglist>(const struct timeval *const tv)</arglist>
    </member>
    <member kind="function">
      <name>getTimeOfDay</name>
      <anchor>6a24da27d9ba83fc848b860f164d00fc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setToTimeOfDay</name>
      <anchor>eae606e00a26076aeaccca2e0b077aac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>zero</name>
      <anchor>a43feadef19a055eb17bf244605f9972</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>max</name>
      <anchor>43279740f6f03fc3333a2165f4e75322</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>maxTime</name>
      <anchor>8c4c29b97fef8d0f9a373fdf10e303e5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>8f695933fe3cc2722eb8bdd75aa99c69</anchor>
      <arglist>(const double sec)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>2fcad96f5a9be55efbe29574a1de172b</anchor>
      <arglist>(const int32_t sec, const long usec)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>b38f422af390a3eb5f9141be0ca41a72</anchor>
      <arglist>(const struct timeval *const tv)</arglist>
    </member>
    <member kind="function">
      <name>setMsecValue</name>
      <anchor>675520e49045fd8a1cf419a3f761c26e</anchor>
      <arglist>(const unsigned long msec)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>1e3b3352c6e1e3330bc973722b31b0a5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>25850c444ca5546ad930762d84fbd785</anchor>
      <arglist>(time_t &amp;sec, long &amp;usec) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>3656a0fdcb99666e28b2d529a154b136</anchor>
      <arglist>(struct timeval *tv) const </arglist>
    </member>
    <member kind="function">
      <name>getMsecValue</name>
      <anchor>53242079bebcf638575a503580fea12f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>format</name>
      <anchor>805ee471c1515b79e25a492fabb7ff52</anchor>
      <arglist>(const char *const fmt=&quot;%S.%i&quot;) const </arglist>
    </member>
    <member kind="function">
      <name>formatDate</name>
      <anchor>ee559ca25b0c21ecf46e66a53a1a4ba8</anchor>
      <arglist>(const char *const fmt=NULL) const </arglist>
    </member>
    <member kind="function">
      <name>parsedate</name>
      <anchor>c5f6ad3aabca3582cc14dfa1ac9c4092</anchor>
      <arglist>(const char *const date)</arglist>
    </member>
    <member kind="function">
      <name>operator+=</name>
      <anchor>644fc261ef8d20ad27e54bbda017c8ec</anchor>
      <arglist>(const SbTime &amp;tm)</arglist>
    </member>
    <member kind="function">
      <name>operator-=</name>
      <anchor>3b3141c403d383780d9ac61d2ebe0b1e</anchor>
      <arglist>(const SbTime &amp;tm)</arglist>
    </member>
    <member kind="function">
      <name>operator-</name>
      <anchor>da704b7d227b1a3455b92d04f37dbd4d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>operator *=</name>
      <anchor>d6e43f786161629e0c88ed4adace4b24</anchor>
      <arglist>(const double s)</arglist>
    </member>
    <member kind="function">
      <name>operator/=</name>
      <anchor>50011d50a5a86f86fe27e48ca2d8ddd3</anchor>
      <arglist>(const double s)</arglist>
    </member>
    <member kind="function">
      <name>operator/</name>
      <anchor>0b9af8e86b6f73f3c0957c0178b4c494</anchor>
      <arglist>(const SbTime &amp;tm) const </arglist>
    </member>
    <member kind="function">
      <name>operator%</name>
      <anchor>c7567255fdd8ffb5163db976f4d4fd10</anchor>
      <arglist>(const SbTime &amp;tm) const </arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>e016c412bb33f25e8545fb8a1f975100</anchor>
      <arglist>(const SbTime &amp;tm) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>cb03f6e006ed42ca3ab0aef34a7c76d0</anchor>
      <arglist>(const SbTime &amp;tm) const </arglist>
    </member>
    <member kind="function">
      <name>operator&lt;</name>
      <anchor>cd5d13a6e3b1e05dd6046ceb7bf351bc</anchor>
      <arglist>(const SbTime &amp;tm) const </arglist>
    </member>
    <member kind="function">
      <name>operator&gt;</name>
      <anchor>871a6382f5c855cbd87d2b923a14a104</anchor>
      <arglist>(const SbTime &amp;tm) const </arglist>
    </member>
    <member kind="function">
      <name>operator&lt;=</name>
      <anchor>a8523e0a101e6e8d75fc6d133b897532</anchor>
      <arglist>(const SbTime &amp;tm) const </arglist>
    </member>
    <member kind="function">
      <name>operator&gt;=</name>
      <anchor>d2660348eaf285d16a71f35a8a9500c2</anchor>
      <arglist>(const SbTime &amp;tm) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>216dcb16368240c1ede20813f4aab9a3</anchor>
      <arglist>(FILE *fp) const </arglist>
    </member>
    <member kind="function">
      <name>operator+</name>
      <anchor>83f13bc9e9d38624d8b33200dbbb55d9</anchor>
      <arglist>(const SbTime &amp;t0, const SbTime &amp;t1)</arglist>
    </member>
    <member kind="function">
      <name>operator-</name>
      <anchor>fbc8605f18ff122b2fd97f6e913b8959</anchor>
      <arglist>(const SbTime &amp;t0, const SbTime &amp;t1)</arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>0b7d33f66525f06fba4dbf7daf3a33a6</anchor>
      <arglist>(const double s, const SbTime &amp;tm)</arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>35088690c2e75b7e3f0e0feeea56293c</anchor>
      <arglist>(const SbTime &amp;tm, const double s)</arglist>
    </member>
    <member kind="function">
      <name>operator/</name>
      <anchor>c30cf5c325aca8e6f924ac03e28b571c</anchor>
      <arglist>(const SbTime &amp;tm, const double s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbTypedStorage</name>
    <filename>classSbTypedStorage.html</filename>
    <member kind="function">
      <name>SbTypedStorage</name>
      <anchor>340b685dbf6b09b92b7084a179348513</anchor>
      <arglist>(unsigned int size)</arglist>
    </member>
    <member kind="function">
      <name>SbTypedStorage</name>
      <anchor>8cfcc497925dae3e8133f67bdf061a63</anchor>
      <arglist>(unsigned int size, void(*constr)(void *), void(*destr)(void *))</arglist>
    </member>
    <member kind="function">
      <name>~SbTypedStorage</name>
      <anchor>1c04c5b5d9b81ea8e8387a8fa0c4d8d9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>8de4887d68260c20e7dc42c8225aa8f0</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbVec2f</name>
    <filename>classSbVec2f.html</filename>
    <member kind="function">
      <name>SbVec2f</name>
      <anchor>1346ce09a8a9385f9c006cc5d63fcbf6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbVec2f</name>
      <anchor>f3a6d469ba3a49ddc779aba017d3bb6b</anchor>
      <arglist>(const float v[2])</arglist>
    </member>
    <member kind="function">
      <name>SbVec2f</name>
      <anchor>69ee25b59d9782e545725a609778b6ad</anchor>
      <arglist>(const float x, const float y)</arglist>
    </member>
    <member kind="function">
      <name>dot</name>
      <anchor>2be3a84c07f75c4598225fa9b2efbfdb</anchor>
      <arglist>(const SbVec2f &amp;v) const </arglist>
    </member>
    <member kind="function">
      <name>equals</name>
      <anchor>679aacfca5d0512c3fd07faee82cbbf4</anchor>
      <arglist>(const SbVec2f &amp;v, const float tolerance) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>a0dc4fb6e6f4c8e5335b78b7e778bb0f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>3797e1005a46fd2e7ae96b1f1205f346</anchor>
      <arglist>(float &amp;x, float &amp;y) const </arglist>
    </member>
    <member kind="function">
      <name>length</name>
      <anchor>f57d1ca34479d2650173fea20272c202</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>negate</name>
      <anchor>3d337eaf4ba60a986ca315dbdc0a8316</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>normalize</name>
      <anchor>5391fa1b1910a636d8344e6981711f54</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>a1e22cf35a2b1d95069161eb89b09421</anchor>
      <arglist>(const float v[2])</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>a32a28c0749e9521fc071cc09c84a485</anchor>
      <arglist>(const float x, const float y)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>bb73dc5a8627717abc736df2ddb98ab8</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>e5f0e02da2ff40681700dd70de5b5eaf</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <name>operator *=</name>
      <anchor>73a2f0c551b4e13eadd081e0a81fb4f0</anchor>
      <arglist>(const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator/=</name>
      <anchor>4c76a49ae42ea555b27d549b1c0a3a4a</anchor>
      <arglist>(const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator+=</name>
      <anchor>484c135c93dbb7a910cd369495284410</anchor>
      <arglist>(const SbVec2f &amp;u)</arglist>
    </member>
    <member kind="function">
      <name>operator-=</name>
      <anchor>06141e18380875fee9ad62e01f7e8a5a</anchor>
      <arglist>(const SbVec2f &amp;u)</arglist>
    </member>
    <member kind="function">
      <name>operator-</name>
      <anchor>91922cc9cd9fb7f713ff290792fbd286</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>68f630c43b88431884124295d7158575</anchor>
      <arglist>(FILE *fp) const </arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>1e54907cbd81909bb4f7d8a1b4236242</anchor>
      <arglist>(const SbVec2f &amp;v, const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>8a22935fc9e338e38aa5c387b00a8bb9</anchor>
      <arglist>(const float d, const SbVec2f &amp;v)</arglist>
    </member>
    <member kind="function">
      <name>operator/</name>
      <anchor>cc509222ec80f501b23a1c6cd2984412</anchor>
      <arglist>(const SbVec2f &amp;v, const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator+</name>
      <anchor>833644ab1c9540c85936d53902343dbc</anchor>
      <arglist>(const SbVec2f &amp;v1, const SbVec2f &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator-</name>
      <anchor>d7705425b46b63001e60b15ac5a7e609</anchor>
      <arglist>(const SbVec2f &amp;v1, const SbVec2f &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>fc60d5b71be030e65e2b48b777fe2f04</anchor>
      <arglist>(const SbVec2f &amp;v1, const SbVec2f &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>486b82cdb61e5ebe1c55040425257f63</anchor>
      <arglist>(const SbVec2f &amp;v1, const SbVec2f &amp;v2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbVec2s</name>
    <filename>classSbVec2s.html</filename>
    <member kind="function">
      <name>SbVec2s</name>
      <anchor>949d11f0e5baf23139d37077d86c8668</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbVec2s</name>
      <anchor>81a132782d39edfd8aa9637551d9cab1</anchor>
      <arglist>(const short v[2])</arglist>
    </member>
    <member kind="function">
      <name>SbVec2s</name>
      <anchor>3704ba7228c348ae1ab9a625983fe980</anchor>
      <arglist>(const short x, const short y)</arglist>
    </member>
    <member kind="function">
      <name>dot</name>
      <anchor>b4cb9345c43c157e860ed9383c041566</anchor>
      <arglist>(const SbVec2s &amp;v) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>f0b03b94fb74fe27e19eedaac45f3c4b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>ce4d7b62486aec23623e3e1a9d2e61d2</anchor>
      <arglist>(short &amp;x, short &amp;y) const </arglist>
    </member>
    <member kind="function">
      <name>negate</name>
      <anchor>b1a9e1cdd67a4ca519e91c60ab4cb477</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>749320fbf358f1101ba7c25a1ba1a3b8</anchor>
      <arglist>(const short v[2])</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>7cf9b71b29cb2e8e959d231f5832f85e</anchor>
      <arglist>(short x, short y)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>6c8f075241526b62c71237442bede519</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>1dd6caf215c15b1903dea8fdc21a9002</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <name>operator *=</name>
      <anchor>f95c1a39e1c74dacc1858737854363de</anchor>
      <arglist>(int d)</arglist>
    </member>
    <member kind="function">
      <name>operator *=</name>
      <anchor>4128d75ca1b90866cb2bf2bd75f5a3ca</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <name>operator/=</name>
      <anchor>c5864539fcf034cd700a9ed0a3c2951f</anchor>
      <arglist>(int d)</arglist>
    </member>
    <member kind="function">
      <name>operator/=</name>
      <anchor>d8f0d4947c757fa8a7fb080b77ed2216</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <name>operator+=</name>
      <anchor>8b4781d8f89bbd52fc460d4711b184b1</anchor>
      <arglist>(const SbVec2s &amp;u)</arglist>
    </member>
    <member kind="function">
      <name>operator-=</name>
      <anchor>700306fba44709da73e1a318b3a398e5</anchor>
      <arglist>(const SbVec2s &amp;u)</arglist>
    </member>
    <member kind="function">
      <name>operator-</name>
      <anchor>7646c3cf72bae0391398a796d443c9ae</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>23d77487485f32caa794527405424ae4</anchor>
      <arglist>(FILE *fp) const </arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>980493e159180298fb381a2b257998eb</anchor>
      <arglist>(const SbVec2s &amp;v, int d)</arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>f98aacfac6f716a461f76002cd56802f</anchor>
      <arglist>(const SbVec2s &amp;v, double d)</arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>2163709c6b48336b332ba8430c351d33</anchor>
      <arglist>(int d, const SbVec2s &amp;v)</arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>5b6f9be8b203c27c476dfca8dcd972fc</anchor>
      <arglist>(double d, const SbVec2s &amp;v)</arglist>
    </member>
    <member kind="function">
      <name>operator/</name>
      <anchor>0da97de4ad79429159ef2a7e9d9b9c75</anchor>
      <arglist>(const SbVec2s &amp;v, int d)</arglist>
    </member>
    <member kind="function">
      <name>operator/</name>
      <anchor>4997afc77f28a86590c3b56851ac7653</anchor>
      <arglist>(const SbVec2s &amp;v, double d)</arglist>
    </member>
    <member kind="function">
      <name>operator+</name>
      <anchor>a0e3205ce44f1b1834fcd95f90b370e7</anchor>
      <arglist>(const SbVec2s &amp;v1, const SbVec2s &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator-</name>
      <anchor>0d9471171e0850999d1ea739c791db64</anchor>
      <arglist>(const SbVec2s &amp;v1, const SbVec2s &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>5e0d9c3c70b584ef527896aab18d0c8c</anchor>
      <arglist>(const SbVec2s &amp;v1, const SbVec2s &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>2cac79faa94b112ba7aef64565c7cede</anchor>
      <arglist>(const SbVec2s &amp;v1, const SbVec2s &amp;v2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbVec3f</name>
    <filename>classSbVec3f.html</filename>
    <member kind="function">
      <name>SbVec3f</name>
      <anchor>a76258aca6004c0bc187eb1bb6ad8920</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbVec3f</name>
      <anchor>5d493a03bcc39dd578d10fb16a9880b0</anchor>
      <arglist>(const float v[3])</arglist>
    </member>
    <member kind="function">
      <name>SbVec3f</name>
      <anchor>249bae694832ffd912d65b35786762b7</anchor>
      <arglist>(const float x, const float y, const float z)</arglist>
    </member>
    <member kind="function">
      <name>SbVec3f</name>
      <anchor>a3f9d152a6c12807db97f06f8a6a882d</anchor>
      <arglist>(const SbPlane &amp;p0, const SbPlane &amp;p1, const SbPlane &amp;p2)</arglist>
    </member>
    <member kind="function">
      <name>SbVec3f</name>
      <anchor>361be6b8e470fcd78a751d9e903c77d1</anchor>
      <arglist>(const SbVec3d &amp;v)</arglist>
    </member>
    <member kind="function">
      <name>cross</name>
      <anchor>1d8d558618c7e5dca35b19b817ab3ca6</anchor>
      <arglist>(const SbVec3f &amp;v) const </arglist>
    </member>
    <member kind="function">
      <name>dot</name>
      <anchor>ceb5ad1cb652c99b0fa5e9769fd7ab81</anchor>
      <arglist>(const SbVec3f &amp;v) const </arglist>
    </member>
    <member kind="function">
      <name>equals</name>
      <anchor>7a841bb01621be4ba67073d4b9d681ef</anchor>
      <arglist>(const SbVec3f &amp;v, const float tolerance) const </arglist>
    </member>
    <member kind="function">
      <name>getClosestAxis</name>
      <anchor>eaaaaf4dd7cf6c0e9acc16973cf5d8d1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>7706fc4599b5d6ecca4783bfc7345a5b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>6c1b1415cdae844f2a2a02a489b5e25a</anchor>
      <arglist>(float &amp;x, float &amp;y, float &amp;z) const </arglist>
    </member>
    <member kind="function">
      <name>length</name>
      <anchor>450de33397f52427bf9870f6ecf3c91e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>sqrLength</name>
      <anchor>daaa36326dc107247cf1aaf7d5efbef8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>negate</name>
      <anchor>93022b11a182eba2bb4bd334ee243d43</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>normalize</name>
      <anchor>c0d97d3db797a7a849d4f28c3a2436f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>441b6c1a81cb3a144aea083d273e0fba</anchor>
      <arglist>(const float v[3])</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>6ffa3052220b4df84a0bc4b74d9cd32b</anchor>
      <arglist>(const float x, const float y, const float z)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>398f573712c5fe396171acbcc350c1b7</anchor>
      <arglist>(const SbVec3f &amp;barycentric, const SbVec3f &amp;v0, const SbVec3f &amp;v1, const SbVec3f &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>01a8dba4f91c56a4f7fd8a1c2fe0b74f</anchor>
      <arglist>(const SbVec3d &amp;v)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>8f9f779971ae5c56b4532877935a565d</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>c3e6af44dab994e47ba3bbd2bf7d3703</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <name>operator *=</name>
      <anchor>f064f69672538e2fb0dd7274ff1e2f7a</anchor>
      <arglist>(const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator/=</name>
      <anchor>3eb53bca1c6c3214c1af27c3b7f34aaa</anchor>
      <arglist>(const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator+=</name>
      <anchor>95cebde53946ab6a00318ea4d9bd5576</anchor>
      <arglist>(const SbVec3f &amp;u)</arglist>
    </member>
    <member kind="function">
      <name>operator-=</name>
      <anchor>4f41303106a7e60196b0c708ca70e80e</anchor>
      <arglist>(const SbVec3f &amp;u)</arglist>
    </member>
    <member kind="function">
      <name>operator-</name>
      <anchor>505ad1e2c216bcb0a49c383431777419</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>7170fa390bee7c8be559c23ec99518a4</anchor>
      <arglist>(FILE *fp) const </arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>13e05705048e015d9f22f81609a938b3</anchor>
      <arglist>(const SbVec3f &amp;v, const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>9e29ced3400db36e4f235e5fe071bbae</anchor>
      <arglist>(const float d, const SbVec3f &amp;v)</arglist>
    </member>
    <member kind="function">
      <name>operator/</name>
      <anchor>c053237f0b701cc9969a7f5acfe682bd</anchor>
      <arglist>(const SbVec3f &amp;v, const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator+</name>
      <anchor>4a0d56698007ef9dced0e01822984034</anchor>
      <arglist>(const SbVec3f &amp;v1, const SbVec3f &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator-</name>
      <anchor>6c05f978707fca7bcd7df43d9ee12f33</anchor>
      <arglist>(const SbVec3f &amp;v1, const SbVec3f &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>75471273e406ad2f2df577bb83e02986</anchor>
      <arglist>(const SbVec3f &amp;v1, const SbVec3f &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>64345dd21abc88550089caa1860ecc45</anchor>
      <arglist>(const SbVec3f &amp;v1, const SbVec3f &amp;v2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbVec3fList</name>
    <base>SbPList</base>
    <filename>classSbVec3fList.html</filename>
    <member kind="function">
      <name>SbVec3fList</name>
      <anchor>1e7610fb5a9ce564075095b632f6b322</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SbVec3fList</name>
      <anchor>8fcd4eb25a06eba2bc6dcfb9d3287c45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>9899c06fc9b57c6d203c542791bba3c6</anchor>
      <arglist>(const SbVec3f *item)</arglist>
    </member>
    <member kind="function">
      <name>insert</name>
      <anchor>dc8c71f530c7b2cdd6e2c61c07b84e92</anchor>
      <arglist>(const SbVec3f *item, const int insertbefore)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>3935b67deed30958ceebab1bf5a71e86</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbVec3s</name>
    <filename>classSbVec3s.html</filename>
    <member kind="function">
      <name>SbVec3s</name>
      <anchor>8a17743467745471b1b30c6bf00a181a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbVec3s</name>
      <anchor>31fd3dc5ec1fddb163f9f6a88ae89190</anchor>
      <arglist>(const short v[3])</arglist>
    </member>
    <member kind="function">
      <name>SbVec3s</name>
      <anchor>8bf2fef22d7a67455766557eb34d1c0d</anchor>
      <arglist>(const short x, const short y, const short z)</arglist>
    </member>
    <member kind="function">
      <name>dot</name>
      <anchor>7bbf8d8436c367d776a31e68956259b7</anchor>
      <arglist>(const SbVec3s &amp;v) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>502fec3919ce6e5ae80f30b77a7b07d6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>40172f9d6dce70b746e9eb094556077b</anchor>
      <arglist>(short &amp;x, short &amp;y, short &amp;z) const </arglist>
    </member>
    <member kind="function">
      <name>negate</name>
      <anchor>38e6999933ca957c0af4ab78e07b8a67</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>13bcd6f18c9b72e0398932ebc2c3f2be</anchor>
      <arglist>(const short v[3])</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>0f574726158e8fb402151a7105b4fedf</anchor>
      <arglist>(const short x, const short y, const short z)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>8b52182d50e116faf1c1ce32145ee056</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>294a8ccd90ef1e363ddd9541b5532e5b</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <name>operator *=</name>
      <anchor>cc3fc5c180cbb17ac9134193492d8ac5</anchor>
      <arglist>(int d)</arglist>
    </member>
    <member kind="function">
      <name>operator *=</name>
      <anchor>0c0d8076e2b31797f208bbfc5d6db62f</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <name>operator/=</name>
      <anchor>40824232039d0b271ca7f0543d95197c</anchor>
      <arglist>(int d)</arglist>
    </member>
    <member kind="function">
      <name>operator/=</name>
      <anchor>1ca5b77e6a490548f857b6d94e6a0638</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <name>operator+=</name>
      <anchor>af5363e94cdd86b0db279ca413128093</anchor>
      <arglist>(const SbVec3s &amp;u)</arglist>
    </member>
    <member kind="function">
      <name>operator-=</name>
      <anchor>5b2c0a55c2c92c7b8d3486bb46231b5a</anchor>
      <arglist>(const SbVec3s &amp;u)</arglist>
    </member>
    <member kind="function">
      <name>operator-</name>
      <anchor>ff0430528c83a8f9f060437389eb5763</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>235d9a29c7cb17fb8998a45579762b76</anchor>
      <arglist>(FILE *fp) const </arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>2ec51695f97a1a267b0192eaeafa0b83</anchor>
      <arglist>(const SbVec3s &amp;v, int d)</arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>08e8622267cacb0e1ae4d13b602ae375</anchor>
      <arglist>(const SbVec3s &amp;v, double d)</arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>2f7d43fffe89c51d7c59a5099ff930a6</anchor>
      <arglist>(int d, const SbVec3s &amp;v)</arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>59869acea93e68a76629ddcc142b00f2</anchor>
      <arglist>(double d, const SbVec3s &amp;v)</arglist>
    </member>
    <member kind="function">
      <name>operator/</name>
      <anchor>03691fd07c4ea890fbd6e64a218b3003</anchor>
      <arglist>(const SbVec3s &amp;v, int d)</arglist>
    </member>
    <member kind="function">
      <name>operator/</name>
      <anchor>4ab17190eb376a2158952bff4561839a</anchor>
      <arglist>(const SbVec3s &amp;v, double d)</arglist>
    </member>
    <member kind="function">
      <name>operator+</name>
      <anchor>0fae636d216f98ed3bc952f87c2b76e7</anchor>
      <arglist>(const SbVec3s &amp;v1, const SbVec3s &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator-</name>
      <anchor>a2c20aecadbd48a78c765d80f779f7bf</anchor>
      <arglist>(const SbVec3s &amp;v1, const SbVec3s &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>17f16774265457801b432b293eaed06a</anchor>
      <arglist>(const SbVec3s &amp;v1, const SbVec3s &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>3559605a112446e3796c80b87e6389d1</anchor>
      <arglist>(const SbVec3s &amp;v1, const SbVec3s &amp;v2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbVec4f</name>
    <filename>classSbVec4f.html</filename>
    <member kind="function">
      <name>SbVec4f</name>
      <anchor>8906e1c6054ce209d1f6d77a21515e44</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbVec4f</name>
      <anchor>d731535c83725d6bdc900b9a30ab4c92</anchor>
      <arglist>(const float v[4])</arglist>
    </member>
    <member kind="function">
      <name>SbVec4f</name>
      <anchor>0a79548c8822916bf96a99a5995dd90f</anchor>
      <arglist>(const float x, const float y, const float z, const float w)</arglist>
    </member>
    <member kind="function">
      <name>dot</name>
      <anchor>b34395948ac0e4ed013003056bae3b13</anchor>
      <arglist>(const SbVec4f &amp;v) const </arglist>
    </member>
    <member kind="function">
      <name>equals</name>
      <anchor>8770211df17c1b30c11397da39d14378</anchor>
      <arglist>(const SbVec4f &amp;v, const float tolerance) const </arglist>
    </member>
    <member kind="function">
      <name>getReal</name>
      <anchor>741cad8de0f09ea5518814d3f0ad20f3</anchor>
      <arglist>(SbVec3f &amp;v) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>88b6add43c67f4711a2c327df8a4a4d0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>05298e0798e51c1e66e686a9069345f7</anchor>
      <arglist>(float &amp;x, float &amp;y, float &amp;z, float &amp;w) const </arglist>
    </member>
    <member kind="function">
      <name>length</name>
      <anchor>d7c1ade932e4896ddb06bf7e09f6ba1b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>negate</name>
      <anchor>c87c676afcddcdd4c4a8e4dfacaaf81e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>normalize</name>
      <anchor>ee89703dbbd922b7c3df9084787af3bd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>5a641bc3d9805f860ed2c5d2b635389e</anchor>
      <arglist>(const float v[4])</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>4f92d0ae6e38ef8923322f16e5e989d1</anchor>
      <arglist>(const float x, const float y, const float z, const float w)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>49d75700e539c942cb4ef1170e24bd1f</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>b4c8c58b6230cac57ed06c9412215625</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <name>operator *=</name>
      <anchor>e5de7792ff53c80fa93e22a23886f850</anchor>
      <arglist>(const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator/=</name>
      <anchor>1dc2ec092d78bafdd537991e69106c34</anchor>
      <arglist>(const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator+=</name>
      <anchor>4a1db2e8f4337c1c37fc917364d0cae4</anchor>
      <arglist>(const SbVec4f &amp;u)</arglist>
    </member>
    <member kind="function">
      <name>operator-=</name>
      <anchor>89c1964008047f607a7ad594c574697d</anchor>
      <arglist>(const SbVec4f &amp;u)</arglist>
    </member>
    <member kind="function">
      <name>operator-</name>
      <anchor>604c1b9929a75b6f41e9faa9c1d670ca</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>ea5573a058fb5a76724790c834e9c1d3</anchor>
      <arglist>(FILE *fp) const </arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>716af4e01c6973327ea5463146f8c209</anchor>
      <arglist>(const SbVec4f &amp;v, const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator *</name>
      <anchor>684f7ed2d131f153928da0f3615e8e1b</anchor>
      <arglist>(const float d, const SbVec4f &amp;v)</arglist>
    </member>
    <member kind="function">
      <name>operator/</name>
      <anchor>eec2f365a6b49407cc754a466aff9506</anchor>
      <arglist>(const SbVec4f &amp;v, const float d)</arglist>
    </member>
    <member kind="function">
      <name>operator+</name>
      <anchor>bc1db057a8df5be3eb7f5d19f90b0e58</anchor>
      <arglist>(const SbVec4f &amp;v1, const SbVec4f &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator-</name>
      <anchor>eb503e55d6b40b30f6306f6689fb37b8</anchor>
      <arglist>(const SbVec4f &amp;v1, const SbVec4f &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>aaeee53660c883978e3ab2b0cfc27a77</anchor>
      <arglist>(const SbVec4f &amp;v1, const SbVec4f &amp;v2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>63873557b254683d8b5313b0615dc061</anchor>
      <arglist>(const SbVec4f &amp;v1, const SbVec4f &amp;v2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbViewportRegion</name>
    <filename>classSbViewportRegion.html</filename>
    <member kind="function">
      <name>SbViewportRegion</name>
      <anchor>f522056ea9d27359b03cb2b88536f0e2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbViewportRegion</name>
      <anchor>f415380060c898ed123ba1b3cf120802</anchor>
      <arglist>(short width, short height)</arglist>
    </member>
    <member kind="function">
      <name>SbViewportRegion</name>
      <anchor>9573bcfcce0b7e9ffa774d82f0fc09ad</anchor>
      <arglist>(SbVec2s winSize)</arglist>
    </member>
    <member kind="function">
      <name>SbViewportRegion</name>
      <anchor>8b9832f4a55148a0553529c1c6cc0966</anchor>
      <arglist>(const SbViewportRegion &amp;vpReg)</arglist>
    </member>
    <member kind="function">
      <name>setWindowSize</name>
      <anchor>0ae54dc0d8416d2cccdb0b3d6d3ae640</anchor>
      <arglist>(short width, short height)</arglist>
    </member>
    <member kind="function">
      <name>setWindowSize</name>
      <anchor>8772016f85c60dd7737eabca3483f0da</anchor>
      <arglist>(SbVec2s winSize)</arglist>
    </member>
    <member kind="function">
      <name>setViewport</name>
      <anchor>ee9986763e2234c411c8822206db539d</anchor>
      <arglist>(float left, float bottom, float width, float height)</arglist>
    </member>
    <member kind="function">
      <name>setViewport</name>
      <anchor>d5f9e32fb1fde9ea5825572c76d06e57</anchor>
      <arglist>(SbVec2f origin, SbVec2f size)</arglist>
    </member>
    <member kind="function">
      <name>setViewportPixels</name>
      <anchor>2977b42c205177a6e89b3860fd823951</anchor>
      <arglist>(short left, short bottom, short width, short height)</arglist>
    </member>
    <member kind="function">
      <name>setViewportPixels</name>
      <anchor>98cd719e0afc2b942f0cd99110b8aff0</anchor>
      <arglist>(SbVec2s origin, SbVec2s size)</arglist>
    </member>
    <member kind="function">
      <name>getWindowSize</name>
      <anchor>1a45d79dc096e081c3b2d47aec122531</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getViewportOrigin</name>
      <anchor>bff18efe5fbac028929a5a59e2422fd9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getViewportOriginPixels</name>
      <anchor>9f44010af49a6646ca6e584b2922d585</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getViewportSize</name>
      <anchor>2a26d4d33e2dc855e6b413a1d842620e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getViewportSizePixels</name>
      <anchor>18fc6778e0c34a74ed2b40a08e9c52d8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getViewportAspectRatio</name>
      <anchor>3cd6ad89d36e1785cd78502cce109831</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>scaleWidth</name>
      <anchor>11855a05e9ed450a22cddffdcb373e58</anchor>
      <arglist>(float ratio)</arglist>
    </member>
    <member kind="function">
      <name>scaleHeight</name>
      <anchor>b3249cb0a55be9ced4681951283a176e</anchor>
      <arglist>(float ratio)</arglist>
    </member>
    <member kind="function">
      <name>setPixelsPerInch</name>
      <anchor>13bf92c587ea65ea35bafbd342b11d44</anchor>
      <arglist>(float ppi)</arglist>
    </member>
    <member kind="function">
      <name>getPixelsPerInch</name>
      <anchor>5da22464468f5e09f14b2c0b53768677</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPixelsPerPoint</name>
      <anchor>dd259b948edb8f5a95b8739b63497e72</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>06f53e143b12459c2a10bf8de961c5aa</anchor>
      <arglist>(FILE *file) const </arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>759c633952740a45c23994bec51fb830</anchor>
      <arglist>(const SbViewportRegion &amp;reg1, const SbViewportRegion &amp;reg2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>a4ea8adbc5071d1d32e113fbeaeb1597</anchor>
      <arglist>(const SbViewportRegion &amp;reg1, const SbViewportRegion &amp;reg2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbViewVolume</name>
    <filename>classSbViewVolume.html</filename>
    <member kind="function">
      <name>ProjectionType</name>
      <anchor>769616c39bae7ee4e78bac640e0bdaf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>RTHOGRAPHIC</name>
      <anchor>769616c39bae7ee4e78bac640e0bdaf419f676b5e880a7189080151156b64337</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ERSPECTIVE</name>
      <anchor>769616c39bae7ee4e78bac640e0bdaf49538d7439b5b05a137f9e33f8bd4e014</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SbViewVolume</name>
      <anchor>cbcf2f7f32cf0e74b4655367b4a8fe94</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SbViewVolume</name>
      <anchor>bc5d921466ff37e56d462f2d126ab87d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getMatrices</name>
      <anchor>af5df672ba977f9b5b4d83e1682f6de9</anchor>
      <arglist>(SbMatrix &amp;affine, SbMatrix &amp;proj) const </arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>5bd9601e086a5b27d3bfd19a6f16a9b0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getCameraSpaceMatrix</name>
      <anchor>6415ae9f9f4d5daaaababae549247666</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>projectPointToLine</name>
      <anchor>7cfeb60597f0834c09ce41b35774699a</anchor>
      <arglist>(const SbVec2f &amp;pt, SbLine &amp;line) const </arglist>
    </member>
    <member kind="function">
      <name>projectPointToLine</name>
      <anchor>a41f86414351097ed9299823fdab175c</anchor>
      <arglist>(const SbVec2f &amp;pt, SbVec3f &amp;line0, SbVec3f &amp;line1) const </arglist>
    </member>
    <member kind="function">
      <name>projectToScreen</name>
      <anchor>477a722363ab50a7d0b75af4371dbddc</anchor>
      <arglist>(const SbVec3f &amp;src, SbVec3f &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <name>getPlane</name>
      <anchor>4d2915f546da802d20f297f8afa8fb47</anchor>
      <arglist>(const float distFromEye) const </arglist>
    </member>
    <member kind="function">
      <name>getSightPoint</name>
      <anchor>ae79513a8eb36402c510ccfcd2a7203d</anchor>
      <arglist>(const float distFromEye) const </arglist>
    </member>
    <member kind="function">
      <name>getPlanePoint</name>
      <anchor>d8d8c82474ce1b6c84a342accc813e28</anchor>
      <arglist>(const float distFromEye, const SbVec2f &amp;normPoint) const </arglist>
    </member>
    <member kind="function">
      <name>getAlignRotation</name>
      <anchor>f7b34a0e4aaa5f6d14909f9d6fce5d96</anchor>
      <arglist>(SbBool rightAngleOnly=0) const </arglist>
    </member>
    <member kind="function">
      <name>getWorldToScreenScale</name>
      <anchor>c45918c8f816fdd10bd89edf1447c780</anchor>
      <arglist>(const SbVec3f &amp;worldCenter, float normRadius) const </arglist>
    </member>
    <member kind="function">
      <name>projectBox</name>
      <anchor>90c8bfc8c2826c0ec832c3025bc41df6</anchor>
      <arglist>(const SbBox3f &amp;box) const </arglist>
    </member>
    <member kind="function">
      <name>narrow</name>
      <anchor>10f0ca68486f3dc6fa9253e705573d5a</anchor>
      <arglist>(float left, float bottom, float right, float top) const </arglist>
    </member>
    <member kind="function">
      <name>narrow</name>
      <anchor>b0056db207f6a96c7c0892b83217f3bd</anchor>
      <arglist>(const SbBox3f &amp;box) const </arglist>
    </member>
    <member kind="function">
      <name>ortho</name>
      <anchor>74cccdb71cc35fb5b3b084917031ebe7</anchor>
      <arglist>(float left, float right, float bottom, float top, float nearval, float farval)</arglist>
    </member>
    <member kind="function">
      <name>perspective</name>
      <anchor>a62d154de3ec060318a8bc49d59c5422</anchor>
      <arglist>(float fovy, float aspect, float nearval, float farval)</arglist>
    </member>
    <member kind="function">
      <name>frustum</name>
      <anchor>3bdbe7dc553465904db3b42fa295b48e</anchor>
      <arglist>(float left, float right, float bottom, float top, float nearval, float farval)</arglist>
    </member>
    <member kind="function">
      <name>rotateCamera</name>
      <anchor>7f048618c8b356e7cc5af37d81972a5d</anchor>
      <arglist>(const SbRotation &amp;q)</arglist>
    </member>
    <member kind="function">
      <name>translateCamera</name>
      <anchor>7a29ff8f99f24a9d16defe527ff0fc0f</anchor>
      <arglist>(const SbVec3f &amp;v)</arglist>
    </member>
    <member kind="function">
      <name>zVector</name>
      <anchor>b702af9ddc8697b134e314e70e84b602</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>zNarrow</name>
      <anchor>192fb38eabeddd0d2a7fae8cc27fc2a4</anchor>
      <arglist>(float nearval, float farval) const </arglist>
    </member>
    <member kind="function">
      <name>scale</name>
      <anchor>8ba76dfded56d0e9b41a3c4f8adec007</anchor>
      <arglist>(float factor)</arglist>
    </member>
    <member kind="function">
      <name>scaleWidth</name>
      <anchor>9d2eb384e69810c23df5748342e081d3</anchor>
      <arglist>(float ratio)</arglist>
    </member>
    <member kind="function">
      <name>scaleHeight</name>
      <anchor>93de473b12e0847fd6aa31a9d143f5c9</anchor>
      <arglist>(float ratio)</arglist>
    </member>
    <member kind="function">
      <name>getProjectionType</name>
      <anchor>f06b504f57b8eb466f9e0c5409263943</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getProjectionPoint</name>
      <anchor>d3d957bb6ec1c6c4fab52778b3cceae0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getProjectionDirection</name>
      <anchor>2cb3b07c63a0d809a1470ab2ad5b8f21</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNearDist</name>
      <anchor>d4e8a159275d69742ca57f2c8b929666</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getWidth</name>
      <anchor>c45e31a043e90e6475e8248d1b12e068</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getHeight</name>
      <anchor>dcd3d826f3cf1b15ebd29f8e643e15bd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getDepth</name>
      <anchor>82d1fb3a6211c10da97258d098f14ab6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>1251fb193ab40917dafc4158a55c14da</anchor>
      <arglist>(FILE *fp) const </arglist>
    </member>
    <member kind="function">
      <name>getViewVolumePlanes</name>
      <anchor>e3f1ef1529f1fb9b20f8e6fede8f09c4</anchor>
      <arglist>(SbPlane planes[6]) const </arglist>
    </member>
    <member kind="function">
      <name>transform</name>
      <anchor>0f836b45107fedfea1a212aeaed38a3e</anchor>
      <arglist>(const SbMatrix &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <name>getViewUp</name>
      <anchor>7883d7582364e2b09166a84df7cac841</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>629e0432230dcb411e9d66db4b48c565</anchor>
      <arglist>(const SbVec3f &amp;p) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>a253278e65ec9e7480d7fb5c981f1b46</anchor>
      <arglist>(const SbVec3f &amp;p0, const SbVec3f &amp;p1, SbVec3f &amp;closestpoint) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>3dfd57079062c0e4d6c1eeda7002be07</anchor>
      <arglist>(const SbBox3f &amp;box) const </arglist>
    </member>
    <member kind="function">
      <name>outsideTest</name>
      <anchor>e3d998894473b6756d8046aee13b6b81</anchor>
      <arglist>(const SbPlane &amp;p, const SbVec3f &amp;bmin, const SbVec3f &amp;bmax) const </arglist>
    </member>
    <member kind="function">
      <name>type</name>
      <anchor>8299568cb7ad6fda09eec92adede6877</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>projPoint</name>
      <anchor>b473472322064d5b790a0361fc31ec00</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>projDir</name>
      <anchor>3d66037590e6ad2f2ba8d8e63cb72e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>nearDist</name>
      <anchor>063842c5cf236a3b5351fa4241679730</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>nearToFar</name>
      <anchor>6c20b2e40244a5c83d52e97c169d7e0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>llf</name>
      <anchor>df2952f98c0edf4ae4416858d906f3f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lrf</name>
      <anchor>152c5ad6f9182d94dbc8e36bf1c994e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ulf</name>
      <anchor>cdeb4aa5b5c465b64a90dddcd8f06ffd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SbXfBox3f</name>
    <base>SbBox3f</base>
    <filename>classSbXfBox3f.html</filename>
    <member kind="function">
      <name>SbXfBox3f</name>
      <anchor>2adb39957d667d7bdc8d3b2c73bf03ee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SbXfBox3f</name>
      <anchor>febdecf40efde099111da9108b6c0f0a</anchor>
      <arglist>(const SbVec3f &amp;boxmin, const SbVec3f &amp;boxmax)</arglist>
    </member>
    <member kind="function">
      <name>SbXfBox3f</name>
      <anchor>0434ffabf617a0709fd8906650777425</anchor>
      <arglist>(const SbBox3f &amp;box)</arglist>
    </member>
    <member kind="function">
      <name>~SbXfBox3f</name>
      <anchor>5f7d0963b5d178faec3752339e08edda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>setTransform</name>
      <anchor>8283248fd57a70c3c9c9fe15a04733f2</anchor>
      <arglist>(const SbMatrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <name>getTransform</name>
      <anchor>edbafa6684b44dff0b5248f6541ae9fb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInverse</name>
      <anchor>4a35397bc8d3eafb53acdac3f5c7b939</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getCenter</name>
      <anchor>50ad1e2df8b4c2373902abd2194cad54</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>extendBy</name>
      <anchor>f8ea6006198bccfd6857d43fbb853db0</anchor>
      <arglist>(const SbVec3f &amp;pt)</arglist>
    </member>
    <member kind="function">
      <name>extendBy</name>
      <anchor>ca7f30a621d18216f8ed2cc9fb621f9a</anchor>
      <arglist>(const SbBox3f &amp;bb)</arglist>
    </member>
    <member kind="function">
      <name>extendBy</name>
      <anchor>05f077bbffbfae38d6a6cdb76aba253f</anchor>
      <arglist>(const SbXfBox3f &amp;bb)</arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>333003a0d994f1d773646c4065b66d93</anchor>
      <arglist>(const SbVec3f &amp;pt) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>6424cd04c1c287437f2298c263ef8dd9</anchor>
      <arglist>(const SbBox3f &amp;bb) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>2029b20c3ed2342d74c9b43bf6d75d45</anchor>
      <arglist>(const SbXfBox3f &amp;bb) const </arglist>
    </member>
    <member kind="function">
      <name>getSpan</name>
      <anchor>d90372acfef5c095bb3b68cbf409f116</anchor>
      <arglist>(const SbVec3f &amp;direction, float &amp;dMin, float &amp;dMax) const </arglist>
    </member>
    <member kind="function">
      <name>project</name>
      <anchor>6365153aae3157ac1f6e67a78adbab58</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>transform</name>
      <anchor>011e2b7df656b970e4bf09937cda6498</anchor>
      <arglist>(const SbMatrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <name>getVolume</name>
      <anchor>f6732f4fef8dcb3b5917b3c9d8d2ba83</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>3c3d8bbfbe74aac42630c51595045046</anchor>
      <arglist>(FILE *file) const </arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>9b6bfb6e1bad9a583fe7cae59cec244f</anchor>
      <arglist>(const SbXfBox3f &amp;b1, const SbXfBox3f &amp;b2)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>4a4b5fde749599d4e7db361886b36e72</anchor>
      <arglist>(const SbXfBox3f &amp;b1, const SbXfBox3f &amp;b2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoAccumulatedElement</name>
    <base>SoElement</base>
    <filename>classSoAccumulatedElement.html</filename>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>9290a9037e3419ccbdbd47af99edda8c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>63a7385d19911ea163693ccc89e13a3d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>57c03a9313375b2548dbf4d58d1f9ffc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>matches</name>
      <anchor>8d960ab8dca94f56c4f8493d2eaa0508</anchor>
      <arglist>(const SoElement *element) const </arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>e73af63a5def9e9f13c08c0d67cbed27</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>push</name>
      <anchor>a056ead3804fe3818d8ca55e67ef38d0</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>clearNodeIds</name>
      <anchor>70f1473b38a1d7337d643ee8b4e59bc6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addNodeId</name>
      <anchor>0132837d8e145edce7586e2b3169cf20</anchor>
      <arglist>(const SoNode *const node)</arglist>
    </member>
    <member kind="function">
      <name>setNodeId</name>
      <anchor>72bfdec083dc26e5b36bbd7a0bccbd47</anchor>
      <arglist>(const SoNode *const node)</arglist>
    </member>
    <member kind="function">
      <name>copyNodeIds</name>
      <anchor>e65a5e4a450f584709bf55bb18a3edb8</anchor>
      <arglist>(const SoAccumulatedElement *copyfrom)</arglist>
    </member>
    <member kind="function">
      <name>copyMatchInfo</name>
      <anchor>6e21205ffcb6a05b7573e5b22c0fe81f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>captureThis</name>
      <anchor>77c8c1edfcfa96314e39456d67b4137f</anchor>
      <arglist>(SoState *state) const </arglist>
    </member>
    <member kind="function">
      <name>nodeIds</name>
      <anchor>6ad9023f4ff2487772a486f0d5057323</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoAction</name>
    <filename>classSoAction.html</filename>
    <member kind="function">
      <name>AppliedCode</name>
      <anchor>1c1dcf644f0e8bc1acd92f9cd8c917d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>PathCode</name>
      <anchor>0942e2ce7d88ebc8e7cd10cf26310c67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>~SoAction</name>
      <anchor>3b9ef122ad457af68deb845e09048b61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>SoAction</name>
      <anchor>7f6ac9fad4b83a66a321adfa48ebacd1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6fca4d3db681ecea3bd1d5c24d1f160d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClasses</name>
      <anchor>9c1f8064ac89d9e36d36a8d05365e26a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>3a714aae7f852be330d276041f7bc26e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>364ad60918a4d20ebdc9635457fe331c</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function">
      <name>isOfType</name>
      <anchor>82e33af1a24879a4dfd36a11a9832689</anchor>
      <arglist>(SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>d2d6ddb297b3a1f5b80026db5fd5e616</anchor>
      <arglist>(SoNode *root)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>8f922db782cb971042da8adc64f61d47</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>ac2b4560d76ef7d1c00f36db94b26685</anchor>
      <arglist>(const SoPathList &amp;pathlist, SbBool obeysrules=0)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>984b580685859d42c4505980249fd409</anchor>
      <arglist>(SoAction *beingApplied)</arglist>
    </member>
    <member kind="function">
      <name>invalidateState</name>
      <anchor>3fbc8efc139853a56e707baecf02b357</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>nullAction</name>
      <anchor>6dd54a728307c37d3cd87b2891b9359e</anchor>
      <arglist>(SoAction *action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>getWhatAppliedTo</name>
      <anchor>4d0897cb9be1eecfdecefe1d997c7bfb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNodeAppliedTo</name>
      <anchor>bafb324d344d32013ed45e7d02cfa230</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPathAppliedTo</name>
      <anchor>26927425cfa1f5cbcad875a94493c2a5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPathListAppliedTo</name>
      <anchor>ddea4390ccdaaaa3457d1f243ff95b0b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOriginalPathListAppliedTo</name>
      <anchor>258606e1d65239e8c4008da42a49c59c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isLastPathListAppliedTo</name>
      <anchor>ec41770acf5a27f1b82a7e031571d101</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPathCode</name>
      <anchor>42b2f4960252071194099b4a965eefa2</anchor>
      <arglist>(int &amp;numindices, const int *&amp;indices)</arglist>
    </member>
    <member kind="function">
      <name>traverse</name>
      <anchor>805627d07445a9c3a7e6324748aac2a9</anchor>
      <arglist>(SoNode *const node)</arglist>
    </member>
    <member kind="function">
      <name>hasTerminated</name>
      <anchor>1ae6a4f107b03fb899743f5f3d5fc7d3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getCurPath</name>
      <anchor>f5920f3da63a6ba8577dc56621815341</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getState</name>
      <anchor>a6cf40cb31bb8371eb5d9a847ce9c944</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getCurPathCode</name>
      <anchor>bba574ba5288668051405a9fcd3678aa</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getCurPathTail</name>
      <anchor>4e9810cb526353255fedf04792151c2d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>usePathCode</name>
      <anchor>ea5650e3b7ae6207c4c3d675e83073b5</anchor>
      <arglist>(int &amp;numindices, const int *&amp;indices)</arglist>
    </member>
    <member kind="function">
      <name>pushCurPath</name>
      <anchor>148ece4bf4cda79914ee3a2116c05d09</anchor>
      <arglist>(const int childindex, SoNode *node=NULL)</arglist>
    </member>
    <member kind="function">
      <name>popCurPath</name>
      <anchor>88ceb9648c0f51d7ba87475ca8555f28</anchor>
      <arglist>(const PathCode prevpathcode)</arglist>
    </member>
    <member kind="function">
      <name>pushCurPath</name>
      <anchor>bebcc05d2d935803a3c95310c9447614</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>popPushCurPath</name>
      <anchor>df8242136a44ff3af40ea102b372e4e1</anchor>
      <arglist>(const int childindex, SoNode *node=NULL)</arglist>
    </member>
    <member kind="function">
      <name>popCurPath</name>
      <anchor>989bcb87598bf55b31bf0704189abb11</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>switchToPathTraversal</name>
      <anchor>4285818426cf039bd556b537398d9ece</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>switchToNodeTraversal</name>
      <anchor>ccfc280f70bc8f888f61890f07a4aac2</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>beginTraversal</name>
      <anchor>893a67a9bf2e7b5b5ef0f1f36f1b8097</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>endTraversal</name>
      <anchor>9af52ee33d0effeba2f23d9c3d4d6ad0</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>setTerminated</name>
      <anchor>a968d7390c6d9ec862e0c9c1c7e48de5</anchor>
      <arglist>(const SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>92a36e12e654c3fb3838aebbfe0d2ced</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>shouldCompactPathList</name>
      <anchor>074946b7ebc44bed35f915d04680cb36</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>c3a072966a0f9fa9f96fa1affc44fe9b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>655c3dbf9f093cdfaa7cc896ca54c0f3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>state</name>
      <anchor>5b4ccb851346b95c3c3562b1824d258b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>traversalMethods</name>
      <anchor>00703b6a5c0bac45ac95756f7eb054af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoActionMethodList</name>
    <base>SbPList</base>
    <filename>classSoActionMethodList.html</filename>
    <member kind="function">
      <name>operator[]</name>
      <anchor>92d1a05963d4c52df1d6c2cf1968e625</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>SoActionMethodList</name>
      <anchor>f86c8480152c573d9e75e835aa72bc74</anchor>
      <arglist>(SoActionMethodList *const parentlist)</arglist>
    </member>
    <member kind="function">
      <name>~SoActionMethodList</name>
      <anchor>474f294ac9475da3d05f269dd47c7699</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>79983ab40c7c4be74506aff39f9e0a72</anchor>
      <arglist>(const SoType node, const SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>setUp</name>
      <anchor>85d2c887bf7ccc5d8fbc3cb9e7df0050</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoAlarmSensor</name>
    <base>SoTimerQueueSensor</base>
    <filename>classSoAlarmSensor.html</filename>
    <member kind="function">
      <name>SoAlarmSensor</name>
      <anchor>114d31b978c009fb47f419bc356d4f88</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoAlarmSensor</name>
      <anchor>2b5ca4eee57d66a63d73a89cf9324b2a</anchor>
      <arglist>(SoSensorCB *func, void *data)</arglist>
    </member>
    <member kind="function">
      <name>~SoAlarmSensor</name>
      <anchor>b504b1bd587ec26c7ffcbc5a72ac3f1f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setTime</name>
      <anchor>f1886674d1187f94ff408349f738d3cc</anchor>
      <arglist>(const SbTime &amp;abstime)</arglist>
    </member>
    <member kind="function">
      <name>setTimeFromNow</name>
      <anchor>8988efd19de1d900859696a628e8e55f</anchor>
      <arglist>(const SbTime &amp;reltime)</arglist>
    </member>
    <member kind="function">
      <name>getTime</name>
      <anchor>420fd1f77e890846947be9e08d64b762</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>schedule</name>
      <anchor>457a8626f5856284e66367e5ec8bf54a</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoAnnotation</name>
    <base>SoSeparator</base>
    <filename>classSoAnnotation.html</filename>
    <member kind="function">
      <name>SoAnnotation</name>
      <anchor>1cf5f2290120ddca31ae6581729589e6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoAnnotation</name>
      <anchor>d07f41206e3fbf738ba76ae86c5f68d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>31d78e82576159eda685483cf216101d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>26b898ffe58bc938ca94a80cbdc85789</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>3c0c5d1497c4fce4b033d892137dbd9a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>63d898683c32ee8bd99d2429e67c0130</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f9a5a2c536ca9ef9a7d2e2b1c522a66e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>013d26bdf7954d82710e1cc4b53802c3</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderBelowPath</name>
      <anchor>c163eb13b6b28c244073cd6fd51e6152</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderInPath</name>
      <anchor>692f4cec9f0b9171b92c2738118ee756</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderOffPath</name>
      <anchor>3ebc773e02a9a58dd5bce711c093dc3b</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoAntiSquish</name>
    <base>SoTransformation</base>
    <filename>classSoAntiSquish.html</filename>
    <member kind="function">
      <name>Sizing</name>
      <anchor>cf81274786acabfd0ae29fb4153e2c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoAntiSquish</name>
      <anchor>064915282a46650395701d0b89782d87</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoAntiSquish</name>
      <anchor>eea57d2f55d6479b85f7a74c0049b558</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>a872df449803b935cc2f3e52dc37ede4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>b4d3957b02985133c59f6a2e3971433e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>6b254e814dd84817c0711031e4a76ceb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>c2199444299a7325deb9af9cb1a2064d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a9e84dd364887e052b91493f9da76d8d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>recalc</name>
      <anchor>a73905e1f7b5e08832bd8853347526d5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>e4b654892639e4b97eb6a96091e6647c</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>dfc66ffab1845a91be6dcfe61e6d31ba</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>2681fcaee3e9fe97cb1162e14e5333bc</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>78d48e6a4e1e736d074f1ba199d10b45</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>7960bb46f40ff784d69bca61a7494b05</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>db7ca96c12f3465adc814439f9662307</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getUnsquishingMatrix</name>
      <anchor>20143231ceb173a193544c58f9404543</anchor>
      <arglist>(const SbMatrix &amp;squishedmatrix, const SbBool calcinverse, SbMatrix &amp;getinverse)</arglist>
    </member>
    <member kind="function">
      <name>sizing</name>
      <anchor>6be9e92711ab95e09bc2c3ebe1a96456</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>recalcAlways</name>
      <anchor>5a3a74c44b6aa014a46cf87bc6242708</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoAppearanceKit</name>
    <base>SoBaseKit</base>
    <filename>classSoAppearanceKit.html</filename>
    <member kind="function">
      <name>complexity</name>
      <anchor>b5a0141875eb87adb52bbbdf5852dfec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>drawStyle</name>
      <anchor>d10767ca607d555f9c16d69dec2d0737</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>environment</name>
      <anchor>fe8c238d478c6d1490487b93cd08bef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>font</name>
      <anchor>aa03fc8b0eb249108081070309b5e0ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lightModel</name>
      <anchor>5df4a43944ae0f820a5df6fd8a3919d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>material</name>
      <anchor>81d13b909db3e6b4023634e9ddcd7275</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>texture2</name>
      <anchor>bdd678269f8e607c54327d08ea2abcc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoAppearanceKit</name>
      <anchor>2f85da1bcbcf0455757b9877d4779f4a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoAppearanceKit</name>
      <anchor>a60b9412c5e5fb507bc4dd614125dda9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ac62c6ba7488aa34357e42bd3927ee06</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>9988d8bc10b788df867c41dec500d258</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>94b7de5ab63b61f7b0f8356779b66276</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>33ee7681c99c0e66c7d846158f6c2054</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>93261193b380b8ae831209327242422a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>33e7c3acda4639e12a18110ecbf14206</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>159b646dbf61a3911582af8f51232a39</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>9733ebe8bfd7d6663c2caa96b7be16b8</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoArray</name>
    <base>SoGroup</base>
    <filename>classSoArray.html</filename>
    <member kind="function">
      <name>Origin</name>
      <anchor>cdc932cbda633b70e4204b2c375e88e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoArray</name>
      <anchor>7b5b19902e1608e5ae0d4e0c316ff53b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoArray</name>
      <anchor>70f44e6acafd73e4d9313c5da8194d0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>4fd0028fb86e076708148f84b99d2e73</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>ca8fd6dbac653d1dab16e2f3fd17cd04</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>65360c9301100281dfbbdca0032e4dbc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>b2392814423781627264fe1207f70fa9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0f3450bb88f16019a48f7016314a9cbe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>affectsState</name>
      <anchor>3f1ea72bd413dd99b3a1a098dda034fa</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>50540c8e3a3a5b5be3ac912ea2cdbc1f</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>a61d05d06738bbb23731bf142de990be</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>d89401e284d38c6f420156ef9ed36058</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>818571654048a878fe8ab8c47235a7b3</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>089a7ce14fd5520045cdb7f09ab142f8</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>0f247778200f239aaf14672dc5bb2ec5</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>27043b61deecca1ab00d7e74b6ae24f7</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>da3660b662f2742c4820b776dc5e89ae</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>6733adb6f1458ea049b180420b793ae3</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>58ddb72bd94d39fcc36cd426e2ee7aa7</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>origin</name>
      <anchor>ed1969dc01b91311a250b6d81c7803e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>numElements1</name>
      <anchor>ace726981980dae1ef63db4dab741332</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>numElements2</name>
      <anchor>6e3d902db8a5e82c46b1b1519fced98c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>numElements3</name>
      <anchor>4333cf0af1c029f90f09ad10adec1e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>separation1</name>
      <anchor>88174cbcd5f8b5aa814e0ded07b7fd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>separation2</name>
      <anchor>7336e5f41c2f204be13a9ff9feabde8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>separation3</name>
      <anchor>4077b7549292861935bb568fbe61df43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoAsciiText</name>
    <base>SoShape</base>
    <filename>classSoAsciiText.html</filename>
    <member kind="function">
      <name>SoAsciiTextP</name>
      <anchor>8a58876dc3613b678ec061e198d4d8b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Justification</name>
      <anchor>1e1f759dd2b359aa0bd87d26e79a3b56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EFT</name>
      <anchor>1e1f759dd2b359aa0bd87d26e79a3b5693e6a2224d1a4cc937e3b1e9d767656f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>IGHT</name>
      <anchor>1e1f759dd2b359aa0bd87d26e79a3b569144235c28d36468b935cf443e491f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ENTER</name>
      <anchor>1e1f759dd2b359aa0bd87d26e79a3b56f246d2695e0a7ce61fc77e888a46ea39</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoAsciiText</name>
      <anchor>2c599144d2e23922e86c97618a3e1380</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoAsciiText</name>
      <anchor>1012506235aacfcd44742bc392151b6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>989847db8f75250b774313c82cc0b048</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>495ec70c2e4085c9ffe5b43d68a7fca9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>e78540c125dd5a066e525c3a030e3ace</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>9ff48b7ed9d9fa022a592ec05dd38750</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>ffc3127236d4377f48f373779649fed2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>77e0052bfb8b272e18544f3049ec5d3d</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>4110cfb8b219662d4d6eeebc5a7460bb</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>032afb99a96d7a09f42984bdb7a94f3f</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>5946a656ae3ce21387f61c8d20de4695</anchor>
      <arglist>(SoAction *)</arglist>
    </member>
    <member kind="function">
      <name>createTriangleDetail</name>
      <anchor>54d71fd1dd17941fdfc3f2cebfdaf3b5</anchor>
      <arglist>(SoRayPickAction *action, const SoPrimitiveVertex *v1, const SoPrimitiveVertex *v2, const SoPrimitiveVertex *v3, SoPickedPoint *pp)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>73635e735ace0c83a8d6cc2322248154</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>string</name>
      <anchor>39b13f6d7cf678cb2b362c0150ea1161</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>spacing</name>
      <anchor>75f0c5fb74d94a478e2862c1a9ca5a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>justification</name>
      <anchor>65d9c0914d0e6873df20e305daf2791a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>width</name>
      <anchor>57afac053033f78fc5e129ea497d67f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoAudioDevice</name>
    <filename>classSoAudioDevice.html</filename>
    <member kind="function">
      <name>setGain</name>
      <anchor>00144b61bfdd10e07bdbb12349bb8879</anchor>
      <arglist>(float gain)</arglist>
    </member>
    <member kind="function">
      <name>mute</name>
      <anchor>0d0087802896655f47d0a1c5f4fa4ddd</anchor>
      <arglist>(SbBool mute=1)</arglist>
    </member>
    <member kind="function">
      <name>SoAudioDeviceP</name>
      <anchor>d85c6e5e07706bcc8e32887431bb9039</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>instance</name>
      <anchor>0bfd99bcdbf38a42bb6d8f638f052b27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>45a8be37994dda2c4229d2b1a5cd7ac6</anchor>
      <arglist>(const SbString &amp;devicetype, const SbString &amp;devicename)</arglist>
    </member>
    <member kind="function">
      <name>enable</name>
      <anchor>0309d5f5df046decf3f5d4d6f340225a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>disable</name>
      <anchor>afb8608616f0832f8704755a94b93c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>isEnabled</name>
      <anchor>41606af51e505f617a07b7dcf2f357a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>haveSound</name>
      <anchor>57c79f296ba85c130375e05720833dfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>cleanup</name>
      <anchor>58373f829036eca589d21177724577a2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoAudioRenderAction</name>
    <base>SoAction</base>
    <filename>classSoAudioRenderAction.html</filename>
    <member kind="function">
      <name>callDoAction</name>
      <anchor>e46237817c4ec76c18d94810ce2de9fc</anchor>
      <arglist>(SoAction *action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>callAudioRender</name>
      <anchor>3184e4ca4094f3828a2f8203d30630a2</anchor>
      <arglist>(SoAction *action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>8fd9cf93f3c998d6c98795a61501737b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>68c4f328a25b6c4e32b23e17ca7c28a3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>41696bf9c222a3ec3835f2023b954fbc</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>2ee7798c45ca224841a6514b3785657d</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>142322b30e51c138cb86b01199bf0ffe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>07d33acfa71ba0e21eb43e58a8930691</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>1b218a15806ef5144eed37b934ae5188</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>e0a6c4acae0ca95f231e0b6b64aba116</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>beginTraversal</name>
      <anchor>5e71df0b308b84614713774a261aafd1</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoAuditorList</name>
    <base>SbPList</base>
    <filename>classSoAuditorList.html</filename>
    <member kind="function">
      <name>SoAuditorList</name>
      <anchor>6f992c93f093705896839da9dcec97f1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoAuditorList</name>
      <anchor>d1393662d564c52e779a90d227b5d8c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>3f9378c99629764bde0a6770d193d5d4</anchor>
      <arglist>(void *const auditor, const SoNotRec::Type type)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>703cd04bd3acecab96a7d21342f0e6c7</anchor>
      <arglist>(const int index, void *const auditor, const SoNotRec::Type type)</arglist>
    </member>
    <member kind="function">
      <name>getObject</name>
      <anchor>d51c760da2feb9032d23deee9289526e</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getType</name>
      <anchor>c6d34218032e813f79cf457e2bf5dd58</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getLength</name>
      <anchor>8e34166342dcd9cca4fc715b85954898</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>e5685a3ed1e4b0facf7a8181cbce02b1</anchor>
      <arglist>(void *const auditor, const SoNotRec::Type type) const </arglist>
    </member>
    <member kind="function">
      <name>remove</name>
      <anchor>ed76eab222da67d308b2fb012dda1517</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>remove</name>
      <anchor>1c49ce1ecbbac680df0dc71f34fc96b1</anchor>
      <arglist>(void *const auditor, const SoNotRec::Type type)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>1380a2cc3f2e8c73fd6c0dee02bd43fa</anchor>
      <arglist>(SoNotList *l)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoBase</name>
    <filename>classSoBase.html</filename>
    <member kind="function">
      <name>BaseFlags</name>
      <anchor>42fedf98911431b5a47e7734a228746f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoBase</name>
      <anchor>30a12f045bf793692612e8420a2d8413</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoBase</name>
      <anchor>4e09f562870ef14253a439aa8379c1ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>8419a92b3ac808c6a789673db06776be</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>ref</name>
      <anchor>a5cf76b995f72f073a91f40d9b4b42a9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>unref</name>
      <anchor>29e7a0f62ff982fa75bfe4eb0373d6d0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>unrefNoDelete</name>
      <anchor>e4bf96b749f2f2a8577050787f7fbee4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getRefCount</name>
      <anchor>5485f34f5d7159bfd4d0db7813fce585</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>touch</name>
      <anchor>ba7fd51b022505fa822d295095b7f6a7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>873b521c1386368d4d63ff893856590a</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function">
      <name>isOfType</name>
      <anchor>b15fb37137177d3137663b2194b11991</anchor>
      <arglist>(SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>73ce238db093db6ba1b4009818cc9f27</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getName</name>
      <anchor>6b701830707d957fa112b1e9d9f10a08</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setName</name>
      <anchor>b9bb8b4387f5fb39d4aa3fe92ca81261</anchor>
      <arglist>(const SbName &amp;newname)</arglist>
    </member>
    <member kind="function">
      <name>addName</name>
      <anchor>74952f1fd17c44eb0fc9c3dc3b69102a</anchor>
      <arglist>(SoBase *const base, const char *const name)</arglist>
    </member>
    <member kind="function">
      <name>removeName</name>
      <anchor>427c87fa9d48a2d09da950b7a0895fc7</anchor>
      <arglist>(SoBase *const base, const char *const name)</arglist>
    </member>
    <member kind="function">
      <name>startNotify</name>
      <anchor>d8b4821e5eb780f9098d4b1a866e6a63</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>9f7fb26481bfb35d5821acfef0fc10b5</anchor>
      <arglist>(SoNotList *l)</arglist>
    </member>
    <member kind="function">
      <name>addAuditor</name>
      <anchor>e6df5f7ce9b7426544fa890d7c48b23a</anchor>
      <arglist>(void *const auditor, const SoNotRec::Type type)</arglist>
    </member>
    <member kind="function">
      <name>removeAuditor</name>
      <anchor>40434ac2a479164cbeee3f6583307b77</anchor>
      <arglist>(void *const auditor, const SoNotRec::Type type)</arglist>
    </member>
    <member kind="function">
      <name>getAuditors</name>
      <anchor>f64b194d0d914bcdd97b48c53b051d4e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>addWriteReference</name>
      <anchor>81b895de9e912101599bf8503f3160c0</anchor>
      <arglist>(SoOutput *out, SbBool isfromfield=0)</arglist>
    </member>
    <member kind="function">
      <name>shouldWrite</name>
      <anchor>6f95394c79b081e482d94a15a823b32f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>incrementCurrentWriteCounter</name>
      <anchor>73037fd0866b2d280e6770c1ff11649b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>decrementCurrentWriteCounter</name>
      <anchor>9258013519caafda065433bb168ed126</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNamedBase</name>
      <anchor>cda0e2703e0f76ef10f0b14ce19e6e42</anchor>
      <arglist>(const SbName &amp;name, SoType type)</arglist>
    </member>
    <member kind="function">
      <name>getNamedBases</name>
      <anchor>64dd273d58c357da1b0df1b4212bfb29</anchor>
      <arglist>(const SbName &amp;name, SoBaseList &amp;baselist, SoType type)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>20d366f02b447d4f2486449a79aa8f31</anchor>
      <arglist>(SoInput *in, SoBase *&amp;base, SoType expectedtype)</arglist>
    </member>
    <member kind="function">
      <name>setInstancePrefix</name>
      <anchor>24fef6a61e75a6bffb4f83d4cf10fca5</anchor>
      <arglist>(const SbString &amp;c)</arglist>
    </member>
    <member kind="function">
      <name>setTraceRefs</name>
      <anchor>4617280cf55689be859f44b1e332a414</anchor>
      <arglist>(SbBool trace)</arglist>
    </member>
    <member kind="function">
      <name>getTraceRefs</name>
      <anchor>dc549cc4452943800c625056b264d1ff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>connectRoute</name>
      <anchor>0ff12dc32c89d589df7e56542eafa37c</anchor>
      <arglist>(SoInput *in, const SbName &amp;fromnodename, const SbName &amp;fromfieldname, const SbName &amp;tonodename, const SbName &amp;tofieldname)</arglist>
    </member>
    <member kind="function">
      <name>assertAlive</name>
      <anchor>56d653cd42bd72dc7824be40e7fc9fc8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>readRoute</name>
      <anchor>bf033c782dfe865a1f6337efe74e2d1d</anchor>
      <arglist>(SoInput *in)</arglist>
    </member>
    <member kind="function">
      <name>destroy</name>
      <anchor>b102bb9166fc2453ff67e15337038691</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>hasMultipleWriteRefs</name>
      <anchor>58a876542e7d86adf89966d3c899a97a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>writeHeader</name>
      <anchor>247faa658c4fb075e41442ac1d632b85</anchor>
      <arglist>(SoOutput *out, SbBool isgroup, SbBool isengine) const </arglist>
    </member>
    <member kind="function">
      <name>writeFooter</name>
      <anchor>bdb9f869861fba02d37012b5dbcf3deb</anchor>
      <arglist>(SoOutput *out) const </arglist>
    </member>
    <member kind="function">
      <name>getFileFormatName</name>
      <anchor>7cb3979a71e021ce8cafab2d75e2c5c5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>cac84c8e4f46247574fa476a89819aa2</anchor>
      <arglist>(SoInput *in, unsigned short flags)=0</arglist>
    </member>
    <member kind="function">
      <name>getCurrentWriteCounter</name>
      <anchor>79a1022df39ae04dfefff5449d4ead24</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>staticDataLock</name>
      <anchor>6a620d28552b49c6508a86e1370150c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>staticDataUnlock</name>
      <anchor>e672d43b50be8e61b18b59c4d8cf0b0d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createNotRec</name>
      <anchor>a41e45678b8c582b5202143a220ad76c</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoBaseColor</name>
    <base>SoNode</base>
    <filename>classSoBaseColor.html</filename>
    <member kind="function">
      <name>SoBaseColor</name>
      <anchor>9b8a2851a627e5d0f13c2bfa01b4e946</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoBaseColor</name>
      <anchor>34e74578cb1987f3fe0e25e20724e763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>6b30eb90e9a50787c7a4b6d7a6c9eb97</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>d80fa1bc4c651ef768e43c68c22ecec0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>e07bdca011f46f97e88b56ee7ea6fed0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>821fd46ddf63be25ecd42aae7fbcb49f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>64dd76a52f274a3f77961de6862f6dc7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>f22bccd6d0e6a2f767a2dae0568a14cf</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>477ad8cefdafb691656898a65baf8834</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>0b9ca17bd0924ad8760c89e61fb0de9a</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rgb</name>
      <anchor>72782aa59618de4c0ed7cea219036030</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoBaseKit</name>
    <base>SoNode</base>
    <filename>classSoBaseKit.html</filename>
    <member kind="function">
      <name>callbackList</name>
      <anchor>b421f79a18cfb84a8ed65df36443b4b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoInteractionKit</name>
      <anchor>b34e8dd3a91591d672ff206b7ce651fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoBaseKitP</name>
      <anchor>3fa22e60221aed62662777058a5341b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoBaseKit</name>
      <anchor>4dec0b9a34a39eaf52a295e2f1ec54ad</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoBaseKit</name>
      <anchor>2fdc22950499677d862dde300f7348c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>0bb43bdb186473224843231959ffd5df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>e070d630e20daab3372d50b3cfb0157e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>b07b5c9e8bc8b5fae7ac8b4677b6f717</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>7197aa641e06306d154ed842c8525173</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>2eb3b8bbf1f9ed14e1f37d9553ecdc12</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>022c621ef5ba06480cdbc7b58086bb30</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>550dafdf087c143cd3d2c576dba2bde0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPart</name>
      <anchor>e48bff9f8e65610b531509e5b68dbc60</anchor>
      <arglist>(const SbName &amp;partname, SbBool makeifneeded)</arglist>
    </member>
    <member kind="function">
      <name>getPartString</name>
      <anchor>da02ebb37e902287724ef764cb010c03</anchor>
      <arglist>(const SoBase *part)</arglist>
    </member>
    <member kind="function">
      <name>createPathToPart</name>
      <anchor>57d3e0d10243896d1230e83d21ecd1c4</anchor>
      <arglist>(const SbName &amp;partname, SbBool makeifneeded, const SoPath *pathtoextend=NULL)</arglist>
    </member>
    <member kind="function">
      <name>setPart</name>
      <anchor>b3f42ab04032e4f420625d314b606ae6</anchor>
      <arglist>(const SbName &amp;partname, SoNode *from)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>f95e20233ed052d76be5100ab59899d6</anchor>
      <arglist>(const char *namevaluepairliststring)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>e7cd4c0dd7cc63e1f77a0aa682aea131</anchor>
      <arglist>(const char *partnamestring, const char *parameterstring)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>81fbcf9e1f0d540863eee8ef7f6adc99</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>1addad3c257bb56a44cba69123ee8bad</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>46ac002f670fe64bc68dcac902585482</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>33297f85e39ae607f19a6cc6010109a7</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>a26377f9df575c8f8aec2e89892ba2c3</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>9f4713081d8019982c2d32b289028f9b</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>4cec6a00edccd42396e5a01fc256ddff</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>f6c97be07ab6ad0707eb3f4560b33438</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>0a2780f431dcdebfbe1c7e8caca412fd</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>7601b8a704fecb1f848b12ccf6eb190b</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>6379d00b14e5b257a19773e76f45163a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>printDiagram</name>
      <anchor>4b6e08a286e936da9f50c40b320ca6f6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>printSubDiagram</name>
      <anchor>dd060d40bf336aeddd867a14c88cf7c8</anchor>
      <arglist>(const SbName &amp;rootname, int level)</arglist>
    </member>
    <member kind="function">
      <name>printTable</name>
      <anchor>2ad93cb4c60b167c2ac58c6f8ec601fa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addWriteReference</name>
      <anchor>664c5634160a193224953b2d0f5738c0</anchor>
      <arglist>(SoOutput *out, SbBool isfromfield=0)</arglist>
    </member>
    <member kind="function">
      <name>forceChildDrivenWriteRefs</name>
      <anchor>f619ae19764e72989fc7c3382e27dc01</anchor>
      <arglist>(SoOutput *out)</arglist>
    </member>
    <member kind="function">
      <name>isSearchingChildren</name>
      <anchor>8a5747aebe003b3776849165d485ceec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setSearchingChildren</name>
      <anchor>c713693906550abdc31e5013853e8f9f</anchor>
      <arglist>(const SbBool newval)</arglist>
    </member>
    <member kind="function">
      <name>typeCheck</name>
      <anchor>9a8aa0c973198e3e67491bfc92e7e7d9</anchor>
      <arglist>(const SbName &amp;partname, const SoType &amp;parttype, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>98eba60b232f47d280ea53c1aedc7d2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addToCopyDict</name>
      <anchor>457b355a188c8c1773c9f95586e5d2d4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>f01f71c1044cf4f7cd7a3750702889cd</anchor>
      <arglist>(const SoFieldContainer *fromfc, SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>getContainerNode</name>
      <anchor>2e38e6be218ea2dfe064707944c69d66</anchor>
      <arglist>(const SbName &amp;listname, SbBool makeifneeded=1)</arglist>
    </member>
    <member kind="function">
      <name>getAnyPart</name>
      <anchor>cd7b1678abdc59b80cb0f7bfcfb06de5</anchor>
      <arglist>(const SbName &amp;partname, SbBool makeifneeded, SbBool leafcheck=0, SbBool publiccheck=0)</arglist>
    </member>
    <member kind="function">
      <name>createPathToAnyPart</name>
      <anchor>af9314f3385bd35cc2805d63bddfceba</anchor>
      <arglist>(const SbName &amp;partname, SbBool makeifneeded, SbBool leafcheck=0, SbBool publiccheck=0, const SoPath *pathtoextend=NULL)</arglist>
    </member>
    <member kind="function">
      <name>setAnyPart</name>
      <anchor>532805199196ae84a3a436dfd4934e45</anchor>
      <arglist>(const SbName &amp;partname, SoNode *from, SbBool anypart=1)</arglist>
    </member>
    <member kind="function">
      <name>createNodekitPartsList</name>
      <anchor>4291b8c74c2922317d35e83b8fad56c4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createFieldList</name>
      <anchor>666d821feed9939f9cc00faef6ad854a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createDefaultParts</name>
      <anchor>4125f12156cad5257100bc582f08604d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitPartsList</name>
      <anchor>bd6bd994e3319463a4cf7e7fc6af0091</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getCatalogInstances</name>
      <anchor>0b7c058487261a23998999eadfc05fda</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>catalogError</name>
      <anchor>5f63886df8a0cb1072eebdc775adee98</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>07805ba961f5bede8cdca428ad6e86ab</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>d102080de639b4e27df578660305cf4d</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>7760408922615010fea9979e5bc2ef00</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>countMyFields</name>
      <anchor>bdbff25ca69acf6c96da402a8245f44a</anchor>
      <arglist>(SoOutput *out)</arglist>
    </member>
    <member kind="function">
      <name>setPart</name>
      <anchor>803697aab11a8b4ced0d51d6eaa20882</anchor>
      <arglist>(const int partNum, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>children</name>
      <anchor>e4ab33e30abfa604966d85aa9be58fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>connectionsSetUp</name>
      <anchor>318dfc1790c5762ea18979af0ea43e8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoBaseList</name>
    <base>SbPList</base>
    <filename>classSoBaseList.html</filename>
    <member kind="function">
      <name>SoBaseList</name>
      <anchor>3486d0f2af4a5d21b14cad5979ebd4dd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoBaseList</name>
      <anchor>f1a9c4a0b40a2bd262b20024297647e1</anchor>
      <arglist>(const int size)</arglist>
    </member>
    <member kind="function">
      <name>SoBaseList</name>
      <anchor>667665378cab8a89ff6cd652153bea2b</anchor>
      <arglist>(const SoBaseList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>~SoBaseList</name>
      <anchor>e8573b49d121c4ccf9c0a9ce4a455ea4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>e6ffbeb73abd30d7a93097b603d89492</anchor>
      <arglist>(SoBase *ptr)</arglist>
    </member>
    <member kind="function">
      <name>insert</name>
      <anchor>b47bf977ff1edcd838e349dac115e0ce</anchor>
      <arglist>(SoBase *ptr, const int addbefore)</arglist>
    </member>
    <member kind="function">
      <name>remove</name>
      <anchor>3b39dc3c7de744e4f21f62070f26ad32</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>removeItem</name>
      <anchor>292f89ba8e91c0f40eac4425334273db</anchor>
      <arglist>(SoBase *item)</arglist>
    </member>
    <member kind="function">
      <name>truncate</name>
      <anchor>aa8544a32493ea5d51779b91d580a39c</anchor>
      <arglist>(const int length)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>160af6eac3036a7937e126c00bfafa2e</anchor>
      <arglist>(const SoBaseList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>a065a85a57c872e79cbb69d6e9252a7b</anchor>
      <arglist>(const SoBaseList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>ceb4ba527a5c7cda7967dd480aa6ae91</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>3acf108ae68ca1e7695ed99503d4a086</anchor>
      <arglist>(const int i, SoBase *const ptr)</arglist>
    </member>
    <member kind="function">
      <name>addReferences</name>
      <anchor>10a75e460fe584d961e3003793825c7f</anchor>
      <arglist>(const SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isReferencing</name>
      <anchor>9cc6538833e9e519569cdb9ecc09a6ef</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoBlinker</name>
    <base>SoSwitch</base>
    <filename>classSoBlinker.html</filename>
    <member kind="function">
      <name>SoBlinker</name>
      <anchor>c682f4af4b7ef19b2336a208b2302d59</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoBlinker</name>
      <anchor>a24a0ac4542971c354447597040e640f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>657ab5f300a7548ee046053bad679610</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>e536b076c9ce9bc274b13e322fe30af5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>11a09dbd93d6ae7a3b7f14d295b2d942</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>e29b97867b26773058c76e539326aace</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>ffd4ffac8ef2ff786831ca1cdd17e591</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>7505fbf740f65a3f76d80cdbf675aa9a</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>98b65184d01411e6f4971f1f1bbae919</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>b8a4502b4479244ab975cd213017b524</anchor>
      <arglist>(SoNotList *nl)</arglist>
    </member>
    <member kind="function">
      <name>speed</name>
      <anchor>09afe0397af89eb72ba8056df9b48396</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>on</name>
      <anchor>de55994146d014b6f957d31b40f21663</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoBoolOperation</name>
    <base>SoEngine</base>
    <filename>classSoBoolOperation.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>fd03d8f124080e441ea9e47b45f65941</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>Operation</name>
      <anchor>670d9a9ba8cbd9a70b15095993705749</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LEAR</name>
      <anchor>670d9a9ba8cbd9a70b15095993705749582e5adf86d315c82c3f5762a29c8249</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ET</name>
      <anchor>670d9a9ba8cbd9a70b15095993705749b13cf22c3851d398672653cb3e1dca8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name></name>
      <anchor>670d9a9ba8cbd9a70b150959937057491addd7ed358bd31cc77b38b4c3007286</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OT_A</name>
      <anchor>670d9a9ba8cbd9a70b1509599370574989f42665a1644553d2b863efb57d9881</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name></name>
      <anchor>670d9a9ba8cbd9a70b150959937057497c06cd121526ebeb2f440e3b93646e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OT_B</name>
      <anchor>670d9a9ba8cbd9a70b1509599370574958c0b0a29d729c1a1184540cc2d5c378</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>_OR_B</name>
      <anchor>670d9a9ba8cbd9a70b150959937057490c90e33a5638d3b7dd41a6658593abbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OT_A_OR_B</name>
      <anchor>670d9a9ba8cbd9a70b15095993705749f90a69b19067c8fdebc0085eff5d8cf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>_OR_NOT_B</name>
      <anchor>670d9a9ba8cbd9a70b150959937057494c9fd23af02f8a714006e3994a505976</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OT_A_OR_NOT_B</name>
      <anchor>670d9a9ba8cbd9a70b15095993705749841a7ded81102a70a6415f688e280e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>_AND_B</name>
      <anchor>670d9a9ba8cbd9a70b15095993705749339d1855260c12b0f6d01cddf49af74d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OT_A_AND_B</name>
      <anchor>670d9a9ba8cbd9a70b15095993705749b7e4bfb2ba8cc68722c961b914394b20</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>_AND_NOT_B</name>
      <anchor>670d9a9ba8cbd9a70b150959937057495736f204ee0b7e724263cf98b9915441</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OT_A_AND_NOT_B</name>
      <anchor>670d9a9ba8cbd9a70b150959937057497a7206a8d8e6e0c8d8893d722d6a3837</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>_EQUALS_B</name>
      <anchor>670d9a9ba8cbd9a70b15095993705749763b56a7109154cb07fc884b365b9bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>_NOT_EQUALS_B</name>
      <anchor>670d9a9ba8cbd9a70b150959937057494db943f963db7ce734fda495c9f7f574</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoBoolOperation</name>
      <anchor>2d63071a747ca5c813eaf95dfa5a36cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>~SoBoolOperation</name>
      <anchor>f52f63ca6921d0e1ec49ad46871b8110</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d2e697f9a35a83b50e5ec150a50aa18c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>77191bac4d0f75b586c9e62674af4814</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>5f1dedb6e6eb42c70aacd408e490b18e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>1c09b4a6c3da487c8f263d12aff21942</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>9120883da508d146f987b671f4b5884d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>02a08f4792dea2c36572bdcdacd2dd8a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>77e114647556f43791540e2c7da41c8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>a</name>
      <anchor>50798f4ca280a3be7e252903d5bfa373</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>b</name>
      <anchor>ace01f5778ec26d120e62a2c62676a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>operation</name>
      <anchor>fc11ea7282fa4026ee17d83230cf90e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>output</name>
      <anchor>1af0efc4e6e45ccba7b232f0ef89f7f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>inverse</name>
      <anchor>39b853fba79fcb2fdd87973d69bd4ed9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoBoxHighlightRenderAction</name>
    <base>SoGLRenderAction</base>
    <filename>classSoBoxHighlightRenderAction.html</filename>
    <member kind="function">
      <name>SoBoxHighlightRenderAction</name>
      <anchor>43b51164ffccc8f0d68af915d4eff43f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoBoxHighlightRenderAction</name>
      <anchor>a55d617673af1bb7fbad8a158b345361</anchor>
      <arglist>(const SbViewportRegion &amp;viewportregion)</arglist>
    </member>
    <member kind="function">
      <name>~SoBoxHighlightRenderAction</name>
      <anchor>82cd37236b6b1f216b743cdbc2d3962d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>d44a737711a0567e39cb78a6433639d9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ba7f4eeda58dc65174969cabe2d95310</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>94998a6d24637404042e4962c25bec95</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>01aa20819eef7627646e404b57f85582</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>5959321654d95ff5b355322955b3f94f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>471473a9cd1a8627c224e8802018f993</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>77301837c82ea11ce90e5a4fdb711087</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>ce847352d9950c98665346939eb83be4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>8c98c5bdcf5f324d857bc29b19de7766</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>20fd76cb746235d52fc47a0219b87100</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>623b420cbd3fc8a89692766f7e9c568a</anchor>
      <arglist>(const SoPathList &amp;pathlist, SbBool obeysrules=0)</arglist>
    </member>
    <member kind="function">
      <name>setVisible</name>
      <anchor>cd568441f316b3752ee53ab317f1e77a</anchor>
      <arglist>(const SbBool visible)</arglist>
    </member>
    <member kind="function">
      <name>isVisible</name>
      <anchor>eed036eef850528c5aca3d261695b9ec</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setColor</name>
      <anchor>aa369def0462c4c4d509a339817780ea</anchor>
      <arglist>(const SbColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <name>getColor</name>
      <anchor>e3ec6afa20d986322987c360ea8fa66c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setLinePattern</name>
      <anchor>0f043a47508cef2b985ec06beb0a48b8</anchor>
      <arglist>(unsigned short pattern)</arglist>
    </member>
    <member kind="function">
      <name>getLinePattern</name>
      <anchor>2b62e4331435d90724d55e8565280776</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setLineWidth</name>
      <anchor>0113077fd54eab84dff57aee91623b76</anchor>
      <arglist>(const float width)</arglist>
    </member>
    <member kind="function">
      <name>getLineWidth</name>
      <anchor>88a45152432bc1264d84f6cc14c1cc94</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>hlVisible</name>
      <anchor>3dab10ba7c71802379899c6dd6b8ef0b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoBumpMap</name>
    <base>SoNode</base>
    <filename>classSoBumpMap.html</filename>
    <member kind="function">
      <name>Wrap</name>
      <anchor>c7c4517f5b783c57d980b9f5659cc11f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EPEAT</name>
      <anchor>c7c4517f5b783c57d980b9f5659cc11f37bf0078be854152a579099da00d6b1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LAMP</name>
      <anchor>c7c4517f5b783c57d980b9f5659cc11f07d5d1434c4d069e24820210f0d7ea83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoBumpMap</name>
      <anchor>7cc603594f50682e382fbbd39cf7e22f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoBumpMap</name>
      <anchor>5b38dd9da523facf13e8d7a9f33915cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>649e2736d4af8458a0d2d8a332d98e75</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>29d112c550ba0d47bdca9fce2530fab5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>4f8c093ba44eb31d63844b4692ab1e57</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>e27a1a74e760c6224252018ba5cced13</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>2b2ddfc1f524fa2dc23c6d23ec2ada78</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>aaf6f373d4bb1dc95a95fc0ef601e053</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>e1908738776ef66a68671934eca72de2</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>daa9a06912111adea2ae64564fecc775</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>a2d9a039d55f151de92b44adef6aed8d</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>readImage</name>
      <anchor>8e5f144b536af8cd53b20f14cb3f4d02</anchor>
      <arglist>(const SbString &amp;fname, int &amp;w, int &amp;h, int &amp;nc, unsigned char *&amp;bytes)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>a67d4cbc2e27109b5fc5bf13fe93f191</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>fa642140ca8ca825bfa34cea5dd52834</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>filename</name>
      <anchor>90c6e969bfc52a34b372e2c894bdb3b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>image</name>
      <anchor>460193dbe316259055d284aa82870d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>wrapS</name>
      <anchor>33875776f1a75f61716277dcead04e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>wrapT</name>
      <anchor>bb66a0d5d7be23ca6a81b33dd89066b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoBumpMapCoordinate</name>
    <base>SoNode</base>
    <filename>classSoBumpMapCoordinate.html</filename>
    <member kind="function">
      <name>SoBumpMapCoordinate</name>
      <anchor>d06c128b19de777306b6456dc2df54a0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoBumpMapCoordinate</name>
      <anchor>9f8005df016515ab8fac4c3281de0a30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>cfbdf6e8eb747253d475c18a8a1f8535</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>be81b3c23ca6fb2c436f53a049dcee6d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>20b9241c98ed46047c607dc01c705808</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>d88d368502e1787651e0aeacb4e760bc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>631376c5f4c2d409b4b354dfb6003b76</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>3ddb991756531c6f01623596b2cb39e8</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>5be99d247606409f7fac2c493e1ce6eb</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>24b72d0fc8cd2f2322f2a931db48f60a</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>e5d73d9ec6d668ccafe487ecf09da5d7</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>point</name>
      <anchor>39ff5189d691e9722a8f011782bacee0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoBumpMapTransform</name>
    <base>SoNode</base>
    <filename>classSoBumpMapTransform.html</filename>
    <member kind="function">
      <name>SoBumpMapTransform</name>
      <anchor>771e729e1eb58ddc56062c81b05ade9a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoBumpMapTransform</name>
      <anchor>4d79967e2bc55c6dd3eae8684fda07ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>f7ee3e5fe9f707a6bda8bc948b1df80b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>6dd8ab4f265cdf233fb9aa7124b8a6ac</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>ec2e0f6f6bd15f444bd1f9116c735088</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>70354346f863edeff08b37d373bedcdc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>36797aaa9116e17d32b156e02d80b99d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>9fe9a1b39e141b8e1e0bdff919efbbfc</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>6662c5840cbe1c247885af08af184f3f</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>961ed16d6fbf74c20e80eb4b7164c322</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>99c714e951829289995e3a4ea4cb5fbd</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>abbef89b062b2dab4a780cf68c8cb33e</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>d45a8a96e6b336aae105dc25a004cb50</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>38a5995aa1f5a0bc57fca57d892ea1fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>59bff48325057f2091158509bb17b8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>center</name>
      <anchor>dd296c3848291aeec17005077b52856f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoButtonEvent</name>
    <base>SoEvent</base>
    <filename>classSoButtonEvent.html</filename>
    <member kind="function">
      <name>State</name>
      <anchor>3d1c79afafa1a7bcea5008ee132923b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>P</name>
      <anchor>3d1c79afafa1a7bcea5008ee132923b3ca2b62447e336e0c5439f3ad4853fa63</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OWN</name>
      <anchor>3d1c79afafa1a7bcea5008ee132923b3e9d7559498d47e935b79d43759fc3dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NKNOWN</name>
      <anchor>3d1c79afafa1a7bcea5008ee132923b37f05040166601a1551c7dc11d48369e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoButtonEvent</name>
      <anchor>c38b34ea72bf9fff5b48cd805093e801</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoButtonEvent</name>
      <anchor>c4f44f6cde4311ff95e5ff515415e623</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>2108412b82c0d41538e02ce7dc284365</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>40002d1c016bd24cae1b23fb55d5a36a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setState</name>
      <anchor>3f556e3899b7c60c34f4cae961b3223c</anchor>
      <arglist>(SoButtonEvent::State state)</arglist>
    </member>
    <member kind="function">
      <name>getState</name>
      <anchor>8abeb16d105a4b2535ce350cd11c349e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>9e3ee8610f57b1c1ff9c8250a1f7c8d7</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCalculator</name>
    <base>SoEngine</base>
    <filename>classSoCalculator.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>60a8755e2e4493d23f0c35c014ce0433</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoCalculator</name>
      <anchor>792ba9073ca014317ada73bee9c97183</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCalculator</name>
      <anchor>f16d5b5c1dc3be31edd581d4eeae3aa6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e52304e806e31e37b651e9919ed83eb4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>09d1a28f1bdc440b5db9f41d31008c11</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>974eb860134fe912a768bb888a914c22</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>55540e52884f04f7996b41f2aef42cf2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>0aa0bbeb9fdcd68b67bc502241022f8b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>487a13f63137689b1b3cde71db0908cc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>37ebad9d1e9a43775915334be48be259</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>inputChanged</name>
      <anchor>43e3022159bc59a24931b01b625ac226</anchor>
      <arglist>(SoField *which)</arglist>
    </member>
    <member kind="function">
      <name>a</name>
      <anchor>8334a05f1d4ad8a76233ab1227613c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>b</name>
      <anchor>b8dcece3f0627bc900f37455726ceb0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>c</name>
      <anchor>5320d1f469afc91138d57bd08aa8498c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>d</name>
      <anchor>d06a1196f4dcb1031691439cd222edc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>e</name>
      <anchor>fdc2df292e3699506ac21beb4d34a8d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>f</name>
      <anchor>a47315dc25780b728d6bda6819dffa16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>g</name>
      <anchor>402abec5696b8ab6098a4996d428de5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>h</name>
      <anchor>cc6bd0bcaf1ab8c1744a0a41c0340c1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>A</name>
      <anchor>78b6958e185647f1efcf8dc37a39b461</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>B</name>
      <anchor>c275feac67d7994c577cc056da4afc99</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>C</name>
      <anchor>389621e579a69e8333b42542b14c6ce7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>D</name>
      <anchor>a4835d39b560519b4411dc82e04dd108</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>E</name>
      <anchor>28491e70e17ab85cd83c672b09c72896</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>F</name>
      <anchor>670956d1280443971d637a6d4fb0ec6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>G</name>
      <anchor>4e10c288d19f6753905a9a6ea6e36797</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>H</name>
      <anchor>43899d76776d5b34f50f26adc60c8027</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>expression</name>
      <anchor>7cfb2b420f077abf4726ada17be26e0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>oa</name>
      <anchor>d0b4e58a658ee51d1a1857b6ec5118a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ob</name>
      <anchor>d3b448b93813d089c095b58480e1c0ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>oc</name>
      <anchor>df922a722a33ed51f13f9ea9747e7a20</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>od</name>
      <anchor>fbfa34f10b51a3a41096c1ffe74d6cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>oA</name>
      <anchor>6b200d36871a6093f5eca0b8b81f4842</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>oB</name>
      <anchor>c5e01d8c507dea3b037b1f81f42f6560</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>oC</name>
      <anchor>5788e010ccd9647bbdb1cde3200e8a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>oD</name>
      <anchor>eef28bf98cb865de73164bc417aec4f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCallback</name>
    <base>SoNode</base>
    <filename>classSoCallback.html</filename>
    <member kind="function">
      <name>SoCallback</name>
      <anchor>f1e3717dfd82737b6f1d864748857130</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCallback</name>
      <anchor>e7b6450e33376133968b8b07cb83c614</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>daf1fa043cba9c8b9037a6440a3e6882</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>84587f85b568c37bad29cac35cc838f6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>40c1968cb91777cb452a2e744c667121</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>6994652394fe420ef8719507950f315c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>c097c5fa72956ad5d3e4744d6573ef13</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setCallback</name>
      <anchor>7a8f2dc97c80d06895f313fa8095a830</anchor>
      <arglist>(SoCallbackCB *function, void *userdata=NULL)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>df55248b1f7143dc6d2dcc31111b45b0</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>da7436c6fa43de30e8e6455ba73976e1</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>a798e7241f78846396ca35d49f149b4e</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>62c7151753420cbc003acc63496449aa</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>c1824b7b11b5b2f260e97ef60dea3f5b</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>e69baac6f29f0d94429fe6253ffca0c0</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>22c8477f100e3f4f3efb90a494dfa9bb</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>26d33623e4a355bce4fd46b3316f4b92</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>0ffbc601aef9287e1d6f87f1230c41b6</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>c2ff7785721bf7dd5850981547a45260</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>339f6aee8c6f1386bc3bb3cee46dc086</anchor>
      <arglist>(const SoFieldContainer *from, SbBool copyconnections)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCallbackAction</name>
    <base>SoAction</base>
    <filename>classSoCallbackAction.html</filename>
    <member kind="function">
      <name>SoCallbackActionP</name>
      <anchor>6f1d12893cfae7d1c39d73f62f2bb711</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoCallbackActionCB</name>
      <anchor>e6fdf843f4157cbc3ff98c5d711e9de7</anchor>
      <arglist>(void *userdata, SoCallbackAction *action, const SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>Response</name>
      <anchor>0aebf2c58836079af765be8e2ba4973d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ONTINUE</name>
      <anchor>0aebf2c58836079af765be8e2ba4973d0d938b2f29d1633097595c14d4cd87cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>BORT</name>
      <anchor>0aebf2c58836079af765be8e2ba4973df47cac7f924fcfd67b6ce7b710caf8b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>RUNE</name>
      <anchor>0aebf2c58836079af765be8e2ba4973d8848d4ddd907d87c7336c119cf8d5cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoCallbackAction</name>
      <anchor>d7da5f0d08e5c9b37df8ffdaf87631fe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoCallbackAction</name>
      <anchor>2b50588d8902f28efa53ca0b5b8e0191</anchor>
      <arglist>(const SbViewportRegion &amp;vp)</arglist>
    </member>
    <member kind="function">
      <name>~SoCallbackAction</name>
      <anchor>ea88f50819f7d6d19ce345ad778b4fc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>4147d651e563a9ae9fd08ad2395e1cfe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>cf29ce89a31300148ddd50b569ba0979</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>918fb4200f40611c516ab03a7fd2b4ba</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>fa5867c40c10cfe78a38267ee8aae254</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>0c5687a290a4c5bd5402f9c6e0791b66</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>70fe18a0cabcff2ff90e3d89030e4f53</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>ceadba72c58e44d505660342e9edfcfe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>cc078820d69216ff3ec06fd3ad2caf9f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setViewportRegion</name>
      <anchor>13fd51ff971b2c2ddddd49537202e8a1</anchor>
      <arglist>(const SbViewportRegion &amp;vp)</arglist>
    </member>
    <member kind="function">
      <name>addPreCallback</name>
      <anchor>bb911a2b72f56a19d0dd40819e7d351f</anchor>
      <arglist>(const SoType type, SoCallbackActionCB *cb, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>addPostCallback</name>
      <anchor>d98c249636448c4947947e2faf7de570</anchor>
      <arglist>(const SoType type, SoCallbackActionCB *cb, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>addPreTailCallback</name>
      <anchor>a4eaa1f93b4ea5514b4253ff738a3c90</anchor>
      <arglist>(SoCallbackActionCB *cb, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>addPostTailCallback</name>
      <anchor>e85004e2f61a0f75465fc19001bb38bb</anchor>
      <arglist>(SoCallbackActionCB *cb, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>addTriangleCallback</name>
      <anchor>7a71315cb4b24a5cd83dbbdbfc0d2a3e</anchor>
      <arglist>(const SoType type, SoTriangleCB *cb, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>addLineSegmentCallback</name>
      <anchor>e12e0c958fa491e15fed955af19788b8</anchor>
      <arglist>(const SoType type, SoLineSegmentCB *cb, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>addPointCallback</name>
      <anchor>b8ac10a541dbe2e65e6a0dd64a1aec6b</anchor>
      <arglist>(const SoType type, SoPointCB *cb, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>getDecimationType</name>
      <anchor>6ca5e51faefd2275f8b11f917f3b30f6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getDecimationPercentage</name>
      <anchor>3be9dcc5feb21c6b85311f3264c21ee0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getComplexity</name>
      <anchor>ccb844489a863930369c88d8cb20d834</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getComplexityType</name>
      <anchor>51912ef09f5b593bf53ad507e291e546</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNumCoordinates</name>
      <anchor>0f4f484d1ea566f2dbd20018e57248a8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getCoordinate3</name>
      <anchor>8a39bfbf7635e0d9b197c035442f3172</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getCoordinate4</name>
      <anchor>6a9c98c830d27ff7a738eb8881beed4b</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getDrawStyle</name>
      <anchor>393b8dd8676ab668a4f3bbbd6074e35e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getLinePattern</name>
      <anchor>99e6c72fc29b6e80c478938422ef55aa</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getLineWidth</name>
      <anchor>aad9afbb2e101db088dd9dc1023f4f48</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPointSize</name>
      <anchor>0c7db492edf17022a34d79d19561b1af</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFontName</name>
      <anchor>86f8f698339a65df8bb55c455bc60453</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFontSize</name>
      <anchor>6cdaa2b59d78811ed6b481645673097e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getLightModel</name>
      <anchor>f2a271cfa3ddf13566e08962291fca10</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getLightAttenuation</name>
      <anchor>1169cad45b91391be63ef26ac433dc2b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getMaterial</name>
      <anchor>8eb5c30c849bf3c54a7cf574082db6e8</anchor>
      <arglist>(SbColor &amp;ambient, SbColor &amp;diffuse, SbColor &amp;specular, SbColor &amp;emission, float &amp;shininess, float &amp;transparency, const int index=0) const </arglist>
    </member>
    <member kind="function">
      <name>getMaterialBinding</name>
      <anchor>470470892e78a3d964b1df465d65ddb3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNumNormals</name>
      <anchor>c65b1d41b61672ced9e81b86de86933f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNormal</name>
      <anchor>16ee3746295ce69c287bf864748b2a03</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getNormalBinding</name>
      <anchor>49ab7d79d0fc4a6d25711caded6cd241</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNumProfileCoordinates</name>
      <anchor>dce6af2840cdfecc3e24ced46126a948</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getProfileCoordinate2</name>
      <anchor>dd48b7bb9f9fec04a8a5f9bf8f03d459</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getProfileCoordinate3</name>
      <anchor>42d4853b5026d34a2dbcd8d83b3fd2b7</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getProfile</name>
      <anchor>c798cc8b045de3361b1a21b8b1dc16e0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getVertexOrdering</name>
      <anchor>5ba17eb4452bb70dbe03a836661f2266</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getShapeType</name>
      <anchor>d8bc47df507393b4863aaf0c520cf364</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFaceType</name>
      <anchor>6ea068d16af4fdee95555e4d79562990</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getCreaseAngle</name>
      <anchor>c7976c69f158ad96223f3c447690c596</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNumTextureCoordinates</name>
      <anchor>ba6c6ec6dc89872fa72c42be4a08f4e5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTextureCoordinate2</name>
      <anchor>c545ae2032fbf711af1c364b39838a43</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getTextureCoordinate3</name>
      <anchor>20734400b70a0c83a6df5ddd1cef95ba</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getTextureCoordinate4</name>
      <anchor>6f47244d3d882f942e2884bc8cdcf6fc</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getTextureCoordinateBinding</name>
      <anchor>ab53bce467ef67246504a5de9abe35c7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTextureBlendColor</name>
      <anchor>c404646053d303d8dcc866ed25a3c892</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTextureImage</name>
      <anchor>c551dec60b98285e88e8744ab34d4820</anchor>
      <arglist>(SbVec2s &amp;size, int &amp;numcomps) const </arglist>
    </member>
    <member kind="function">
      <name>getTextureImage</name>
      <anchor>1ed671f594d20a608dccf47f00ec19c2</anchor>
      <arglist>(SbVec3s &amp;size, int &amp;numcomps) const </arglist>
    </member>
    <member kind="function">
      <name>getTextureMatrix</name>
      <anchor>7ed6e8dfe4046afca3a2bba9099769ab</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTextureModel</name>
      <anchor>0968c3970c63246cd10c11d3d3d25a2c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTextureWrapS</name>
      <anchor>380b20fb9139f2acdcaccd0d7709f5cd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTextureWrapT</name>
      <anchor>2870fb696ac5abbf0eb734e37579de1e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTextureWrapR</name>
      <anchor>2c5feb85d89c2669a2520421387417f5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getModelMatrix</name>
      <anchor>abdad873751e3c73e1798c7c3f3411fa</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getUnits</name>
      <anchor>8d14ba3252e977a558cda71598133671</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFocalDistance</name>
      <anchor>3bd6f1ad6e1d2fa2bd9fdd53b6202cfb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getProjectionMatrix</name>
      <anchor>b20b90ab8a3b6e073b336f193e633b82</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getViewingMatrix</name>
      <anchor>076a40c5e60e62b75f23ef47bbe2a170</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getViewVolume</name>
      <anchor>10bcfe2c754f6802ae1a099ad8b595e3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getViewportRegion</name>
      <anchor>930eec066ea2d2ded4d1eca62ecb1290</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPickStyle</name>
      <anchor>3daa267b5b0c462ea2fe41a61ec26b17</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getSwitch</name>
      <anchor>af9b8f52666ca3c0ccfd6572bd6cda49</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getCurrentResponse</name>
      <anchor>4f9efd32750fa5eb4d01cfca636f6bf1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>invokePreCallbacks</name>
      <anchor>de92a80d2c2ebc22f0ca871f2296fc35</anchor>
      <arglist>(const SoNode *const node)</arglist>
    </member>
    <member kind="function">
      <name>invokePostCallbacks</name>
      <anchor>55e55017fe21f07be7191054850e4214</anchor>
      <arglist>(const SoNode *const node)</arglist>
    </member>
    <member kind="function">
      <name>invokeTriangleCallbacks</name>
      <anchor>d162287962a03211d167f248166878d2</anchor>
      <arglist>(const SoShape *const shape, const SoPrimitiveVertex *const v1, const SoPrimitiveVertex *const v2, const SoPrimitiveVertex *const v3)</arglist>
    </member>
    <member kind="function">
      <name>invokeLineSegmentCallbacks</name>
      <anchor>c8793751f83619ca3318c8dd48e9de5f</anchor>
      <arglist>(const SoShape *const shape, const SoPrimitiveVertex *const v1, const SoPrimitiveVertex *const v2)</arglist>
    </member>
    <member kind="function">
      <name>invokePointCallbacks</name>
      <anchor>fe7c4ff2165b9475bd28f7ac654d47e9</anchor>
      <arglist>(const SoShape *const shape, const SoPrimitiveVertex *const v)</arglist>
    </member>
    <member kind="function">
      <name>shouldGeneratePrimitives</name>
      <anchor>06ce97cd16478fc8f4ca4b8f6bfbcfb8</anchor>
      <arglist>(const SoShape *shape) const </arglist>
    </member>
    <member kind="function">
      <name>getCurPathTail</name>
      <anchor>638952a8cd942fde3065ce043fef50c2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setCurrentNode</name>
      <anchor>aea936b682da09a8df2ae87a5edba03f</anchor>
      <arglist>(SoNode *const node)</arglist>
    </member>
    <member kind="function">
      <name>beginTraversal</name>
      <anchor>20de90ba2439c6f83e350d2bab64e4d4</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCallbackList</name>
    <filename>classSoCallbackList.html</filename>
    <member kind="function">
      <name>SoCallbackList</name>
      <anchor>ccb308b0e556f22f4c3d7e5ae0a66a86</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCallbackList</name>
      <anchor>75c30a6495ff8014147c02974039725a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>addCallback</name>
      <anchor>090abfa5f4fce2518249261a66ae3e6d</anchor>
      <arglist>(SoCallbackListCB *f, void *userData=NULL)</arglist>
    </member>
    <member kind="function">
      <name>removeCallback</name>
      <anchor>ec35f7d7aeadcdf4d557574e865fc0f6</anchor>
      <arglist>(SoCallbackListCB *f, void *userdata=NULL)</arglist>
    </member>
    <member kind="function">
      <name>clearCallbacks</name>
      <anchor>4a0226868b1669e3ebf432142c09d5e5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNumCallbacks</name>
      <anchor>942e1a2506aa23e0c0c9b74ce8c693af</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>invokeCallbacks</name>
      <anchor>1a310491a27b615e968e84eb484368f4</anchor>
      <arglist>(void *callbackdata)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCamera</name>
    <base>SoNode</base>
    <filename>classSoCamera.html</filename>
    <member kind="function">
      <name>SoCameraP</name>
      <anchor>3586d3f8a508c27f063b3ae220aa0cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ViewportMapping</name>
      <anchor>46fd7a2f6e8ca20e44682d005e0bb44c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>StereoMode</name>
      <anchor>e1516a54c7328d42694db1c5b62912ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ONOSCOPIC</name>
      <anchor>e1516a54c7328d42694db1c5b62912ecc0ec11eb92040c20ae1b0ade59672849</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EFT_VIEW</name>
      <anchor>e1516a54c7328d42694db1c5b62912ec4570af92101f1849e922b8b00a796752</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>IGHT_VIEW</name>
      <anchor>e1516a54c7328d42694db1c5b62912ec1bcb572494c5a757d7978b082357da77</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoCamera</name>
      <anchor>fe2aa3972f415c77eb0a61eb8a2ed0ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCamera</name>
      <anchor>1d8a58f827233bab4fe735b786ef986f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>807ae4b7ab4e62851a89f4e6ce2d17c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>d6a7f8c956fcc53225d0c90015ef28d3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>5f14376d53e09edd1eac6ca1641858db</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>08e0214079cfc559cf85c260d5d74511</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>4262768f5a82ef930e10e027bd091e3a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>pointAt</name>
      <anchor>0419569e203a18c84870f288d79af31d</anchor>
      <arglist>(const SbVec3f &amp;targetpoint)</arglist>
    </member>
    <member kind="function">
      <name>pointAt</name>
      <anchor>dac554b0c5d8ea465f539d704834f651</anchor>
      <arglist>(const SbVec3f &amp;targetpoint, const SbVec3f &amp;upvector)</arglist>
    </member>
    <member kind="function">
      <name>scaleHeight</name>
      <anchor>2a860095b69cc575ba845d4e228956f3</anchor>
      <arglist>(float scalefactor)=0</arglist>
    </member>
    <member kind="function">
      <name>getViewVolume</name>
      <anchor>9dabd51ab0445cdca516180df63a6fee</anchor>
      <arglist>(float useaspectratio=0.0f) const =0</arglist>
    </member>
    <member kind="function">
      <name>viewAll</name>
      <anchor>f04cc1f085e997c65832da9ddcd5a6aa</anchor>
      <arglist>(SoNode *const sceneroot, const SbViewportRegion &amp;vpregion, const float slack=1.0f)</arglist>
    </member>
    <member kind="function">
      <name>viewAll</name>
      <anchor>b10a2218561a9c6e82910cb6ded50118</anchor>
      <arglist>(SoPath *const path, const SbViewportRegion &amp;vpregion, const float slack=1.0f)</arglist>
    </member>
    <member kind="function">
      <name>getViewportBounds</name>
      <anchor>a3e6738f99a7d5e7f5b7420a8515d669</anchor>
      <arglist>(const SbViewportRegion &amp;region) const </arglist>
    </member>
    <member kind="function">
      <name>setStereoMode</name>
      <anchor>22e40f356f2ff2055b2a4b0f65c3aea6</anchor>
      <arglist>(StereoMode mode)</arglist>
    </member>
    <member kind="function">
      <name>getStereoMode</name>
      <anchor>83754e152b2f65542e6c06428b779dd2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setStereoAdjustment</name>
      <anchor>6ed2d2527604e86cc8be234b1e429991</anchor>
      <arglist>(float adjustment)</arglist>
    </member>
    <member kind="function">
      <name>getStereoAdjustment</name>
      <anchor>ee529c67134126a1fd9e8bad918e1680</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setBalanceAdjustment</name>
      <anchor>8d44d94fa463088b2ddfedff2ea72364</anchor>
      <arglist>(float adjustment)</arglist>
    </member>
    <member kind="function">
      <name>getBalanceAdjustment</name>
      <anchor>d92d00e82e26432a45679183a343fcc8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>413c4165d5065112db4c27687d9a58bf</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>7a55d20de9f29df22645ea8eab07bd9f</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>0e43b194b29f65bf2ffc97b29de634f2</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>826bfd39750a3c7300c9c0162eb04688</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>4731c977a5d5ef3848071509af281f6b</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>40dec90ae09d74656b04fb5bc170d4f0</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>f1b340a2532c40eebcb6386ba226d782</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>70260457d32bb6d8d0a7734b248f55b4</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>viewBoundingBox</name>
      <anchor>b04c2ed686b698bee525eaf29aca0f64</anchor>
      <arglist>(const SbBox3f &amp;box, float aspect, float slack)=0</arglist>
    </member>
    <member kind="function">
      <name>jitter</name>
      <anchor>7d06e8321c4f7fe394ceee5fc7866f11</anchor>
      <arglist>(int numpasses, int curpass, const SbViewportRegion &amp;vpreg, SbVec3f &amp;jitteramount) const </arglist>
    </member>
    <member kind="function">
      <name>viewportMapping</name>
      <anchor>bc6c62bbca8a24dd686a3fbb19adec2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>position</name>
      <anchor>1346f4606c4fd282818b4b7701bfeca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>orientation</name>
      <anchor>1e0dc74890db39d4c8ec2194ec7ab4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>aspectRatio</name>
      <anchor>377ac1c352e965864712bcc5ad0459df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>nearDistance</name>
      <anchor>96b1bd10731d0a5b8addf3368a8ba53a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>farDistance</name>
      <anchor>34890d0e76849f4ce27beefae287f471</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>focalDistance</name>
      <anchor>59fda50eb01e55536d3a603f6590fd2c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCameraKit</name>
    <base>SoBaseKit</base>
    <filename>classSoCameraKit.html</filename>
    <member kind="function">
      <name>camera</name>
      <anchor>fb8054475c74cccbb90678ea46848c52</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>transform</name>
      <anchor>fcdda73b7194c283e902c1ee5226251f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>transformGroup</name>
      <anchor>fd5e5b23f43454cfeeee8854277f51cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoCameraKit</name>
      <anchor>0a910b4788271ab679a209e2177a6c2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCameraKit</name>
      <anchor>6a4a768d36e3c28a0502b8cbb3738d33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>f6c30d2f6b0e77ae8b93e7a698fab8e5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>8cc7be82416dcf7b3b281f2a0541f8a6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>8bf5a547713c272ef3818a0f954ca5fd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>17c3a2f6bf6a613fa8b079e30212531f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>cac01aad51083afc163fa6a583a64004</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>048151f31acf60bfce15e2cfa7ab45f7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>b70b403c5e98de9fd2818566e21fc101</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0e8e3ba11a9e075a9cc2a2cdd0cedada</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCenterballDragger</name>
    <base>SoDragger</base>
    <filename>classSoCenterballDragger.html</filename>
    <member kind="function">
      <name>XAxis</name>
      <anchor>03eb8cc9d2236d8777ab086ab109a15e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>XAxisSwitch</name>
      <anchor>7471497f2d858fc072a17a3b604a2806</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>XCenterChanger</name>
      <anchor>26996db8b8a1de5f5ec0e433766158ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>XRotator</name>
      <anchor>da0d4bf369bca17ae045f09c75ff28e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>YAxis</name>
      <anchor>0c424418773bdbad94cceb3f570fd127</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>YAxisSwitch</name>
      <anchor>663ed0b1dd73de42f92a1d36f3f0ae84</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>YCenterChanger</name>
      <anchor>a69e7944823f73cffe62cbc62688e893</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>YRotator</name>
      <anchor>03a5cf1dae7b259485ff8e528d1b4e63</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ZAxis</name>
      <anchor>fe2f3276f78d79c42ae7bf4dce391f80</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ZAxisSwitch</name>
      <anchor>180eaf863a8909863e7df2dc81e759e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ZCenterChanger</name>
      <anchor>eac6660c37d25bbe93bc7f2b3dd566b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ZRotator</name>
      <anchor>38c5d08b9711a2e7c6ac974812632b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>antiSquish</name>
      <anchor>5fb6bc289257a9af7466c767602aa2f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lightModel</name>
      <anchor>e62274927e7f4fa2e82703ebc71cbd2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rot2X90</name>
      <anchor>03ac2a6a37c32870779af03ad3f907f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotX90</name>
      <anchor>eb0acd37ee9f61b74c4d45fb752dee6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotY90</name>
      <anchor>45686b299e31e13a92984dd3fd5fb9e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator</name>
      <anchor>04c6058c7b4fa3da86ea2e3b07072468</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>surroundScale</name>
      <anchor>94997f9bf814e363675882acf229405c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translateToCenter</name>
      <anchor>5e4f81f03699c80a5c25ac89eefb1dc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoCenterballDragger</name>
      <anchor>e20ff9682e8b592413299eacfaab0b33</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCenterballDragger</name>
      <anchor>3c4b9a7698e22a6186c008fc3f63e977</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>23c268073a8c9489ee2252b6120666f8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>dea2b24256c50a299b17b5f7ee1897a8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>9de9e4dae0fb9a3b989bb59d74631d21</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>d18e94ab4b49186f97921b1645597267</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>22ae1f943d1da9815e006fa267699c12</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>a0e42f2ef998596e3f007efab5c267a9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>d50e249d0d72039362b4af3d3699eb53</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>105d56960834421d9c68fa74fd7a7640</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>saveStartParameters</name>
      <anchor>934f32e493beaca4ad9a4902d8cb7a75</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>transferCenterDraggerMotion</name>
      <anchor>74d4721d078e56f2721d0c2c61e1f2e9</anchor>
      <arglist>(SoDragger *childdragger)</arglist>
    </member>
    <member kind="function">
      <name>setSwitches</name>
      <anchor>f2053f632eac0cca6c4d4c087dd9eef8</anchor>
      <arglist>(SoDragger *activechild)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>e44062a58e7488a2d403f5f89b91b40a</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>f3e5b4053a778531168fc1d294cf62cf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>1d2bbf65cb113390ad96e43438f945e8</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>b9c32d37339732608adc74cd547d7678</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>kidStartCB</name>
      <anchor>381b809109c06c3a29b2d19f5dbb810f</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>kidFinishCB</name>
      <anchor>1865b1a96fee759819d3699aa6361351</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>e6ce696b4fe4867a9d937b3ca2332979</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>d5b948c30fba5a66e3454187f05d7266</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>af87147f502dac6649b27f699382e3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>center</name>
      <anchor>f7bbdde79e7a2be60c45a3604fc49b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotFieldSensor</name>
      <anchor>5673c2a903f475d1f970d2fd3fbf6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>centerFieldSensor</name>
      <anchor>e48263d9c8be83817c3a965a6820ff11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCenterballManip</name>
    <base>SoTransformManip</base>
    <filename>classSoCenterballManip.html</filename>
    <member kind="function">
      <name>SoCenterballManip</name>
      <anchor>93c60e150d3ece7ce0a7c2c579aaace9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCenterballManip</name>
      <anchor>f25ba79faf9107477e27787eb59c4bea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5b33a2b21c0045b2ce529fc8ac231f0c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>5bb0ece1edbfcebb3ed47c564029b700</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>29f7074395a79222a0b2732c4bf122a8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>d7b53fd16811ef9f0f2786f84c43c3de</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>85c61343da3ced33ab66d90f22395cd9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setDragger</name>
      <anchor>eff210585d2a6608ae111501b57779cb</anchor>
      <arglist>(SoDragger *newDragger)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>1f003c67c4e4eab16ff8ad1bb1926a79</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>b4e6b9f57f44319fa006212198ca2980</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoChildList</name>
    <base>SoNodeList</base>
    <filename>classSoChildList.html</filename>
    <member kind="function">
      <name>SoChildList</name>
      <anchor>c69057ffe3be0d879222d7537cb4678b</anchor>
      <arglist>(SoNode *const parent)</arglist>
    </member>
    <member kind="function">
      <name>SoChildList</name>
      <anchor>1bf51909c3d537e78b5f7c6a40547356</anchor>
      <arglist>(SoNode *const parent, const int size)</arglist>
    </member>
    <member kind="function">
      <name>SoChildList</name>
      <anchor>78927429fd796efa62ed69641023f3ea</anchor>
      <arglist>(SoNode *const parent, const SoChildList &amp;cl)</arglist>
    </member>
    <member kind="function">
      <name>~SoChildList</name>
      <anchor>8a87a9f8b278052a9fe3f858cee077ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>be278cc582d5688ff633799b64be16ac</anchor>
      <arglist>(SoNode *const node)</arglist>
    </member>
    <member kind="function">
      <name>insert</name>
      <anchor>12c05cc49cf496fba99f037c2948b47d</anchor>
      <arglist>(SoNode *const ptr, const int addbefore)</arglist>
    </member>
    <member kind="function">
      <name>remove</name>
      <anchor>90856979bdc9a6ae323c38123485e704</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>truncate</name>
      <anchor>4dc4cb84b7f2624c53de457f60444e9d</anchor>
      <arglist>(const int length)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>0ddfd394cf8326ea1e5753579a4c2709</anchor>
      <arglist>(const SoChildList &amp;cl)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>c2746b512d935774934eb0869851362a</anchor>
      <arglist>(const int index, SoNode *const node)</arglist>
    </member>
    <member kind="function">
      <name>traverseInPath</name>
      <anchor>6925cc43313d082b086c99df35692a04</anchor>
      <arglist>(SoAction *const action, const int numindices, const int *indices)</arglist>
    </member>
    <member kind="function">
      <name>traverse</name>
      <anchor>ca4a3b907bceaa6e47691933bf23ef40</anchor>
      <arglist>(SoAction *const action)</arglist>
    </member>
    <member kind="function">
      <name>traverse</name>
      <anchor>e485442e6c8e626a0b9d376dda9a9a0b</anchor>
      <arglist>(SoAction *const action, const int index)</arglist>
    </member>
    <member kind="function">
      <name>traverse</name>
      <anchor>6fc486e01df51cbccbede4d45ad4ee8a</anchor>
      <arglist>(SoAction *const action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>traverse</name>
      <anchor>ddcc9b1041879aa9c8c0b0f30d8298e8</anchor>
      <arglist>(SoAction *const action, const int first, const int last)</arglist>
    </member>
    <member kind="function">
      <name>addPathAuditor</name>
      <anchor>67cc8c889977a74f0f81ca95c7515c08</anchor>
      <arglist>(SoPath *const path)</arglist>
    </member>
    <member kind="function">
      <name>removePathAuditor</name>
      <anchor>725b5c4126c09ce0061a2c73b37f859a</anchor>
      <arglist>(SoPath *const path)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoClipPlane</name>
    <base>SoNode</base>
    <filename>classSoClipPlane.html</filename>
    <member kind="function">
      <name>SoClipPlane</name>
      <anchor>d09e2c436c0068b983902f805baa49c2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoClipPlane</name>
      <anchor>4e46adb1f703b6b083d5a63c220381ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e236bc66ae18b17aca6251ac4a18d358</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>51ec7a77e639a3d6a829750232e849de</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>627a4d08cf0d9c636ef034344a16f917</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>d2ea084b63178302437cff79caf353c7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d7194eb8e4fd9ae4e667cf5fadd1f811</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>7657740c57fe05d9844580e95bc67bcc</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>9bb4e5e3ce200a8b281c883dcd7193a3</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>d0e6338cf8f776eda3c13650da10491f</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>219ed7a778ec5e69646235b50cec0ea4</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>plane</name>
      <anchor>60ec8bf21c21aaae3cbe926c9910ceef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>on</name>
      <anchor>e4c28645eb38133124d4096d8e4ed040</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoClipPlaneManip</name>
    <base>SoClipPlane</base>
    <filename>classSoClipPlaneManip.html</filename>
    <member kind="function">
      <name>SoClipPlaneManip</name>
      <anchor>454888f25c6085fde413315ad3d928c7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoClipPlaneManip</name>
      <anchor>509b309a1d3b5e8af826f5e3f36524c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>0599598554e46634d5a264c81e86f825</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>d601d6d116cb2c96aad5e09af9f601ea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>28484235c004b1b52ce43c42d102887e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>c172d56b880daf5d9b2e8e1b73ce1915</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>8cc8b85aadf0d191b29608d63031a9f8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getDragger</name>
      <anchor>03728b7e4e1ec9b58af114864bbd69d4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>50c3d70ae9aa64866f43818e79c75fe5</anchor>
      <arglist>(const SbBox3f &amp;box, const SbVec3f &amp;planenormal, float draggerscalefactor)</arglist>
    </member>
    <member kind="function">
      <name>replaceNode</name>
      <anchor>f7e248c396ab18fc222bba7ae2f8e97c</anchor>
      <arglist>(SoPath *p)</arglist>
    </member>
    <member kind="function">
      <name>replaceManip</name>
      <anchor>334a6fecefa52888f3ae9112ccc2c9c6</anchor>
      <arglist>(SoPath *p, SoClipPlane *newone) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>4dfd8d4764b544e7cdcfaaa6b48aa8a4</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>d743a4e6b71fb7ca58358a631fb79c01</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>5596e521a04dc190a79e0ad4754554ef</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>88e55ea3c526761c3091e691762b289b</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>6e108bc457f0351746bf11303849ad41</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>fc1efed45bbe9590bd4663537a94a8bc</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>1fdc2a28dece3ca5a1fc5edcc6972713</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>e3f713406292d4994636a8bb59a2e7b2</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>a1821bc949023f72532d53506f825d13</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setDragger</name>
      <anchor>a93a419279015b34d4719a5f2b4e3919</anchor>
      <arglist>(SoDragger *newdragger)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>772bc9131c912fda2de525ea17e51679</anchor>
      <arglist>(const SoFieldContainer *fromfc, SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>548d74022ed9b72beee359c5a5e20b53</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>5b2ec1e98642e4eed697e933086688ff</anchor>
      <arglist>(void *f, SoSensor *d)</arglist>
    </member>
    <member kind="function">
      <name>transferFieldValues</name>
      <anchor>7787363cec7a1a55b595ae3285750da9</anchor>
      <arglist>(const SoClipPlane *from, SoClipPlane *to)</arglist>
    </member>
    <member kind="function">
      <name>draggerPosition</name>
      <anchor>d80b29ea97bcbf8d37f84cc77854066a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeFieldSensor</name>
      <anchor>e6c42644176b5c854cbb7aeaee0b9403</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>onFieldSensor</name>
      <anchor>f52b97e5076fd587f0740a4d7b3a1100</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>draggerPosFieldSensor</name>
      <anchor>c629f2996c378d700be0c52f0c4c5166</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>children</name>
      <anchor>a15afeb6a06f3e5d37924e6f714508ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoColorIndex</name>
    <base>SoNode</base>
    <filename>classSoColorIndex.html</filename>
    <member kind="function">
      <name>SoColorIndex</name>
      <anchor>d849bbf901737e7d309000ba85312c4a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoColorIndex</name>
      <anchor>d758926dcb15e4de0cb40513363e1659</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>73a2dd9752e9425199a90393b53c9888</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>2b7da754f7a1c07ceb340c35327a503b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>69945cafc88f86518303c9b0cee62866</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>537a8f4ab474bd93cfba5dcd9102fb83</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7386450c60e48d2f0dd0d825d652c560</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>871c12986eeb3d727e5f830eecd4731a</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>index</name>
      <anchor>e82a0f33260c1803c4655b82ca3bc4aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoComplexity</name>
    <base>SoNode</base>
    <filename>classSoComplexity.html</filename>
    <member kind="function">
      <name>Type</name>
      <anchor>2ff546b75ae833a1ec12a95324868a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>BJECT_SPACE</name>
      <anchor>2ff546b75ae833a1ec12a95324868a58b4693c439c837b465befd52ad247674d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>CREEN_SPACE</name>
      <anchor>2ff546b75ae833a1ec12a95324868a5801f46fab18e8677d9b68b211505a842c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OUNDING_BOX</name>
      <anchor>2ff546b75ae833a1ec12a95324868a58971ff929e8c652bf80290f8870b492ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoComplexity</name>
      <anchor>e0318b0c164e7f36187a04b788446160</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoComplexity</name>
      <anchor>5c18627f1d67aec02c8af4d471beaf7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>1d7f579ecb033250fdb7769598b9022e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>044611826c1a1965d171c6502d04653a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>d0ea96f80e75356234358baa2270d0c4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f03af62575abe571ffbeb503e9cd2ba3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0b4e9d60edea7ff64b3580a0050e6d99</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>efb72a95a2b08c7fc678569d560c54b3</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>dac713794594abaf176539ed97ec9bf8</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>15784b488df23cb49213f5a67cd0fa9c</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>d312f090454b736e279067043469b9af</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>e95a4ebdaf1fff4abadbbf4a3081979e</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>3d61d0edaf611f2aa11bc00109b25d27</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>type</name>
      <anchor>6bd8d0a1658ae2055dfe49dbcfb07d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>0679d84b90988ecd1f0c8874d1368b6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>textureQuality</name>
      <anchor>b0645588ad9a9fa84b769e98455eee24</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoComposeMatrix</name>
    <base>SoEngine</base>
    <filename>classSoComposeMatrix.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>d17fcba464cba22f8220e4bd95b05ee6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>7cd801e01c114a2c9517dc0dfd84b259</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>9cf5070481d5d159150905ae1ab77318</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>b10334e4ec16edf6f9b8764d6c09e83e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>9cd64895136ddf25db7a99e679c74172</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>ecc409119fd515d993ce25b2d7539ed1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>06f1eb5daf6c749908dae8973f67fc2b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f581cb906290ab1bddc46527ab448574</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>cd4debbac4b084fa2e639bd95e8149c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>a6f2a9a411ad75950ac42450296afa2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>6241cd91c130e3e1484b5589d265fec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleOrientation</name>
      <anchor>4eb4b89be7dcf4b4929602e79c7dd1c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>center</name>
      <anchor>67c1b08794ce59ac89f390fcf236d3c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>matrix</name>
      <anchor>4979bd73e735eba2b4b54f83e6d3de3a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoComposeRotation</name>
    <base>SoEngine</base>
    <filename>classSoComposeRotation.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>d02226003b56ddcb71581591f31233fc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5d15bdca4d73db596dd5f34498aef2ec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>ec69fbfdd7bafa6e442fecb9b7b3c094</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>d3f585b0f319d5bd6751b892e9564702</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>02b81866f0fe359b231633854429e08f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>3f05a25566577821fe4594893dbf198b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>e4c44f2371693e33a1b75dcd99cd01c8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>c8b66b39e803fdb0930e7beccdd4d703</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>axis</name>
      <anchor>2ac1f3e7e63b34013c4d6d058a38f89e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>angle</name>
      <anchor>8cf4a24617302598dc83846665098770</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>453ba00842471d10f7f18b31772445e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoComposeRotationFromTo</name>
    <base>SoEngine</base>
    <filename>classSoComposeRotationFromTo.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>4e8a96ae13e9d4e754f820e3210b3529</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>33692fef031aed87512567fed45e5e8a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>71a8b55b9f4fb15924825cd4594413ed</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>d1c33846e70a4da18f7812293aeefa00</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>78867a495de30cf0d77fd7e3868eb37c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>58d8070ec26921674fc34273d2e1a491</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>c28a0f580d43243acac88b2592436de1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d243bea397261ac4d7e764d27eadf9f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>from</name>
      <anchor>054cc01b1fc1f12967ec90f76f818d12</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>to</name>
      <anchor>c1727a4557c1112a6c1c64ee0e47bb59</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>94744bf83f27899aa73d43435f6fa8b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoComposeVec2f</name>
    <base>SoEngine</base>
    <filename>classSoComposeVec2f.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>d041828e6820c2525893274c5ce2c5d5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>df167a0d4c2e0bd18eec9804b0e66d15</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>1d61d913defede7ce0dd8a2ca6bd6368</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>5da1b32d0842c4d4f69615fae7de6196</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>648cfc518e6adb4e06984244156d2362</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>eb10e597f43c5076a534642e7ba8dfc6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>0d4154e8dbeb3c9bbe073a1c730ee2c2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a9d57998f5fb8c856bcc64774697192a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>x</name>
      <anchor>711fa19eff02c31b977178fd053c085e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>y</name>
      <anchor>40c2c2048e64a22b40ae61218971b007</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>vector</name>
      <anchor>cd493c780c5f9369ad623f457212c7da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoComposeVec3f</name>
    <base>SoEngine</base>
    <filename>classSoComposeVec3f.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>1645845d2edab9480a9f608e5ff6b9d6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>79151cb3095f416dea095d086543bff5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>82d37615ece25fc7f747635284350ab3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>923ca925f415d93bf6eefd6a6a2a2207</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>accbd3a99ea558df414567295d746c38</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>8ef296e73b40015f4a35c41bbe944cf1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>5116bea614eb8dfeb14570430d65144c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>3271d90d6d7f2337848f41a7351dfa80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>x</name>
      <anchor>f35cac54bec7b467c585d19f9b3f6793</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>y</name>
      <anchor>9033ad7b14ece698957f2bf409024fba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>z</name>
      <anchor>3bbdc4e6eacd1e3bc0ef1744580d4db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>vector</name>
      <anchor>63bcb8f88c7131e0b2e417f57dca96d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoComposeVec4f</name>
    <base>SoEngine</base>
    <filename>classSoComposeVec4f.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>e78340efebbae05b009a3032ddd04aa0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>2369fc346312745a66f6e0722b3657b3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>469a1324e0319c959bbadee3303736d9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>6f6bd0bb8b43cc1cb16f5a8f063047d3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>5c4497d704cec80e880280688324abd1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>3c7e75111eeb7a4e64773e79b6bb70c8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>c434c69e7c0bd58bdcc4a1c7b0abeda8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6090fad59b5b64fa204b86a3b6c4aa12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>x</name>
      <anchor>4536a5a1f774bb3466e8f6834ee1c82e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>y</name>
      <anchor>bcd64f7576d0d203fd4a1f64881ebd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>z</name>
      <anchor>fdf729bfa8dadce997080f1849a77c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>w</name>
      <anchor>6d8ae29a09880d5e9aff6b47f01c48f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>vector</name>
      <anchor>df4c81fbcd4cbefbe717d633506081fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoComputeBoundingBox</name>
    <base>SoEngine</base>
    <filename>classSoComputeBoundingBox.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>b4d5925666821a25e5d184efd4cdb285</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoComputeBoundingBox</name>
      <anchor>adfc510515d7fde40abee1c9de43620c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoComputeBoundingBox</name>
      <anchor>4fc6977350b00b7dc290a2f094ca9e93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>95e8f591d4bc8ec41f44f97c4559f5b5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>aa9aa048ef7fc54cb4de4f3002ba57de</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>e68533d51a58cbd0bc25d5f026eefa5d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>3094da5c9078b12fef1db17bb9f0eaeb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>4ed1f783d5598ee5f38b6c06713b1671</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>098477549ad09755439879b5fc8780fe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>14437adbd70693ee0ea1b045c322b7bc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setViewportRegion</name>
      <anchor>97426b05730655d25703225023f2f351</anchor>
      <arglist>(const SbViewportRegion &amp;vpr)</arglist>
    </member>
    <member kind="function">
      <name>getViewportRegion</name>
      <anchor>8124629bce7d0e91645daea77bd2ccd5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>node</name>
      <anchor>23f40c99e64e982e2d3a88a1f9b551b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>path</name>
      <anchor>d4ca97e8aa530cdc447b6993ac4ec280</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>min</name>
      <anchor>320568a6746c591421bcfddddaf3b3c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>max</name>
      <anchor>e77a1fbd8d0c7aa08afcb742a0ed2f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>boxCenter</name>
      <anchor>f32d6c301face83701ce3977d959add6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>objectCenter</name>
      <anchor>ccd5aff5caa72d580e74002aff2f5074</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoConcatenate</name>
    <base>SoEngine</base>
    <filename>classSoConcatenate.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>125b940ea215f404cce1d2d2525ddb1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dummy</name>
      <anchor>7bf3e07fc44935e10a38d36fab773395</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoConcatenate</name>
      <anchor>1f245d172d0c83845a74228a60a4100e</anchor>
      <arglist>(SoType inputType)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>795abaed0bb818b5ee88c723a70396c7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>bccf6158a3ab36e045aa73c10e4153d9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>ff236684c612af82662b2a854480fe80</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>8f413bc2ded1ee8fcf33544351b95e0b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>00e49c83f3ee9fedaa12efdb1e2382b1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>638511640a738313995d930cb167bef9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7823f5629a7926e93d746306e21bab8c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>input</name>
      <anchor>02d6a2b555cd040e0f4c512c86d88b0e</anchor>
      <arglist>[NUMINPUTS]</arglist>
    </member>
    <member kind="function">
      <name>output</name>
      <anchor>2963c32a0e673b1161544158cb0b0826</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCone</name>
    <base>SoShape</base>
    <filename>classSoCone.html</filename>
    <member kind="function">
      <name>Part</name>
      <anchor>16fd6ddab267c269e269a883bb2774c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoCone</name>
      <anchor>194d82469bf653f5e361cb262d772fae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCone</name>
      <anchor>d4870bcfbf408b8bfe38862e9fbbf8f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>acea86af8a4dd4bc9c04b73598e754b9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>eda3349ee060a45da18707cf892bc57d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>780703da9dce95f99563b78a54ef98d9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>8aad37e099b8a017e7c6631be9c6d883</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>adae2ceb812c1da56520281e6fd1dcfe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addPart</name>
      <anchor>6bd8132e809b5d63e75579c180dfec7e</anchor>
      <arglist>(SoCone::Part part)</arglist>
    </member>
    <member kind="function">
      <name>removePart</name>
      <anchor>eed3e4496529a3c4eb8b0398e385d943</anchor>
      <arglist>(SoCone::Part part)</arglist>
    </member>
    <member kind="function">
      <name>hasPart</name>
      <anchor>310c7878562ab797a53229bbc2e96d0e</anchor>
      <arglist>(SoCone::Part part) const </arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>19cc4033b8b852a85c7000b49bc92ee5</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>872dddcbf2abc1f88c192a3fd60b4bb4</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>8b72db44472e853bfc9c52b643006eef</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>5030822da35b640ff56d89e89c451a14</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>8d93b12a5f789dd0c3029fad09f672ea</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>parts</name>
      <anchor>e8b026c6f0e7747321e52b456a76fd11</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>bottomRadius</name>
      <anchor>6fec355e686bdbed995d478a8aef7236</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>height</name>
      <anchor>39bac3fb3f787a8a0a375fa2ca855060</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoConeDetail</name>
    <base>SoDetail</base>
    <filename>classSoConeDetail.html</filename>
    <member kind="function">
      <name>SoConeDetail</name>
      <anchor>4d6065d857e82a14d848dc555b2d7023</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoConeDetail</name>
      <anchor>2e90a7d984df1d8782b7165e6daa6192</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>6b8c8f399291d4aee3a5109acc37a6fd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>cfae3429741914df7e2d14f1b7ae689a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>afabc61e4dc96ec72cf6e9fff0495e55</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>b2c53c6ec06e72c1206da006b32eeed0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setPart</name>
      <anchor>b6c3f74ee6937f7b08acf0f33ab2078a</anchor>
      <arglist>(const int part)</arglist>
    </member>
    <member kind="function">
      <name>getPart</name>
      <anchor>6ddf0ec35e8221562732ce5715527e1e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>part</name>
      <anchor>89ae24cd075b24033d6857e2cca1c7fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoContextHandler</name>
    <filename>classSoContextHandler.html</filename>
    <member kind="function">
      <name>ContextDestructionCB</name>
      <anchor>3dcbf3f4d63f7485048cd4616f2a3306</anchor>
      <arglist>(uint32_t contextid, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>destructingContext</name>
      <anchor>d20fd1fcbda9fbe9eb397f13f9c7bc45</anchor>
      <arglist>(uint32_t contextid)</arglist>
    </member>
    <member kind="function">
      <name>addContextDestructionCallback</name>
      <anchor>af0496a61e928935bba097c3f92f9380</anchor>
      <arglist>(ContextDestructionCB *func, void *closure)</arglist>
    </member>
    <member kind="function">
      <name>removeContextDestructionCallback</name>
      <anchor>1e6f8fa0c627413478a78d20ca7c5d98</anchor>
      <arglist>(ContextDestructionCB *func, void *closure)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCoordinate3</name>
    <base>SoNode</base>
    <filename>classSoCoordinate3.html</filename>
    <member kind="function">
      <name>SoCoordinate3</name>
      <anchor>6b2a0a4d482803a7a9d05a681aea937f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCoordinate3</name>
      <anchor>17bcad8c2d1a044b9bd878112f755636</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>3a4e49845411544db07246e77a037574</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>428a25f10d62b17f839d65e233793591</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>a094b2b9f11e9fcf2b5aab9d6d392469</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f331021fcec03f33a0c215beaf666487</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>48148d4efcd8527ab72d167b08ccc417</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>97ff3fa7739f930beb60472cbd6f6476</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>817f5e881510d7aa8a900eceaac87140</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>4dfc83ff0ab1c7fc6b22c06b43f5bbab</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>dc49a4eed12e606cf48ee28bef34b8de</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>0c94ede2d8397921333b0206cf098dbe</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>d2353b14ff0ba225dfb3f7fa71052d48</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>point</name>
      <anchor>51a6e25b7a4d81bc2c573514e8555744</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCoordinate4</name>
    <base>SoNode</base>
    <filename>classSoCoordinate4.html</filename>
    <member kind="function">
      <name>SoCoordinate4</name>
      <anchor>f6f5b8e75da00aeef00ed8ac31d5f01f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCoordinate4</name>
      <anchor>b90ae65b5cdaa14f00bcbbe7afecf2ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>2c79775056f42fb249ab6470948ec98a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>75fae7094ab164d0819609dc99cfffd8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>96e1cc357d196b0c9d384f5e8120f1c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>1a7224fc271a04b045bb1ad48fadcc08</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>aa4e937317300d1a532384b721373aa8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>1aeb8d5e41fefc704b95413952a97bd8</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>bf79b6f2c55e64cb29e1510b933a9003</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>6a16c41269ec92997b3188b6756916e1</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>7829d2987625df7acc081b5b6acf005e</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>335a9a5b6991b613d7a7e9e1ca6633e0</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>c904fbb90eb5e345e6e12c13057de48c</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>point</name>
      <anchor>c52e220adb5d87b99663042196911622</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCounter</name>
    <base>SoEngine</base>
    <filename>classSoCounter.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>6f5dd6ea1d75e10e542d44bd3629dadc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoCounter</name>
      <anchor>864ad6b12b2055c5fb6354186a26a81f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCounter</name>
      <anchor>bf9471f79a6924f8999bfbc46ef10a5d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>227461b0d0de5cf8c13307b20214615b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>3d056c62b5327053ea5776887ec9fb75</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>7e838c98fed09bf318b0ccbc45bca140</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>0a3873f40cbd0e96e269c669b3cbb327</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>cdb43e1cbb9695cc7399f39055a86263</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>c44037550d2bdb71f428c4d701195f2d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>cdb1b3c4c68fcf7ad9c6bef71d3e3096</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>min</name>
      <anchor>18b72f09eb77fe0b9929ba74f058c5d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>max</name>
      <anchor>166edeaf3a199340f9a37581cd30e6e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>step</name>
      <anchor>ae155b55670383b609303edebfe5ba9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>trigger</name>
      <anchor>84f5fc8d03a982d7aca14dd01020a9b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>reset</name>
      <anchor>0a738ea3099db302137c7d1b0efffa8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>output</name>
      <anchor>90c4163f33d4d3ae0556e9c5e0aa84e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>syncOut</name>
      <anchor>3b947dc8498b0641e7ab53a9ef26c95b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCube</name>
    <base>SoShape</base>
    <filename>classSoCube.html</filename>
    <member kind="function">
      <name>SoCube</name>
      <anchor>9d60d4a34fd06ec19ed0da061a328501</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCube</name>
      <anchor>1d48b861970f57feefcf5e4393860b70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>1d223bf06efed488a3564f400f8f5606</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>43afb7f5fa116334affb6aec763b523f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>14d9ece092814bf5bebfab7aa2c35e51</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>5009d7c87ff363a8fe4d6025cff7dcd4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6afc68d5000d23eee449f6dce30a361d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>dbc636042bf000df3fc613af40caa572</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>fb5e055a18bf968573b5004b4f46a335</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>887abedb1ebe5ed1a66bf41a2e3a6915</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>197c8d06b5b385647b2972ad2511ea0e</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>1cfaafcb67568159eaaa433791213d67</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>width</name>
      <anchor>19f68a24bfb4b7915b7c9e583bb2fc15</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>height</name>
      <anchor>92ea43ebe1d5afb78fdb80b8a50c9ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>depth</name>
      <anchor>21b8e5af4479ac00b2f93cd5171b2ee5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCubeDetail</name>
    <base>SoDetail</base>
    <filename>classSoCubeDetail.html</filename>
    <member kind="function">
      <name>SoCubeDetail</name>
      <anchor>3a32e1a67213881f91215b501605ccf0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCubeDetail</name>
      <anchor>e29faeb704f1043d3364780b6decc9ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>4b34233ce7b5c7012f1053465f6c2301</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e1f5b2a6ef4546887a293d95d1ba0846</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a77cfe441d94a765c37026e048105ec9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>4caa4ec06c12b8cec6ecec78dd6dc2fe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setPart</name>
      <anchor>3b16fbe26433a1c7f3ed638ca8a5c667</anchor>
      <arglist>(const int part)</arglist>
    </member>
    <member kind="function">
      <name>getPart</name>
      <anchor>4dd44da3c455ce6ffa9e066431c2dc0c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>part</name>
      <anchor>89daaeed80115d9c7f3aa73013dba8f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCylinder</name>
    <base>SoShape</base>
    <filename>classSoCylinder.html</filename>
    <member kind="function">
      <name>Part</name>
      <anchor>05b9b91a417388c07bb355cc455c8d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoCylinder</name>
      <anchor>b0d5ea0b83329dbe123bdf09582f9496</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCylinder</name>
      <anchor>11a26c90ff23f8fba4351e256519b836</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d9e5ca153a5a5e97a2d438f04b85181a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>c30d86e9134ae454e03f70d3dbe96421</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>54de45a59d528a7da4bf62ce818780fe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>107d1827ae7f6be0578ff7e12a60939a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d7286c2ac7e27a8e5287c10c5eeed611</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addPart</name>
      <anchor>04f5737d78087a9a7c502b0564373117</anchor>
      <arglist>(SoCylinder::Part part)</arglist>
    </member>
    <member kind="function">
      <name>removePart</name>
      <anchor>4913f036f5a9b65398c9c96120316cb9</anchor>
      <arglist>(SoCylinder::Part part)</arglist>
    </member>
    <member kind="function">
      <name>hasPart</name>
      <anchor>9d4060ccf11f6e4629ce881a490986a2</anchor>
      <arglist>(SoCylinder::Part part) const </arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>db973cd1b6d3bb74929858b6261f0957</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>18f5a7b192b5899bd357d3ebd8231bf1</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>a1a10b67ae1cd15275d757f90ab212fb</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>7750d9440a96f7ab274ad519d54cb5f5</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>dc07cdf175ac7f81f6f8c4dee6bdc994</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>radius</name>
      <anchor>c1699c05fc9859ea0140cc8a9bfd1eef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>height</name>
      <anchor>31f8dd601478fd5a768c460781b8d9eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>parts</name>
      <anchor>17e414a52b7ccfe341f9fcebc842ed46</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoCylinderDetail</name>
    <base>SoDetail</base>
    <filename>classSoCylinderDetail.html</filename>
    <member kind="function">
      <name>SoCylinderDetail</name>
      <anchor>79c29937eb3222d3bbf00ab0da9bd421</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoCylinderDetail</name>
      <anchor>f1030f70a3389fd6464fdf626aa8b500</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>70ccda4b296fff977eb90cce66986f44</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>8cb5f692e71c0ebaa49a2cbfe54b3136</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>ad52d14b4c6d216a0613856a89a20591</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>59a3bc175798158e7339bfb6dedecb7a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setPart</name>
      <anchor>97c80b94ba9cee2b6cdd6afe2f5208c6</anchor>
      <arglist>(const int part)</arglist>
    </member>
    <member kind="function">
      <name>getPart</name>
      <anchor>df5f774a8d9ec1971fb9afd09d397d77</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>part</name>
      <anchor>9e87ed7b1e64d0304dff1a1877a8481c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDataSensor</name>
    <base>SoDelayQueueSensor</base>
    <filename>classSoDataSensor.html</filename>
    <member kind="function">
      <name>getTriggerOperationType</name>
      <anchor>190eac778bb83b2a8b60287c3513423a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTriggerIndex</name>
      <anchor>3661b5e45da07f9c120fa88a6bdc54a6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTriggerFieldNumIndices</name>
      <anchor>039f73b255b022aa73fe9d1e855950c2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTriggerGroupChild</name>
      <anchor>3064f2306f2e3ec56eab5153edeeb67a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>SoDataSensor</name>
      <anchor>c25bca01660dcf4cb240444b33fbd42c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoDataSensor</name>
      <anchor>262cff7df7beb658b4d17f22e0ef7326</anchor>
      <arglist>(SoSensorCB *func, void *data)</arglist>
    </member>
    <member kind="function">
      <name>~SoDataSensor</name>
      <anchor>343ae89aa0b891e054bba7354d50a69b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setDeleteCallback</name>
      <anchor>150448b51a530012ae970553e0cd59d0</anchor>
      <arglist>(SoSensorCB *function, void *data=NULL)</arglist>
    </member>
    <member kind="function">
      <name>getTriggerNode</name>
      <anchor>873fb2a0f5ece04600c588d8abdc36e9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTriggerField</name>
      <anchor>c7344d2ec90cc0b7614c9c1877172ec1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTriggerPath</name>
      <anchor>9863d08cda1bab3d25a084449509ded0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setTriggerPathFlag</name>
      <anchor>84765fde3a1daf9447f7a3883fb1657a</anchor>
      <arglist>(SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>getTriggerPathFlag</name>
      <anchor>20d8129c7e29ee589e77e74d4eb9004f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTriggerPrevNode</name>
      <anchor>807a1284052355ea9f5959b8aeab5b78</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTriggerPrevField</name>
      <anchor>a824b41528d31840d48fb775892b755f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>trigger</name>
      <anchor>4200be321b36a977e358322b229329d6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>f19eeacd02a6b3e210a07f1bef483428</anchor>
      <arglist>(SoNotList *l)</arglist>
    </member>
    <member kind="function">
      <name>dyingReference</name>
      <anchor>a0aee30e4079e7c04ff58aa08d2f0987</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function">
      <name>invokeDeleteCallback</name>
      <anchor>b9e51845993dd93017c50cc23a49ec8a</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDB</name>
    <filename>classSoDB.html</filename>
    <member kind="function">
      <name>ProgressCallbackType</name>
      <anchor>888354ed1231a38f3b035ff1bc757de0</anchor>
      <arglist>(const SbName &amp;itemid, float fraction, SbBool interruptible, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>970f42dfd362c33c69fa1869bfae72b5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finish</name>
      <anchor>86ecbcfb8c31b89de106f12ce47d19c7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>cleanup</name>
      <anchor>d5c1b0734798b5fccb01d5a340e5f000</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getVersion</name>
      <anchor>2f93c9a3b9f6b25aa539f2d0273e742e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>dd51e875e439f7c490c93a52597dfa45</anchor>
      <arglist>(SoInput *in, SoPath *&amp;path)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>abf7fa12b099243992017cb28aa74014</anchor>
      <arglist>(SoInput *in, SoBase *&amp;base)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>d8cc6fd5154d667da051f7654848f738</anchor>
      <arglist>(SoInput *in, SoNode *&amp;rootnode)</arglist>
    </member>
    <member kind="function">
      <name>readAll</name>
      <anchor>360eeff71be48f193f073287f1d25757</anchor>
      <arglist>(SoInput *in)</arglist>
    </member>
    <member kind="function">
      <name>readAllVRML</name>
      <anchor>77b5925ac8cae55e3428a0e20b1d12a3</anchor>
      <arglist>(SoInput *in)</arglist>
    </member>
    <member kind="function">
      <name>isValidHeader</name>
      <anchor>fb9bfecc5740bc7843805fcdf6407f56</anchor>
      <arglist>(const char *teststring)</arglist>
    </member>
    <member kind="function">
      <name>registerHeader</name>
      <anchor>cc6b1ebd3ddc2ceadc5b6924c030d4c6</anchor>
      <arglist>(const SbString &amp;headerstring, SbBool isbinary, float ivversion, SoDBHeaderCB *precallback, SoDBHeaderCB *postcallback, void *userdata=NULL)</arglist>
    </member>
    <member kind="function">
      <name>getHeaderData</name>
      <anchor>900cddd08f802290c2cf31c744e9dc54</anchor>
      <arglist>(const SbString &amp;headerstring, SbBool &amp;isbinary, float &amp;ivversion, SoDBHeaderCB *&amp;precallback, SoDBHeaderCB *&amp;postcallback, void *&amp;userdata, SbBool substringok=0)</arglist>
    </member>
    <member kind="function">
      <name>getNumHeaders</name>
      <anchor>534d491c93463fb0aaf52624871e54f6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getHeaderString</name>
      <anchor>7550d7484ebd0141a91167b9225f2499</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <name>createGlobalField</name>
      <anchor>4de0ecbf63b7ff4c16157227eca1a9d8</anchor>
      <arglist>(const SbName &amp;name, SoType type)</arglist>
    </member>
    <member kind="function">
      <name>getGlobalField</name>
      <anchor>b3b006bd268810d17dd3f57362aa9dd1</anchor>
      <arglist>(const SbName &amp;name)</arglist>
    </member>
    <member kind="function">
      <name>renameGlobalField</name>
      <anchor>c9f92b1c6584725782c2bc22d0bf0ab1</anchor>
      <arglist>(const SbName &amp;from, const SbName &amp;to)</arglist>
    </member>
    <member kind="function">
      <name>setRealTimeInterval</name>
      <anchor>aa1018dd9fb76eab1af55c6322bd9019</anchor>
      <arglist>(const SbTime &amp;interval)</arglist>
    </member>
    <member kind="function">
      <name>getRealTimeInterval</name>
      <anchor>f1b5ed87dc9d0fdd4e58e0d3dc533fed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>enableRealTimeSensor</name>
      <anchor>89acf7863ffca8f10501c07ad3a70301</anchor>
      <arglist>(SbBool on)</arglist>
    </member>
    <member kind="function">
      <name>getSensorManager</name>
      <anchor>ec3467618745683725f2b5f09f0e9ba4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setDelaySensorTimeout</name>
      <anchor>4a40b27b0ed0cd4f3ee94f9b97c97894</anchor>
      <arglist>(const SbTime &amp;t)</arglist>
    </member>
    <member kind="function">
      <name>getDelaySensorTimeout</name>
      <anchor>f06e3af9a6fa582a02e22ad1175dbf5e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doSelect</name>
      <anchor>b6c303f9c73503e6d299576d6742ad96</anchor>
      <arglist>(int nfds, void *readfds, void *writefds, void *exceptfds, struct timeval *usertimeout)</arglist>
    </member>
    <member kind="function">
      <name>addConverter</name>
      <anchor>01479546225a62b92b9a3d0715417d33</anchor>
      <arglist>(SoType from, SoType to, SoType converter)</arglist>
    </member>
    <member kind="function">
      <name>getConverter</name>
      <anchor>1ff424d194f13d88abd5efc3e7d5b3b5</anchor>
      <arglist>(SoType from, SoType to)</arglist>
    </member>
    <member kind="function">
      <name>isInitialized</name>
      <anchor>b224f9d6c46e1ebe4c491f9acd611406</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>startNotify</name>
      <anchor>78a72575b9e042202ada783d73019caf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isNotifying</name>
      <anchor>01f3e1cec8bec1629e761b7e9c5b3700</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>endNotify</name>
      <anchor>30ee5427b857fc16afff0a08d8669196</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addProgressCallback</name>
      <anchor>8bfc95770120078504b6004db4a49c1b</anchor>
      <arglist>(ProgressCallbackType *func, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>removeProgressCallback</name>
      <anchor>cfefefa858f3aa8b824cf2c1a9544f0c</anchor>
      <arglist>(ProgressCallbackType *func, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>isMultiThread</name>
      <anchor>acaa6805ae0284379ccc24424e199535</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>readlock</name>
      <anchor>21f6da9e9825cbb89eeacf2b3d6ff357</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>readunlock</name>
      <anchor>f706439accf13393ebc3a8b330575bb5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>writelock</name>
      <anchor>3df36b103bdc10e8918ac9bdffc82461</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>writeunlock</name>
      <anchor>c470ece801064a0164a0f31bc33941e7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createRoute</name>
      <anchor>c3987b5e5936c7ce8cc11e6c647d717e</anchor>
      <arglist>(SoNode *from, const char *eventout, SoNode *to, const char *eventin)</arglist>
    </member>
    <member kind="function">
      <name>removeRoute</name>
      <anchor>48b28389f94db50c1277b99322816652</anchor>
      <arglist>(SoNode *from, const char *eventout, SoNode *to, const char *eventin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDebugError</name>
    <base>SoError</base>
    <filename>classSoDebugError.html</filename>
    <member kind="function">
      <name>Severity</name>
      <anchor>75af94a4fc4f0feb5b2ead59b04e9bbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>setHandlerCallback</name>
      <anchor>340ca1b8bd2902f7e854878e7de62d56</anchor>
      <arglist>(SoErrorCB *const function, void *const data)</arglist>
    </member>
    <member kind="function">
      <name>getHandlerCallback</name>
      <anchor>7164cc07552307d2fcc4dc065c94f54a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getHandlerData</name>
      <anchor>f4f7e2e7ecf3c334cfaf8d6183c49bcf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>48c568c5abcb561d0b7e6f7e47fe65f8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>608e8376b0af4d87579b5da4aab9ec6b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getSeverity</name>
      <anchor>1b07bfafad1f89368c0c117048d5be40</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>post</name>
      <anchor>c58cb29fc7116d5c41c2e41b9d9465b2</anchor>
      <arglist>(const char *const source, const char *const format,...)</arglist>
    </member>
    <member kind="function">
      <name>postWarning</name>
      <anchor>de660ff7e6ba7ff6c8f716016cf55531</anchor>
      <arglist>(const char *const source, const char *const format,...)</arglist>
    </member>
    <member kind="function">
      <name>postInfo</name>
      <anchor>0ec1038afce3f363d0566db878de8564</anchor>
      <arglist>(const char *const source, const char *const format,...)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>e520b068ee33431b3d25a061e619dc74</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getHandler</name>
      <anchor>9ab7c7bf255a2b22e25239c788f90832</anchor>
      <arglist>(void *&amp;data) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDecomposeMatrix</name>
    <base>SoEngine</base>
    <filename>classSoDecomposeMatrix.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>21eba8afe4d25e005aed8a6be91a0356</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>049c30049684914f25f344c2c0f46621</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>6702abb8c83dfe90d38dd2cc51461b23</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>c1bbe04455cd1e3caa051a9b11d9bb7f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>db1cc5a1d80ddc15fc03edebb40385af</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>78688a92e5cfdacdf2dafc6439bf4d4e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>2cb3d3fe33c9199d2e8e478784eba739</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d93bc1d2bf502b97cf1f84263d018d2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>matrix</name>
      <anchor>54096e2f7a4f4aa80df51fd6be3b3ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>center</name>
      <anchor>181aa5ce78179323d129b697ae73d47b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>bcabdb1cb175b5f06ed609e6dbb4ef78</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>97c3d1b772b24b92575384e06f20c69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>ee71769f2469748475aa2bb609cde77c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleOrientation</name>
      <anchor>5cebd08d5bd915d604fb70d3bc7e85d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDecomposeRotation</name>
    <base>SoEngine</base>
    <filename>classSoDecomposeRotation.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>2b0982196221ceabef87dcbeaa96d0e1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>cfe4052978e938fcf30bc12bc9bc3e05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>3628d1aded59c060cff19c4862c79a13</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>73c864cd68a5262fd3cb1547f759406d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>701267a4378220d97c2e3a994ae39022</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>6885bb56b5a2ab53a952800118dea518</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>0e08dd18205e42e8cc702a056fba4899</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7e1ad1620653ead5f3111173f891279a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>38e22a181881145021896ebf4ca3339c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>axis</name>
      <anchor>ba5d52e7655c0e8bd6ec75f22f03b073</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>angle</name>
      <anchor>895ce5a23350132bd71c97f1687b6c28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDecomposeVec2f</name>
    <base>SoEngine</base>
    <filename>classSoDecomposeVec2f.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>1ff5b43cb90e5cd82c62b79e66357661</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>77e474cdc50525ad0218925d0b434a6d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>3b95b6803dcb9082f9c8768c4d0be319</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>71fb8ae1274495f5fa5ecc55d941ce2a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>24acd1cc495ac8fbde6016b1e2d0e7c9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>82c0964a144bc52e0f76390b2f1e0f2d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>b7aa698b7bd0edff32ebb1e068d39edb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>07b9418adc2d85998fb6628a691784f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>vector</name>
      <anchor>2133b32a4ccdc8c2a8d46d659a3c8d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>x</name>
      <anchor>7bdc25bd0a74d2f7aa60ab8e9e7795ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>y</name>
      <anchor>e6f0965af2b31c18cd30137bdab10346</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDecomposeVec3f</name>
    <base>SoEngine</base>
    <filename>classSoDecomposeVec3f.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>a654e245c765384dd5a496c4ea22b052</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>b49e46d736635ad80fdf324784dcaed8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>e58613708c94b4c06ee48c72928e6d4e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>1a529c5a9a26495e2443cbcbad85b035</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>330f5c9d571a0531549321ae694067e6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f38a09fe3e633047ef70724114c71b52</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>5b8929ccec8e67d5648d82ac882295cf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6a56ba39988145f1b4f74cbf941fc340</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>vector</name>
      <anchor>50eaaeb518759e1b86ad0ab9f21c0d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>x</name>
      <anchor>94c1cc4f6f4a22ac870ba228dead101c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>y</name>
      <anchor>5f75fdf04c1191c6fcdc2b1aebfad572</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>z</name>
      <anchor>5ca8de0537b8f19e206bfe5ad6dec55a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDecomposeVec4f</name>
    <base>SoEngine</base>
    <filename>classSoDecomposeVec4f.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>c6fe858e1221aba82977a1ec50a29311</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>7ed88d91669d226b654fc96403eb8cb9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>5ca0dcbc4ddf005eff6e48d59c670c94</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>099f07ebd352930255ec29afc66a4ac5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>64f48b5b2fdc01a4acdb8976f3f14511</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>12ded06401715e0f869b9502d0c2918a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>33df6ff9f61498453ba9cc7eb5811551</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>8805df7332c6e343c27e949e7054b089</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>vector</name>
      <anchor>4a651b269aa2047d0e18edc0940f6529</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>x</name>
      <anchor>d81ffe20e190629afbae1874a42a3685</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>y</name>
      <anchor>b4c800832bf1e71b915849513d5b2bfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>z</name>
      <anchor>21a114bf8b5a17cc2306a8d7c578400a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>w</name>
      <anchor>99936fdacfefd6a0542071253637fe5d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDelayQueueSensor</name>
    <base>SoSensor</base>
    <filename>classSoDelayQueueSensor.html</filename>
    <member kind="function">
      <name>SoDelayQueueSensor</name>
      <anchor>d13897ccad36d059d146f1956b83e08c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoDelayQueueSensor</name>
      <anchor>eba2e89bb52edfb6d47851e0ae2f03e2</anchor>
      <arglist>(SoSensorCB *func, void *data)</arglist>
    </member>
    <member kind="function">
      <name>~SoDelayQueueSensor</name>
      <anchor>89ca819b836f56b8699e5f8a62f0e0b3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setPriority</name>
      <anchor>bdf3c976cf2f6ca0a1cd67118b326de4</anchor>
      <arglist>(uint32_t pri)</arglist>
    </member>
    <member kind="function">
      <name>getPriority</name>
      <anchor>0ab7eb37bf927dd75d11bd150e9086d5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getDefaultPriority</name>
      <anchor>20afebece0d66b67cddcf59a3445bf3b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>schedule</name>
      <anchor>6d3e044f4a81d2e43a51113757d3f86e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>unschedule</name>
      <anchor>0e3737bdbcb78844beae7c759a9e7af4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isScheduled</name>
      <anchor>49e610acc61bde9db9e95af8fa63de07</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isIdleOnly</name>
      <anchor>6eaa951dcc54e1ffa7c34575fa44301e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>trigger</name>
      <anchor>0b8ec90cc9ab774853624c2f9de76344</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>scheduled</name>
      <anchor>5b81587b893c71b31856ee3a8085b9d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDetail</name>
    <filename>classSoDetail.html</filename>
    <member kind="function">
      <name>~SoDetail</name>
      <anchor>7584286c482e7f9ddfce80e2ea02d7fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>SoDetail</name>
      <anchor>9ab95ca77cf53c15d3ca46625a9323d2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7867506c649488dd52b0569d807cbc28</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClasses</name>
      <anchor>54ac808db82da0f072ef8f8aa00181f7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>1fe89bba19607b2854fb41beec156b67</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>5f254d2c666e18624de3bd2aedbc2b46</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function">
      <name>isOfType</name>
      <anchor>176df4de779d768b8c30215e9d97ea29</anchor>
      <arglist>(const SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>73a661514c9e90826d521597121ba491</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDetailList</name>
    <base>SbPList</base>
    <filename>classSoDetailList.html</filename>
    <member kind="function">
      <name>append</name>
      <anchor>fc8c5de6627358764bbe927456d00203</anchor>
      <arglist>(SoDetail *detail)</arglist>
    </member>
    <member kind="function">
      <name>insert</name>
      <anchor>312638158426fb9c0b9a939f769e1a51</anchor>
      <arglist>(SoDetail *detail, const int insertbefore)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>ab3a63a08885327c16ce529d467dfb61</anchor>
      <arglist>(const SoDetailList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>SoDetailList</name>
      <anchor>2a581608ddfd8140c87377c5c23b3c93</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoDetailList</name>
      <anchor>1c3d4d06f64bb86665cd4192271c5c14</anchor>
      <arglist>(const int sizehint)</arglist>
    </member>
    <member kind="function">
      <name>SoDetailList</name>
      <anchor>6a04bc8f53c87eb30d5c26f13df6a14c</anchor>
      <arglist>(const SoDetailList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>~SoDetailList</name>
      <anchor>75f3a6dba3067c95061024b540f16267</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>truncate</name>
      <anchor>991227efed1d231562858d0303609dfb</anchor>
      <arglist>(const int length, const int fit=0)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>555f88b11be299f2fe2221024e920682</anchor>
      <arglist>(const SoDetailList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>a93a8ff7f9cb9ca2bc5483d21dcf959a</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>d943c37febf69f78808b15a8fcaec341</anchor>
      <arglist>(const int index, SoDetail *item)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDirectionalLight</name>
    <base>SoLight</base>
    <filename>classSoDirectionalLight.html</filename>
    <member kind="function">
      <name>SoDirectionalLight</name>
      <anchor>6beb73067cc6604001516bd2e7eef63b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoDirectionalLight</name>
      <anchor>05837c5c856edd84151a3044bde15dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e212a2a6c75a2806edc0d1bca6a76ac1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>0760831027463ee678e0ddc8fd8b73bb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>7b4185c39beeaf5ac8fbd04d71775f7d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>853c45fabb4d05010be990ed4f95d9df</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>ba6a19024e8b7462af9730667818f530</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>4d8a6da6e6c3c9617de0e99042d846f2</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>direction</name>
      <anchor>78c3a83326d1f022b3fa004fd1988fb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDirectionalLightDragger</name>
    <base>SoDragger</base>
    <filename>classSoDirectionalLightDragger.html</filename>
    <member kind="function">
      <name>material</name>
      <anchor>a1d9b3945e90acd68af419dca273074b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator</name>
      <anchor>f214a0bdc0a1061fb5a9c987d41b468e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator</name>
      <anchor>22be2f128e752f3dcf4507c31d92aa46</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translatorRotInv</name>
      <anchor>b9ac19c0cf43a68b03a16d7f060fbbed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translatorSep</name>
      <anchor>eb6aaf93d46655c4720de06d6ce8f436</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoDirectionalLightDragger</name>
      <anchor>14651d7fb0f95d7befb9bd70c35f6406</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoDirectionalLightDragger</name>
      <anchor>f4bb3d58793c71ef40180e48d03383fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>081a845c35760efe51b4049fcca3f8b8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>9377fb225815f3ef09a7339a53e55a07</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>540423a70403f154325cc98202b0dfa2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>c998e21e13ec9530166dda51728323b5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>3a6b563322806587b2098bf8c60eef70</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>167e991210b9a98dd8b3d5a243bdd55f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>2c0b66862a65a6dfeac91c4e7f904dfa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>4e51bcd67e65a25e3840e8e17ba7be1d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>847c66edd2490f70053ec82bee925eee</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>ff0f7d108122cc57d238786123ef59dd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>a5870f7164dbf184fdd536b6a8414989</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>c0f3901a70e0bfa884cc46e74a19792d</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>c0954427a5a2bc50827692d8922050cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>ee4f54e9095128c222336e09a8c441cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotFieldSensor</name>
      <anchor>4f9e4661b9ab9a003f7814cc32af6d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translFieldSensor</name>
      <anchor>1f824090ea2a124a512f28a539438b77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDirectionalLightManip</name>
    <base>SoDirectionalLight</base>
    <filename>classSoDirectionalLightManip.html</filename>
    <member kind="function">
      <name>SoDirectionalLightManip</name>
      <anchor>42f2cbe452fc3921823ef651a53e1384</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoDirectionalLightManip</name>
      <anchor>8604d825e153aadefe3418446eac380d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>14eeeb6a5bc49d024a205d66f994f44a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>e9208944ebe6658512549b0a5082ea6d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>c6d60ab01a0db8f4b0410c07e8a6a602</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>25cd1cdc4a7238821f1b82115591597e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7ac7ec6652f6cd8862c1045733f3c3fa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getDragger</name>
      <anchor>42012f970c931482ade3af4e4eaf2568</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>replaceNode</name>
      <anchor>2ae48f47de4ddc4c2c800c75a633d96e</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>replaceManip</name>
      <anchor>f94ffe38ca79ac58da39fb4a66ca2406</anchor>
      <arglist>(SoPath *path, SoDirectionalLight *newone) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>9a5d39c4ad32e5e46c52527d9e81c496</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>fa525b98040dc638885181733d3e1027</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>81dcd1b5a49f0cd8f8f94cd59f186abe</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>739b0e5b2fcef6f016de99517d8a2f8c</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>826bc9cf9e8f19f0dbd09b28cae13153</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>9da0caec22104db8ea3f1ddf6377a742</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>7f3a7ef4af26dca09a9e2946450b3881</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>22c53af241354dc897557c762da5e9f0</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>f39e58d2a58b80ee8c71fca506c81038</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setDragger</name>
      <anchor>a03a9ce3f1b94b1179ff1be580cdac44</anchor>
      <arglist>(SoDragger *newdragger)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>e3604fabe26d2c34a7adf7f7c8c30f3b</anchor>
      <arglist>(const SoFieldContainer *fromfc, SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>transferFieldValues</name>
      <anchor>00a6855d84fa625aa2c99346a234f305</anchor>
      <arglist>(const SoDirectionalLight *from, SoDirectionalLight *to)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>7b151697b2ae03ff166e56e45e3f4ad4</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>9eec1e548147d70ff18bf85a4d2e9018</anchor>
      <arglist>(void *f, SoSensor *d)</arglist>
    </member>
    <member kind="function">
      <name>directionFieldSensor</name>
      <anchor>202b36e6d1a4f40de2cc3ff95a692f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>colorFieldSensor</name>
      <anchor>8afc505c3b298d48749ac4be009a6d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>children</name>
      <anchor>0747dda4b23e01873ffa607283d71199</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDragger</name>
    <base>SoInteractionKit</base>
    <filename>classSoDragger.html</filename>
    <member kind="function">
      <name>motionMatrix</name>
      <anchor>833199717ea3058c2cdff0ed7a4dea8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ProjectorFrontSetting</name>
      <anchor>fdfe9d11fcbde8e42fff713907f6c7a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>RONT</name>
      <anchor>fdfe9d11fcbde8e42fff713907f6c7a19afe09d041b239cbfda699703db89f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ACK</name>
      <anchor>fdfe9d11fcbde8e42fff713907f6c7a11740183c2afc21c9650e8c0ab7647750</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SE_PICK</name>
      <anchor>fdfe9d11fcbde8e42fff713907f6c7a1147e0fac0b67cf918a1b3ed8a77f07c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoDragger</name>
      <anchor>59e6729622d54554dc14ab8a105efde2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoDragger</name>
      <anchor>bc1362cb0d54f1e2b193a548ab97afce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>4873792da486ae8a93293c0deed54e2e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>5658eb9e71d6fb31598e18af3e20baa9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>e4a600375ffb16928ea26f7d0618ab46</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>68a06a2bee8a1beda20412d9505fba0e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>9053ad5fda1f766160a0ca406e2af235</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>0a472ad73e92e20353012f8e7c2252ba</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>9f44bdbef625cde5846f7003d9c73786</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>0849979a0ac2a1668aafb79454450eb8</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>c7b6197387c2f6afbab953810c53df84</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>80e097aa02fde58e7639d1838448e259</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>5223be55ff1d7e5782f734cb5523a6c9</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>c0b672a2e282c740c31c9ad9d8b8caa2</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>e165ab1af26004fb2c44d0928fa1be25</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>223837de2231bbd3df15fecd1ce5900a</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>addStartCallback</name>
      <anchor>8b2d2084710f60e615420d7b6787bbc2</anchor>
      <arglist>(SoDraggerCB *func, void *data=NULL)</arglist>
    </member>
    <member kind="function">
      <name>removeStartCallback</name>
      <anchor>e00e9e57f085a8f76aa16a5b6e0b1230</anchor>
      <arglist>(SoDraggerCB *func, void *data=NULL)</arglist>
    </member>
    <member kind="function">
      <name>addMotionCallback</name>
      <anchor>c0517769322f58ec7c845d7e3e4a404d</anchor>
      <arglist>(SoDraggerCB *func, void *data=NULL)</arglist>
    </member>
    <member kind="function">
      <name>removeMotionCallback</name>
      <anchor>faaececc9dc22bc61f0e9d2008f516c3</anchor>
      <arglist>(SoDraggerCB *func, void *data=NULL)</arglist>
    </member>
    <member kind="function">
      <name>addFinishCallback</name>
      <anchor>79adb2dc857a4658627a97c0343a268d</anchor>
      <arglist>(SoDraggerCB *func, void *data=NULL)</arglist>
    </member>
    <member kind="function">
      <name>removeFinishCallback</name>
      <anchor>951623ea7527a67b78fe270549acf6e0</anchor>
      <arglist>(SoDraggerCB *func, void *data=NULL)</arglist>
    </member>
    <member kind="function">
      <name>addValueChangedCallback</name>
      <anchor>9fecd19fe8dd6ee0f33313f0aca4f366</anchor>
      <arglist>(SoDraggerCB *func, void *data=NULL)</arglist>
    </member>
    <member kind="function">
      <name>removeValueChangedCallback</name>
      <anchor>36c578d4ba2f222507a02af838dee8a2</anchor>
      <arglist>(SoDraggerCB *func, void *data=NULL)</arglist>
    </member>
    <member kind="function">
      <name>setMinGesture</name>
      <anchor>0f32b086413f00d08c500eabbf14cc55</anchor>
      <arglist>(int pixels)</arglist>
    </member>
    <member kind="function">
      <name>getMinGesture</name>
      <anchor>c075d129602b4abdd29e76871385d121</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>enableValueChangedCallbacks</name>
      <anchor>c9b06cd585ddf05ae29cb706dd7c9675</anchor>
      <arglist>(SbBool newval)</arglist>
    </member>
    <member kind="function">
      <name>getMotionMatrix</name>
      <anchor>480a493bc4d4202af034e7b9b2019815</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addOtherEventCallback</name>
      <anchor>457e60b7a34b2063ef23426b6225c54e</anchor>
      <arglist>(SoDraggerCB *func, void *data=NULL)</arglist>
    </member>
    <member kind="function">
      <name>removeOtherEventCallback</name>
      <anchor>a9535e0b23caf155aacb6d96b3d6d418</anchor>
      <arglist>(SoDraggerCB *func, void *data=NULL)</arglist>
    </member>
    <member kind="function">
      <name>registerChildDragger</name>
      <anchor>1533542fa61931e47e3bd24249df8b3c</anchor>
      <arglist>(SoDragger *child)</arglist>
    </member>
    <member kind="function">
      <name>unregisterChildDragger</name>
      <anchor>a42ef5a835a31685215bc70d3d6b4274</anchor>
      <arglist>(SoDragger *child)</arglist>
    </member>
    <member kind="function">
      <name>registerChildDraggerMovingIndependently</name>
      <anchor>2df00ef00554bcfe194179b3bf8ab9a2</anchor>
      <arglist>(SoDragger *child)</arglist>
    </member>
    <member kind="function">
      <name>unregisterChildDraggerMovingIndependently</name>
      <anchor>29e4050c87c047de835fd0c3e9b2134e</anchor>
      <arglist>(SoDragger *child)</arglist>
    </member>
    <member kind="function">
      <name>getLocalToWorldMatrix</name>
      <anchor>be5e0efec810954d18f51cacfee6104d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getWorldToLocalMatrix</name>
      <anchor>f6863eacde8a13c38d50cd48bb59867c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getLocalStartingPoint</name>
      <anchor>b9a499454ab4e0b5a9c05b75881cb242</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getWorldStartingPoint</name>
      <anchor>b7c24a8e66358d591a734faacbc24cc1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getPartToLocalMatrix</name>
      <anchor>83ed4b69730c2246f88e4bde8b72b9b6</anchor>
      <arglist>(const SbName &amp;partname, SbMatrix &amp;parttolocalmatrix, SbMatrix &amp;localtopartmatrix)</arglist>
    </member>
    <member kind="function">
      <name>transformMatrixLocalToWorld</name>
      <anchor>b93ae5975ab82fbe88180df4525ebe1e</anchor>
      <arglist>(const SbMatrix &amp;frommatrix, SbMatrix &amp;tomatrix)</arglist>
    </member>
    <member kind="function">
      <name>transformMatrixWorldToLocal</name>
      <anchor>9c564861277072608e29b1c6d5ba8645</anchor>
      <arglist>(const SbMatrix &amp;frommatrix, SbMatrix &amp;tomatrix)</arglist>
    </member>
    <member kind="function">
      <name>transformMatrixToLocalSpace</name>
      <anchor>7b13f37e194daf3ee5e1a022b7c4dbe4</anchor>
      <arglist>(const SbMatrix &amp;frommatrix, SbMatrix &amp;tomatrix, const SbName &amp;fromspacepartname)</arglist>
    </member>
    <member kind="function">
      <name>setMotionMatrix</name>
      <anchor>b83eaa55e4c2093594f5236cc4932dc2</anchor>
      <arglist>(const SbMatrix &amp;newmatrix)</arglist>
    </member>
    <member kind="function">
      <name>valueChanged</name>
      <anchor>6117eca20390155a450d62d99b41c6f8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getStartMotionMatrix</name>
      <anchor>b24a03b1a24ae24aa65ee40f1bb1b170</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>saveStartParameters</name>
      <anchor>9bca559c2581d4c09ecf2c81b8285764</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getPickPath</name>
      <anchor>5fdba6252dd6dac3ee024e0441ba08c0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getEvent</name>
      <anchor>cb11f0192517060a37b258985107ee80</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>createPathToThis</name>
      <anchor>dab411d63e761b7b9d9a4c5b12271cea</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getSurrogatePartPickedOwner</name>
      <anchor>380674cb4fcaca667796b14585564920</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getSurrogatePartPickedName</name>
      <anchor>c8d75e080e63a6f5f3a0f7020c88a3df</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getSurrogatePartPickedPath</name>
      <anchor>6df11eee6bd753618faa9600a8c007a1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setStartingPoint</name>
      <anchor>446f19479cbf0613c94c58483b82082d</anchor>
      <arglist>(const SoPickedPoint *newpoint)</arglist>
    </member>
    <member kind="function">
      <name>setStartingPoint</name>
      <anchor>91da7806b51319c0e248f26a95dd7da2</anchor>
      <arglist>(const SbVec3f &amp;newpoint)</arglist>
    </member>
    <member kind="function">
      <name>getViewVolume</name>
      <anchor>63c6047ec329569454e6f6c3c0ff5089</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setViewVolume</name>
      <anchor>c97a3e1f1d3d0c733dacf67a88c95e12</anchor>
      <arglist>(const SbViewVolume &amp;vol)</arglist>
    </member>
    <member kind="function">
      <name>getViewportRegion</name>
      <anchor>07c680123d27c0d2f3a848dc1a765b5e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setViewportRegion</name>
      <anchor>984519db2bd69dc0cfb5ae27a57d39da</anchor>
      <arglist>(const SbViewportRegion &amp;reg)</arglist>
    </member>
    <member kind="function">
      <name>getHandleEventAction</name>
      <anchor>20fd7d4f461ef86fa688a69e554ab0bb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setHandleEventAction</name>
      <anchor>46ce71e08a9ac09d42521f60e1b5b795</anchor>
      <arglist>(SoHandleEventAction *newAction)</arglist>
    </member>
    <member kind="function">
      <name>setTempPathToThis</name>
      <anchor>966b9d325e50c367ffed15aadfe51f9e</anchor>
      <arglist>(const SoPath *somethingclose)</arglist>
    </member>
    <member kind="function">
      <name>grabEventsSetup</name>
      <anchor>ccbb8d732a2f501deff37b5a1e4083c7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>grabEventsCleanup</name>
      <anchor>40624b149275583541b4658326d6ea28</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>workFieldsIntoTransform</name>
      <anchor>848dfd24b9f14d6250f631556defe841</anchor>
      <arglist>(SbMatrix &amp;mtx)</arglist>
    </member>
    <member kind="function">
      <name>setFrontOnProjector</name>
      <anchor>11646a5bcfc56f18afdde7a9a59ba985</anchor>
      <arglist>(ProjectorFrontSetting newval)</arglist>
    </member>
    <member kind="function">
      <name>getFrontOnProjector</name>
      <anchor>b29aecdb558e595d70ee681fc762710a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setMinScale</name>
      <anchor>35be28bdfe4fa34e7c7251726c0dae22</anchor>
      <arglist>(float newminscale)</arglist>
    </member>
    <member kind="function">
      <name>getMinScale</name>
      <anchor>5af4d13935e41873783d8611021ced6c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>workValuesIntoTransform</name>
      <anchor>9d27ed39a52e5844f7c84ab4324090b4</anchor>
      <arglist>(SbMatrix &amp;mtx, const SbVec3f *translationptr, const SbRotation *rotationptr, const SbVec3f *scalefactorptr, const SbRotation *scaleorientationptr, const SbVec3f *centerptr)</arglist>
    </member>
    <member kind="function">
      <name>getTransformFast</name>
      <anchor>866ac61bb63a9e26e8fbeaef3b260111</anchor>
      <arglist>(SbMatrix &amp;mtx, SbVec3f &amp;translation, SbRotation &amp;rotation, SbVec3f &amp;scalefactor, SbRotation &amp;scaleorientation, const SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>getTransformFast</name>
      <anchor>e73b0045c2b30e7edb86391a461b2a63</anchor>
      <arglist>(SbMatrix &amp;mtx, SbVec3f &amp;translation, SbRotation &amp;rotation, SbVec3f &amp;scalefactor, SbRotation &amp;scaleorientation)</arglist>
    </member>
    <member kind="function">
      <name>appendTranslation</name>
      <anchor>bbcb4cdb3e1542a6896af65a9395f50c</anchor>
      <arglist>(const SbMatrix &amp;mtx, const SbVec3f &amp;translation, const SbMatrix *conversion=NULL)</arglist>
    </member>
    <member kind="function">
      <name>appendScale</name>
      <anchor>58abbcf51017c8756d96e54ff2005a62</anchor>
      <arglist>(const SbMatrix &amp;mtx, const SbVec3f &amp;scale, const SbVec3f &amp;scalecenter, const SbMatrix *conversion=NULL)</arglist>
    </member>
    <member kind="function">
      <name>appendRotation</name>
      <anchor>444ce113b549f9808fdbff77514b3458</anchor>
      <arglist>(const SbMatrix &amp;mtx, const SbRotation &amp;rot, const SbVec3f &amp;rotcenter, const SbMatrix *conversion=NULL)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>619901374bbc6824c05e53a7b5f114b6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClasses</name>
      <anchor>6ad76dc427dc903678e1e4936bbc7785</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNormalizedLocaterPosition</name>
      <anchor>b17562433812d4041cae9ecee4b736e1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getLocaterPosition</name>
      <anchor>0fd6089ae6639692defd470746aec7c2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getStartLocaterPosition</name>
      <anchor>9c3f74c67b63019a9547ebb314a0cc2c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setStartLocaterPosition</name>
      <anchor>8d389e453416f6f90f4cc103c06fe764</anchor>
      <arglist>(SbVec2s p)</arglist>
    </member>
    <member kind="function">
      <name>isAdequateConstraintMotion</name>
      <anchor>017aa7024e37f667753431da394dc189</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>shouldGrabBasedOnSurrogate</name>
      <anchor>7086e5aaf6859e29754300526ba51482</anchor>
      <arglist>(const SoPath *pickpath, const SoPath *surrogatepath)</arglist>
    </member>
    <member kind="function">
      <name>setCameraInfo</name>
      <anchor>e59c9f2f54b51627e3e973f61112620e</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>de6fda8dfab62ed95aae397fd01086ce</anchor>
      <arglist>(SoHandleEventAction *ha)</arglist>
    </member>
    <member kind="function">
      <name>transferMotion</name>
      <anchor>8011293c936aa66fbb79d48b05ae1cdf</anchor>
      <arglist>(SoDragger *child)</arglist>
    </member>
    <member kind="function">
      <name>setIgnoreInBbox</name>
      <anchor>1fef53e79cdf180fcf3f2f05a7010b29</anchor>
      <arglist>(SbBool newval)</arglist>
    </member>
    <member kind="function">
      <name>isIgnoreInBbox</name>
      <anchor>e67d944d4b6b8406292f5d8ee50c49f5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>813770e15d6cee62883dbe4cbd456c92</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>setActiveChildDragger</name>
      <anchor>0af97dcab6595eceb8771d8113bcf7be</anchor>
      <arglist>(SoDragger *newchilddragger)</arglist>
    </member>
    <member kind="function">
      <name>getActiveChildDragger</name>
      <anchor>ac57e29eba1fd57e69dc38cea581a4d2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>6b21291ec4de984483c35e8e7fc64c84</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>childTransferMotionAndValueChangedCB</name>
      <anchor>e45c275f020dd239b121c55ff3e30adf</anchor>
      <arglist>(void *, SoDragger *)</arglist>
    </member>
    <member kind="function">
      <name>childValueChangedCB</name>
      <anchor>8249524f6e707c5fad6a9b20ec7ca5c3</anchor>
      <arglist>(void *, SoDragger *)</arglist>
    </member>
    <member kind="function">
      <name>childStartCB</name>
      <anchor>7cc2bdaa503ddca69f5855a55c384a33</anchor>
      <arglist>(void *, SoDragger *)</arglist>
    </member>
    <member kind="function">
      <name>childMotionCB</name>
      <anchor>fcb708c2d39b171cd537b71442edac12</anchor>
      <arglist>(void *, SoDragger *)</arglist>
    </member>
    <member kind="function">
      <name>childFinishCB</name>
      <anchor>75245b3558fe16f8e0d865fd6d0670ab</anchor>
      <arglist>(void *, SoDragger *)</arglist>
    </member>
    <member kind="function">
      <name>childOtherEventCB</name>
      <anchor>d9c9cf2b00f156fa3eef05de8bd8a597</anchor>
      <arglist>(void *, SoDragger *)</arglist>
    </member>
    <member kind="function">
      <name>updateDraggerCache</name>
      <anchor>0cae8dd9ec1f83c5503782d2a6498f18</anchor>
      <arglist>(const SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>isActive</name>
      <anchor>3104dec7dff57c310ea42207fd50a76c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDragPointDragger</name>
    <base>SoDragger</base>
    <filename>classSoDragPointDragger.html</filename>
    <member kind="function">
      <name>noRotSep</name>
      <anchor>ed135ea6ff560dcb78990751e27ca0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeFeedbackSep</name>
      <anchor>f54b40c9bab457d595f8776191df6450</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeFeedbackSwitch</name>
      <anchor>0178eb7bce9d2de530a59bc7ae42f60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeFeedbackTranslation</name>
      <anchor>efc54ae6074faf5b1268559cebc4e7a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotX</name>
      <anchor>09bacb7136d43e17de067588a3a8f982</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotXSep</name>
      <anchor>7f80a820abe74f49226a849def75ce26</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotY</name>
      <anchor>a98f6b6c90333904903cff80248eb156</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotYSep</name>
      <anchor>2eefe07296891703d50779e2084c07a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotZ</name>
      <anchor>bf0434deb935495ae8c0cd7a764e3d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotZSep</name>
      <anchor>028abe29ab4786f26093273718b99724</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xFeedback</name>
      <anchor>9e281ec380835912a8be6549e04e55b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xFeedbackSep</name>
      <anchor>4bf698f7579f3727f5c9be6d30d8057e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xFeedbackSwitch</name>
      <anchor>6a9b67740a32546cd714e700c4c0a607</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xFeedbackTranslation</name>
      <anchor>2964f95f8db9969053f8295abccdcd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xTranslator</name>
      <anchor>91e19c3b7c45713e5138a0b9714e8b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xTranslatorSwitch</name>
      <anchor>8be0173e10d2271571ce1a9a657b28aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xyFeedback</name>
      <anchor>327dd9570859ed623e61f5453dc6fc48</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xyTranslator</name>
      <anchor>7baa0a162c84fd131b75e0a4b55709f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xyTranslatorSwitch</name>
      <anchor>50d8dd3a4ca79ef9cd6ab1c265c8bb3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xzFeedback</name>
      <anchor>926efef1cc094a33f445d4d06c14a8bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xzTranslator</name>
      <anchor>05efa848d355b3f99142d918ab594d57</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xzTranslatorSwitch</name>
      <anchor>de192303e21c002532837dd8bde0f522</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yFeedback</name>
      <anchor>e4c0b42da064ef8d5a806dad575bd612</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yFeedbackSep</name>
      <anchor>0ec1675441accd7d9ebc175bbaf3c1d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yFeedbackSwitch</name>
      <anchor>250d4b63fa8451ceb984aecd0ded5142</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yFeedbackTranslation</name>
      <anchor>10f575acc5b983021fc41cfe5b6ad5de</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yTranslator</name>
      <anchor>5df46bcba00ae8c3a817a310cd54f606</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yTranslatorSwitch</name>
      <anchor>225bfe1909948e8d23757e915cd2196c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yzFeedback</name>
      <anchor>20c4e9e473285daf2e231f088c2f71df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yzTranslator</name>
      <anchor>29efa412d8b825afdec4d18019414271</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yzTranslatorSwitch</name>
      <anchor>ecd49361341a89bb6d63b2de4bdf573f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>zFeedback</name>
      <anchor>e57bdd14bd2ead14d2973e3409a379cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>zFeedbackSep</name>
      <anchor>449e5ac97c1dcdf3119145e6d6b72a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>zFeedbackSwitch</name>
      <anchor>68d2d14c205dddcaed921a2dd840b087</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>zFeedbackTranslation</name>
      <anchor>40bce8dcdcc2ef882f44447f50ff3685</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>zTranslator</name>
      <anchor>148d411c1c5f28e38d78ee2cb81767b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>zTranslatorSwitch</name>
      <anchor>7513d1d273fd748126b0eef1b37cfcd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoDragPointDragger</name>
      <anchor>614ef13f730250bd0a101e48280ee0b0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoDragPointDragger</name>
      <anchor>ce36777b154d7b230c938b160bb9a39e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>a9cd579fb34c7a42f7d92e3f723f334b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>d48699d49d87a9c2af4a628edf4c7dff</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>c44fb24d898d816ccc5639210e50ea7c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>d87fece6d711e9c87089e89c63c4f170</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>e7b0f71ef526bf3f362f81d8d8174301</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>d9893112d30667e382a1882208fbf48e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>cda9c98b2b90936a18e4df94c666653b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>9b18cd230b443a8948229357dd85401c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setJumpLimit</name>
      <anchor>20bfe7675c8d171faef2314280d50390</anchor>
      <arglist>(const float limit)</arglist>
    </member>
    <member kind="function">
      <name>getJumpLimit</name>
      <anchor>d0f481c6b624e1f4b6763af71ef7c80f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>showNextDraggerSet</name>
      <anchor>311750e9c9319c4f75a88e832c29e0b9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>ff37e4feafefb31fd199a2559d881ca4</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>1ce5f30ee68208e8a54cbd696f883434</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>910c09efa1ba925d6c525d9eaba2b4da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>c585b8bb7f418a22b003d84d23da9b43</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>025473a5d004b7db89d34b529254c0e6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>startCB</name>
      <anchor>63b2f0f72f0943fe6286a07ed1d9014d</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>motionCB</name>
      <anchor>4870731737dff9a505862e6c979c1476</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>finishCB</name>
      <anchor>0d4c1060f70b705d781b66b24d91dddb</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>metaKeyChangeCB</name>
      <anchor>659e69d69a1d01fc8fae8705aa81526b</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>24902a17cf0151685e23487bf8774374</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>ab35e7c8169e5995b10180e6cafe42e6</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>b812f1eec4afd17725cfaab4b72646ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fieldSensor</name>
      <anchor>00ded3cc8beaa4d2d66c46009c6f6343</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoDrawStyle</name>
    <base>SoNode</base>
    <filename>classSoDrawStyle.html</filename>
    <member kind="function">
      <name>Style</name>
      <anchor>e0b3acb00d63b3a3969ea9f6e6b94e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ILLED</name>
      <anchor>e0b3acb00d63b3a3969ea9f6e6b94e7e3b75de00d046312eec662cd8d86a5345</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>INES</name>
      <anchor>e0b3acb00d63b3a3969ea9f6e6b94e7e71df3ec99cbd96a770640eb121140c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OINTS</name>
      <anchor>e0b3acb00d63b3a3969ea9f6e6b94e7e7c43e20a890459c4c48a056ada0d5680</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NVISIBLE</name>
      <anchor>e0b3acb00d63b3a3969ea9f6e6b94e7ecd3cea4f5a09ecd901c8526f0b06d9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoDrawStyle</name>
      <anchor>838a897444b3a5ab60baa085c65d69ee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoDrawStyle</name>
      <anchor>6d866943ff51c4fe2f175ab98dc6d3e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>05298c5d3ea35e22a80b1f2526563c7f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>283bf795fb144ccf1fa347114f7f0f14</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>e9202469f924a74d717e789457c48f3e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f92ee8324c40578c86d28151b050c1fb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>86d5f1437066930e548f3f31addba127</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>3465e14668a02cd28f2f53dd7940b0c7</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>0a6b8b0f1dff7456c8e9c382201cc5d7</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>d2d5893cc6803e77158978638580ff1a</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>style</name>
      <anchor>d2f93894213b15f03e99240cac5fbf3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>pointSize</name>
      <anchor>b4389132d46293dc9a76cce7d02a0097</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lineWidth</name>
      <anchor>afe95970d6bcfc4d795cfcafa05be20e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>linePattern</name>
      <anchor>24dc0b5c2d88c3f1d22c2415a9689e65</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoElapsedTime</name>
    <base>SoEngine</base>
    <filename>classSoElapsedTime.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>f69a112f07895eebec738fd8d02638b5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoElapsedTime</name>
      <anchor>7d56ecc6fb47e9d83193c2ccd317b97e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoElapsedTime</name>
      <anchor>f1a51ef4c12ebe28c96e000e8b705e93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>73bb21dc89a1b53926f47bd7d6313a0f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f7780a7b4ce92e7683cdfb8c955d7897</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>aa14525e226f983445a5736714ceae38</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>53324cc4d4c1b23b74a44c4ddbfa6aac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>0f33609c0e15636b60b15999634b31a6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>56f8f2e3d4fb3e2e680fe057d40d3796</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>c91982884fda94d753a4dbd39e78c91c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>writeInstance</name>
      <anchor>d579e939908a68c6ebf8ad1b49732b01</anchor>
      <arglist>(SoOutput *out)</arglist>
    </member>
    <member kind="function">
      <name>timeIn</name>
      <anchor>8c13ce60fafcd81cc846e07607df55fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>speed</name>
      <anchor>2b084cd200ab605d05061f3fde71fcc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>on</name>
      <anchor>bfe57f819bf6b35fe6f74e823fa4dd3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>pause</name>
      <anchor>c674803b041e3663819dd11549722a5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>reset</name>
      <anchor>1fc07594d69656d6e89bfad30cde4803</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>timeOut</name>
      <anchor>3177578d2389840b654c28850ef540ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoElement</name>
    <filename>classSoElement.html</filename>
    <member kind="function">
      <name>SoState</name>
      <anchor>088ada748118a1856c312842d245c05d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>~SoElement</name>
      <anchor>9ce2a1034d3bb27910ce9a3eea6e64e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>SoElement</name>
      <anchor>34312a1075fc6b90b3e5ccf5875c8c79</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>53244db0aff108029f890d602b904890</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>2c70e4edee66676d8f682b7a4afda037</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>d2a2e4a49f1cccadc601e75a51048391</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>8a7fb999dff6f39ea1280eea97a8933a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getStackIndex</name>
      <anchor>e2eb4b8dcfbc520faef17c4820f9c4c9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>620552c04e13e74ac19bfdb3cebca818</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>push</name>
      <anchor>69fc44b31adb066ba40bbc555298b107</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>pop</name>
      <anchor>47fb7cba01227fed02b5d48d7797dddb</anchor>
      <arglist>(SoState *state, const SoElement *prevTopElement)</arglist>
    </member>
    <member kind="function">
      <name>matches</name>
      <anchor>50b30f50781837a7aedc5cdbd25c5ecb</anchor>
      <arglist>(const SoElement *element) const =0</arglist>
    </member>
    <member kind="function">
      <name>copyMatchInfo</name>
      <anchor>4a6e2a38cdbbdd1dccbb3e9928e68d55</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function">
      <name>initElements</name>
      <anchor>f00f2621eec54163e7d1eb5ae7e81ad5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNumStackIndices</name>
      <anchor>ff64aac9bd872ce52ac5dfbfa36c36dc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getIdFromStackIndex</name>
      <anchor>5ac8400720c4ab228dec79bf301d7647</anchor>
      <arglist>(const int stackIndex)</arglist>
    </member>
    <member kind="function">
      <name>setDepth</name>
      <anchor>8508119bc6d937ab882f45f86745d2e1</anchor>
      <arglist>(const int depth)</arglist>
    </member>
    <member kind="function">
      <name>getDepth</name>
      <anchor>3c98d36d1a92f70d4957395c3e5f3313</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>e9d85b24213e349b96e4bb78233a0ff6</anchor>
      <arglist>(FILE *file=stdout) const </arglist>
    </member>
    <member kind="function">
      <name>getElement</name>
      <anchor>30c40ecaa79d6b140278fe906273e714</anchor>
      <arglist>(SoState *const state, const int stackIndex)</arglist>
    </member>
    <member kind="function">
      <name>getConstElement</name>
      <anchor>b8cb20060c9b527c8b2e343b1cf4032a</anchor>
      <arglist>(SoState *const state, const int stackIndex)</arglist>
    </member>
    <member kind="function">
      <name>capture</name>
      <anchor>ce260f18f598e00d95c98c96925950f8</anchor>
      <arglist>(SoState *const state) const </arglist>
    </member>
    <member kind="function">
      <name>captureThis</name>
      <anchor>4a920fb9569636f889f530f3f6b4b232</anchor>
      <arglist>(SoState *state) const </arglist>
    </member>
    <member kind="function">
      <name>setTypeId</name>
      <anchor>48d6dbea777d2eee021a788cf896ecaa</anchor>
      <arglist>(const SoType typeId)</arglist>
    </member>
    <member kind="function">
      <name>setStackIndex</name>
      <anchor>84b9e1b74e61a4c8383650a33dc7a9c8</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>createStackIndex</name>
      <anchor>6e4a8ae82aae7ac4d2516929a2e62d1d</anchor>
      <arglist>(const SoType id)</arglist>
    </member>
    <member kind="function">
      <name>getNextInStack</name>
      <anchor>e738e26ff31219dc9abe8a72e93e110a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNextFree</name>
      <anchor>4ff965194a4c7905b695022724698ae4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>classStackIndex</name>
      <anchor>3ab188deb13cb1a8c1b40ee365fce944</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>typeId</name>
      <anchor>3acf0e425bc7ef0a812df905a39fb269</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>stackIndex</name>
      <anchor>3babbcafa83800192cee2acb1a8edd6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>stackToType</name>
      <anchor>8e7258ccd9bda58158a370fc16455bbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>depth</name>
      <anchor>60e3b7f1344de81f7d6a198e7655235f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoEnabledElementsList</name>
    <filename>classSoEnabledElementsList.html</filename>
    <member kind="function">
      <name>SoEnabledElementsList</name>
      <anchor>1332d7f7efc996c8be475c9380fb9254</anchor>
      <arglist>(SoEnabledElementsList *const parentlist)</arglist>
    </member>
    <member kind="function">
      <name>~SoEnabledElementsList</name>
      <anchor>76c34847665e5b4315e040dce0dc148e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getElements</name>
      <anchor>2285473c8e2ca4a97091dccec2b3c977</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>enable</name>
      <anchor>205b2a75989c0e965a6c275e8a0ca11d</anchor>
      <arglist>(const SoType elementtype, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>merge</name>
      <anchor>e5007263c0142dbe82aa6f769f82e996</anchor>
      <arglist>(const SoEnabledElementsList &amp;eel)</arglist>
    </member>
    <member kind="function">
      <name>getCounter</name>
      <anchor>323601b6985adecbbd94c3e2842b2de7</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoEngine</name>
    <base>SoFieldContainer</base>
    <filename>classSoEngine.html</filename>
    <member kind="function">
      <name>SoEngineOutput</name>
      <anchor>b13611fb9286f4e4b6ac710a9cb7a52f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoEngine</name>
      <anchor>1ba077f0116dceeef172a5c3984887cd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoEngine</name>
      <anchor>3b9663bfc5e5c6d6d65da52dd16052d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0fe0926ae7835390c745991f24e2c705</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClasses</name>
      <anchor>ef6508694331d19b7dd81bb7e7b301a4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>22d7116a88f1f4cf180b16b6b38bf96a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>evaluateWrapper</name>
      <anchor>2af42fdbb183c7cf0f531e3cf268403f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputs</name>
      <anchor>226168cb400109f7e5c36a003252534c</anchor>
      <arglist>(SoEngineOutputList &amp;l) const </arglist>
    </member>
    <member kind="function">
      <name>getOutput</name>
      <anchor>69d8d8a034385e261644082fb89a9675</anchor>
      <arglist>(const SbName &amp;outputname) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputName</name>
      <anchor>f2f71d234e0f79bd5618a9ed3ebaae9a</anchor>
      <arglist>(const SoEngineOutput *output, SbName &amp;outputname) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>cd5fffe38b63bba5cab302f6fae7dca5</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function">
      <name>getByName</name>
      <anchor>f08d59d0da056f58fd5cfe67c2c3391f</anchor>
      <arglist>(const SbName &amp;name)</arglist>
    </member>
    <member kind="function">
      <name>getByName</name>
      <anchor>b4c77b10bd95e1e9fe5a82ba968f534d</anchor>
      <arglist>(const SbName &amp;name, SoEngineList &amp;el)</arglist>
    </member>
    <member kind="function">
      <name>isNotifying</name>
      <anchor>38fc62b2351f0a432b8fd8fdda36d69a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>109be36b28a7523d5b3942bb6c0f4bf9</anchor>
      <arglist>(SoNotList *nl)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>83703b45c249f08aacbbab15f92b63b3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyThroughConnection</name>
      <anchor>5ffb2c0e2971ecc4496875b723a8ba5d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>shouldCopy</name>
      <anchor>4d2b36cd1fed10393c6efe5fe3d9e5b2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>writeInstance</name>
      <anchor>1bbe7bf1a626ca76a3f7b09c6a0e4df8</anchor>
      <arglist>(SoOutput *out)</arglist>
    </member>
    <member kind="function">
      <name>evaluate</name>
      <anchor>c7aa2cbecf4a33de22abc1f776f07e53</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>946da90b09c1a79aefc9b2ca134fb3f3</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>inputChanged</name>
      <anchor>f261c3acd47d3cfab447b1a0b19b583d</anchor>
      <arglist>(SoField *which)</arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>05496135cd39c80a3a1bd214f37faa05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>ebc8dc3627c56137fd9d6d27fd6a7055</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>writeOutputTypes</name>
      <anchor>5e9b96d9a944eb8f819dbe3331274c86</anchor>
      <arglist>(SoOutput *out)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoEngineList</name>
    <base>SoBaseList</base>
    <filename>classSoEngineList.html</filename>
    <member kind="function">
      <name>SoEngineList</name>
      <anchor>85acece813639febe4fbeaef3f2ff601</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoEngineList</name>
      <anchor>f4123bcb468cf957b6fc2c309894369c</anchor>
      <arglist>(const int size)</arglist>
    </member>
    <member kind="function">
      <name>SoEngineList</name>
      <anchor>142ebdcc30bcd317c97c69e73cbfc4a5</anchor>
      <arglist>(const SoEngineList &amp;el)</arglist>
    </member>
    <member kind="function">
      <name>~SoEngineList</name>
      <anchor>c1cc2be648abe9260b97d0940be97948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>aabcef9d90f4ea0a7a232b6125bb67dd</anchor>
      <arglist>(SoEngine *const ptr)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>4dc280c9fa8ab13c24affcd1d13555dc</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>6d61001ee15a76f2cc617255495fd7ef</anchor>
      <arglist>(const SoEngineList &amp;el)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoEngineOutput</name>
    <filename>classSoEngineOutput.html</filename>
    <member kind="function">
      <name>SoEngineOutput</name>
      <anchor>e41c850127b685421bbb9a03e2f5eea6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoEngineOutput</name>
      <anchor>b526a773f1595713925b2f4e5aa87c1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getConnectionType</name>
      <anchor>478a7d784f5cbf05057c3c66b07cc529</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getForwardConnections</name>
      <anchor>b9aa6deb69abbf60d346ec627546d47e</anchor>
      <arglist>(SoFieldList &amp;fl) const </arglist>
    </member>
    <member kind="function">
      <name>enable</name>
      <anchor>c27253922a0b673a2b01342fce84a369</anchor>
      <arglist>(const SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isEnabled</name>
      <anchor>e8e0f60ae8d2c1bbc1a0b832b7d69222</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getContainer</name>
      <anchor>e5c4c511e2be1e485164e3694d6d2692</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNodeContainer</name>
      <anchor>318b27209ec872efc924b964db161276</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isNodeEngineOutput</name>
      <anchor>41b8e5c98403de260cfdff59887c329d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setContainer</name>
      <anchor>0d0ec6018e20dc2935886b5cc540fdb8</anchor>
      <arglist>(SoEngine *engine)</arglist>
    </member>
    <member kind="function">
      <name>setNodeContainer</name>
      <anchor>526375b051e5187b7a7662e6aea0348b</anchor>
      <arglist>(SoNodeEngine *nodeengine)</arglist>
    </member>
    <member kind="function">
      <name>addConnection</name>
      <anchor>7c787d1a762adc2fc51303628560daf9</anchor>
      <arglist>(SoField *f)</arglist>
    </member>
    <member kind="function">
      <name>removeConnection</name>
      <anchor>cca4980207d0e822086974358e4d5232</anchor>
      <arglist>(SoField *f)</arglist>
    </member>
    <member kind="function">
      <name>getNumConnections</name>
      <anchor>02038502b6f830def2358b1ea3ccfc23</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>c04be05688954a0eaf24fa8a87d92816</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <name>prepareToWrite</name>
      <anchor>f6766bc74fb6ad2f2f6d5e636fb6f1e8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>doneWriting</name>
      <anchor>55d4925f66d8e694be6e2db7ad153263</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>touchSlaves</name>
      <anchor>8967836b98bbb979590179557601cf39</anchor>
      <arglist>(SoNotList *nl, SbBool donotify)</arglist>
    </member>
    <member kind="function">
      <name>getFieldContainer</name>
      <anchor>7e53a42f36c3c52f906524cd6e477fb2</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoEngineOutputList</name>
    <base>SbPList</base>
    <filename>classSoEngineOutputList.html</filename>
    <member kind="function">
      <name>append</name>
      <anchor>805025fe34a88a942fa91ab614323619</anchor>
      <arglist>(SoEngineOutput *output)</arglist>
    </member>
    <member kind="function">
      <name>insert</name>
      <anchor>ef76261e0e5d78815536ebc007c0bc6d</anchor>
      <arglist>(SoEngineOutput *output, const int insertbefore)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>ef1a8b105a0b2961dacc543f6557f58c</anchor>
      <arglist>(const int idx, SoEngineOutput *item)</arglist>
    </member>
    <member kind="function">
      <name>SoEngineOutputList</name>
      <anchor>26c5ffcdbb9fca8ddcaf43648ab20a89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoEngineOutputList</name>
      <anchor>58bbbf6e4412438e61c39b58e3e53c9c</anchor>
      <arglist>(const int sizehint)</arglist>
    </member>
    <member kind="function">
      <name>SoEngineOutputList</name>
      <anchor>9d03168fbd41485336028baaf1f90854</anchor>
      <arglist>(const SoEngineOutputList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>002c9944a8e8a413e0f39573cce19a91</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoEnvironment</name>
    <base>SoNode</base>
    <filename>classSoEnvironment.html</filename>
    <member kind="function">
      <name>FogType</name>
      <anchor>557458fc0c84af69e6dd0b9dcd41e1b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ONE</name>
      <anchor>557458fc0c84af69e6dd0b9dcd41e1b0fc962c8a5ce783871cfc62c0654a9212</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>AZE</name>
      <anchor>557458fc0c84af69e6dd0b9dcd41e1b0db1f5fa9e19c04410d02506104f9cd91</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OG</name>
      <anchor>557458fc0c84af69e6dd0b9dcd41e1b033b1e86c0f7633c004d87e3dcb92715b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>MOKE</name>
      <anchor>557458fc0c84af69e6dd0b9dcd41e1b027686b80dfcfd07e907a7fd720f68703</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoEnvironment</name>
      <anchor>42dc267d4125a910d2dff0e2978e154e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoEnvironment</name>
      <anchor>a99aa92119dce4a5f621e8e93e77c5c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>051223f5ea7ebca633df27ac1ecb6e1d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>0c116b25423fd7007c63fcc971ec5e0c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>a537538bf01ed2de2754c748431f002c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>08548407e9413a03bcc27b4067afe1f9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>264aaf1afab6a3be3a20efa6ab3a45d4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>852eb3ca245d012cb9f01bd7fe3157ba</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>382be5a7ead4b9d7ce220fde2689632d</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>ambientIntensity</name>
      <anchor>9d3c0f685a622993b2da13edaf8778ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ambientColor</name>
      <anchor>208a6034a574424c7921b4e80baf1f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>attenuation</name>
      <anchor>c4bb3a61fc8c62aed59b4a67c4c7a324</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fogType</name>
      <anchor>abaf54a37f2be86387230351774b6bc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fogColor</name>
      <anchor>af7d03f3749f248070f68b07f0786e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fogVisibility</name>
      <anchor>34a6347b6c2a16bcc02eb611c0cce331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoError</name>
    <filename>classSoError.html</filename>
    <member kind="function">
      <name>~SoError</name>
      <anchor>edcf39df541330db83bb8264c81b7033</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>setHandlerCallback</name>
      <anchor>3221f7f406b8788c5f3dce1475da00b0</anchor>
      <arglist>(SoErrorCB *const func, void *const data)</arglist>
    </member>
    <member kind="function">
      <name>getHandlerCallback</name>
      <anchor>2caf61a4c7e75c86e215ac99b28f0f06</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getHandlerData</name>
      <anchor>cae62657f4158d0d9edd3dd88bd9968c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getDebugString</name>
      <anchor>83dc45e92db93c3544514627528c32a7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e2c90745f79f7bbbc4f5038aad369381</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>41bcf4c50ee9fb96d86e1fdb64e8bfdd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isOfType</name>
      <anchor>0aa97b9643b096a937e9089a0b4ba407</anchor>
      <arglist>(const SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>post</name>
      <anchor>7648888fdc2d85156787a76d7d064c66</anchor>
      <arglist>(const char *const format,...)</arglist>
    </member>
    <member kind="function">
      <name>getString</name>
      <anchor>0fe91f7aa9a113f40d7b8e9bd9831895</anchor>
      <arglist>(const SoNode *const node)</arglist>
    </member>
    <member kind="function">
      <name>getString</name>
      <anchor>daeb1d41a48af32140a4f3d94c5f4602</anchor>
      <arglist>(const SoPath *const path)</arglist>
    </member>
    <member kind="function">
      <name>getString</name>
      <anchor>68f1a499bb28288b1a5f97b9a4ce6131</anchor>
      <arglist>(const SoEngine *const engine)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>2503816e8f12af785974fb7214b3efc6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClasses</name>
      <anchor>c71997bf86112c4437f2f90213434dba</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>defaultHandlerCB</name>
      <anchor>48f1514286444569c8ba7c4ae59b56ce</anchor>
      <arglist>(const SoError *error, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>getHandler</name>
      <anchor>c9a724e724781d7d77b4b6a4f7f8420d</anchor>
      <arglist>(void *&amp;data) const </arglist>
    </member>
    <member kind="function">
      <name>setDebugString</name>
      <anchor>2538d100bcb6df743a8fc9f51602dcea</anchor>
      <arglist>(const char *const str)</arglist>
    </member>
    <member kind="function">
      <name>appendToDebugString</name>
      <anchor>ef396299b8419b1b09ba4bcc838289b6</anchor>
      <arglist>(const char *const str)</arglist>
    </member>
    <member kind="function">
      <name>handleError</name>
      <anchor>899fe836763793c96a74e18d6d4f3334</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoEvent</name>
    <filename>classSoEvent.html</filename>
    <member kind="function">
      <name>SoEvent</name>
      <anchor>e9ac18892cee75c2a163dbfeadcd7395</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoEvent</name>
      <anchor>b1e0f6c4d7385d07a72550723025c25e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>isOfType</name>
      <anchor>90af490dc5f9658009893611447dfb9f</anchor>
      <arglist>(SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>745a76593ca05c87c625b6a4c9aef5ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>04d5f88b6986b22f8a8ba58183f62f58</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setTime</name>
      <anchor>995b16f7948b24bcfac15ca1d50cd2a3</anchor>
      <arglist>(const SbTime t)</arglist>
    </member>
    <member kind="function">
      <name>getTime</name>
      <anchor>1580fa84798542f8c43884f1affe5984</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setPosition</name>
      <anchor>849416b6d6bf7f844f6ac36b2eeb9a30</anchor>
      <arglist>(const SbVec2s &amp;p)</arglist>
    </member>
    <member kind="function">
      <name>getPosition</name>
      <anchor>c70e545b18850b5053cccd2814ad31a1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPosition</name>
      <anchor>9a90056b0e35ee3b3841c793098d1348</anchor>
      <arglist>(const SbViewportRegion &amp;vpRgn) const </arglist>
    </member>
    <member kind="function">
      <name>getNormalizedPosition</name>
      <anchor>c4e0475125a5c27625717020de187079</anchor>
      <arglist>(const SbViewportRegion &amp;vpRgn) const </arglist>
    </member>
    <member kind="function">
      <name>setShiftDown</name>
      <anchor>a17052cc953fa3693e14d597d36f3793</anchor>
      <arglist>(SbBool isDown)</arglist>
    </member>
    <member kind="function">
      <name>wasShiftDown</name>
      <anchor>02dd3f8f59a7f32b2052918c4138647c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setCtrlDown</name>
      <anchor>737a56e86521b7d535ee9ed536d45638</anchor>
      <arglist>(SbBool isDown)</arglist>
    </member>
    <member kind="function">
      <name>wasCtrlDown</name>
      <anchor>3c95b2d28519cc1647231ba177c3d923</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setAltDown</name>
      <anchor>64089d0de8c4dd7ba544af64fb24d53d</anchor>
      <arglist>(SbBool isDown)</arglist>
    </member>
    <member kind="function">
      <name>wasAltDown</name>
      <anchor>1583e93498f88c6fc92969ccc5b69d87</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>af846d32f74e0843edf78114ec243cee</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoEventCallback</name>
    <base>SoNode</base>
    <filename>classSoEventCallback.html</filename>
    <member kind="function">
      <name>SoEventCallback</name>
      <anchor>ff9e4c6019a6a731f12bd99b5c5a53be</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoEventCallback</name>
      <anchor>8e612d2245a64d591df8f07c08989076</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5328df45b56670d9a97a46bead130c75</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>b56c686d961f0bc3ec4e27aa3fb0e43b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>1632cf5e1a58aee4a7971f4b94909bc7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>94f4295370c74ec2af988622980d3d6b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>3794f1203524fe79f901fc2ca5634553</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setPath</name>
      <anchor>ffd58006af40ddabafb6dbe8d165c017</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>getPath</name>
      <anchor>154b3b795cc87cb6312c71b7960a5b18</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addEventCallback</name>
      <anchor>45302c5c2492bf1654fd89a707eac766</anchor>
      <arglist>(SoType eventtype, SoEventCallbackCB *f, void *userdata=NULL)</arglist>
    </member>
    <member kind="function">
      <name>removeEventCallback</name>
      <anchor>0b9959481b451b5bd5f3739409d1a4b8</anchor>
      <arglist>(SoType eventtype, SoEventCallbackCB *f, void *userdata=NULL)</arglist>
    </member>
    <member kind="function">
      <name>getAction</name>
      <anchor>a66c69bf0f9265ef718ba7423c9fee02</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getEvent</name>
      <anchor>84b49825509aec942f6925740d0dab7b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPickedPoint</name>
      <anchor>177ac9c6d5af00901486b2edfabc77fd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setHandled</name>
      <anchor>3667ebe00e7f5753d6fe47e385a9f2f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isHandled</name>
      <anchor>3c27ed7789aca98626e8805c62292cdc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>grabEvents</name>
      <anchor>7166accbf57582f7b2c097bc655eb3db</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>releaseEvents</name>
      <anchor>63f003e6923d8958ee9238fe809cd661</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>f39ddff1e8540517221d3dca0d72b407</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoExtSelection</name>
    <base>SoSelection</base>
    <filename>classSoExtSelection.html</filename>
    <member kind="function">
      <name>SoExtSelectionP</name>
      <anchor>53b324881c4631c25cf0ef002481277a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LassoType</name>
      <anchor>f25d467dbc3d587bec603c89eace192f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OLASSO</name>
      <anchor>f25d467dbc3d587bec603c89eace192f07b5e724e73245a6cdbf2385a4a9ba33</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ASSO</name>
      <anchor>f25d467dbc3d587bec603c89eace192f33cfba6bacddaace46aa5ff853b1bd84</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ECTANGLE</name>
      <anchor>f25d467dbc3d587bec603c89eace192fc5af0a22cb6a0d73f40f196bae6c8e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LassoPolicy</name>
      <anchor>13f9500494e42d0edf20ad79c755b678</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ULL_BBOX</name>
      <anchor>13f9500494e42d0edf20ad79c755b678faf26176f5d277cd13f354477a654753</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ART_BBOX</name>
      <anchor>13f9500494e42d0edf20ad79c755b67874e7a4281a1e21de982e0871e5132786</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ULL</name>
      <anchor>13f9500494e42d0edf20ad79c755b67819531c7aca936365f13fb938ab3a27dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ART</name>
      <anchor>13f9500494e42d0edf20ad79c755b678fcd61eca81ee8badcb61f2a349b4c384</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LassoMode</name>
      <anchor>b3301b66803468221a9c6eb51e342210</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LL_SHAPES</name>
      <anchor>b3301b66803468221a9c6eb51e342210c22245aa446bb43bcfec1380c2fedad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ISIBLE_SHAPES</name>
      <anchor>b3301b66803468221a9c6eb51e342210be594e1a2d27e9a9c53f1a876ee94b91</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoExtSelection</name>
      <anchor>9c21cf9b3ae8433c0ac587075e045521</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoExtSelection</name>
      <anchor>34786b10d242f155cea1ea023b98781d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>918a2bd5e06ababa45ab8f742283bae0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>9aacfca17d4408a502d7947b2f52b223</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>80fa81608eeaecd6cd9f108d45aa2582</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>0c20ab2923154cba4c7463d705e3ec11</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>79f68d3b34323fd05d9b9187edb88de5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>useOverlay</name>
      <anchor>ff62ca7f8e52dd77d499191e8ef70bd3</anchor>
      <arglist>(SbBool overlay=1)</arglist>
    </member>
    <member kind="function">
      <name>isUsingOverlay</name>
      <anchor>0c7fc734f6188de83eb1ccd60f3e3714</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOverlaySceneGraph</name>
      <anchor>9ed079b3b6b237b62ddc11534da8190e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setOverlayLassoColorIndex</name>
      <anchor>312b1897793d9a7f78e4624d9a63e115</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>getOverlayLassoColorIndex</name>
      <anchor>e8bffceb5904283014fd2c0b1998662e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setLassoColor</name>
      <anchor>301800e1eb43e801b9806cdb5c9c05fd</anchor>
      <arglist>(const SbColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <name>getLassoColor</name>
      <anchor>9eb89344aee92f88f56e6cf94a37ae74</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setLassoWidth</name>
      <anchor>e9e91adbc4a9d89bde2c81984bfb7d86</anchor>
      <arglist>(const float width)</arglist>
    </member>
    <member kind="function">
      <name>getLassoWidth</name>
      <anchor>5ce7453c38c96b489061c5f08b0359df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setOverlayLassoPattern</name>
      <anchor>4483e7be8c5a13964c539f7c3b13c2c7</anchor>
      <arglist>(const unsigned short pattern)</arglist>
    </member>
    <member kind="function">
      <name>getOverlayLassoPattern</name>
      <anchor>87e7aff5c7a23ce3f36d96cd3b07ce2d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>animateOverlayLasso</name>
      <anchor>c362d9b55b986ff0694bce3dc3a972b0</anchor>
      <arglist>(const SbBool animate=1)</arglist>
    </member>
    <member kind="function">
      <name>isOverlayLassoAnimated</name>
      <anchor>7a237f706eecbc536709f8b56b667b41</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>f49966d4bda564b3eaefe64602306cba</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderBelowPath</name>
      <anchor>a73b735b7ba44b30dfdc28cce6231c11</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>setLassoFilterCallback</name>
      <anchor>072f81bffc613316d5898eaa25e121d5</anchor>
      <arglist>(SoLassoSelectionFilterCB *f, void *userdata=NULL, const SbBool callonlyifselectable=1)</arglist>
    </member>
    <member kind="function">
      <name>setTriangleFilterCallback</name>
      <anchor>a8150f3696bc79c38074e00ee62d4b5d</anchor>
      <arglist>(SoExtSelectionTriangleCB *func, void *userdata=NULL)</arglist>
    </member>
    <member kind="function">
      <name>setLineSegmentFilterCallback</name>
      <anchor>f0a8c05c68234a34c39e009f4b21ae84</anchor>
      <arglist>(SoExtSelectionLineSegmentCB *func, void *userdata=NULL)</arglist>
    </member>
    <member kind="function">
      <name>setPointFilterCallback</name>
      <anchor>72b5166c178be3de8069d922b95215f8</anchor>
      <arglist>(SoExtSelectionPointCB *func, void *userdata=NULL)</arglist>
    </member>
    <member kind="function">
      <name>wasShiftDown</name>
      <anchor>9f74280cf25d52fb55b334f91377f215</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>lassoType</name>
      <anchor>e971b69bf710bc866c29432050f96650</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lassoPolicy</name>
      <anchor>05bb125c7b408ef062e9b3a5500025ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lassoMode</name>
      <anchor>3f1be9f9f9e2500f16ba9526682af7a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoFaceDetail</name>
    <base>SoDetail</base>
    <filename>classSoFaceDetail.html</filename>
    <member kind="function">
      <name>SoFaceDetail</name>
      <anchor>f9dbb1c8d92c53a2470e950fa46e1636</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoFaceDetail</name>
      <anchor>71aaca2902db3572667e766f7c51c7cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>32c6ece584ea5f3045dacfc1f9c72470</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>9a8097b33b6b3d3a872a184e58ca61ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>96376beede50f6818eb9d72cf97bf7cb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>1fb2be7d6f1e112b14f2fea1d611283d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNumPoints</name>
      <anchor>d031ff2cf6727fd10c6be245a02f1d42</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPoint</name>
      <anchor>b46958ceb0dcd2a32a09e92582c13be9</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>getPoints</name>
      <anchor>f33e86aebc545e5b194651798854f4c3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFaceIndex</name>
      <anchor>c4ca977667e8ab59eecb75234bc0cf77</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPartIndex</name>
      <anchor>016eb0fca6726aff9ea32c5728e09467</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setNumPoints</name>
      <anchor>507a639a064b65fa7c7d311e9b2cf757</anchor>
      <arglist>(const int num)</arglist>
    </member>
    <member kind="function">
      <name>setPoint</name>
      <anchor>1641d18aa50f93acd7f425806d736880</anchor>
      <arglist>(const int idx, const SoPointDetail *const detail)</arglist>
    </member>
    <member kind="function">
      <name>setFaceIndex</name>
      <anchor>0ca89ad73fed20d59c1db818c0792aea</anchor>
      <arglist>(const int idx)</arglist>
    </member>
    <member kind="function">
      <name>setPartIndex</name>
      <anchor>28dbbf1347708a7164bdaa00f29843a3</anchor>
      <arglist>(const int idx)</arglist>
    </member>
    <member kind="function">
      <name>incFaceIndex</name>
      <anchor>fea2d46ddab5e6f7b48b78c99a627889</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>incPartIndex</name>
      <anchor>404571f1f6e778ec73c2650add733e1b</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoFaceSet</name>
    <base>SoNonIndexedShape</base>
    <filename>classSoFaceSet.html</filename>
    <member kind="function">
      <name>SoFaceSet</name>
      <anchor>d80aca08f332d4636db707ad253c9b1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoFaceSet</name>
      <anchor>c26939745a2c5e71f8005b16c7bb7743</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>f829c0c8d41030de8eddfcae914c6646</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>8bfcab5d5b5babf3be6e5e69510fa4f6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>b69ec75fb4e7a149c0c8a7361519b6d4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>810d1b12287a5aeb043d4593da0c5b7a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f6a1300b1fdadf24a9fc7dc965b2a80e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>c419bd74482f20be79ba2384fddf6d73</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>ebcdf8cbc891c67af97518e09ea5978a</anchor>
      <arglist>(SoState *state, SoNormalBundle *nb)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>1af1ff68a1465d0a0863686dd869748a</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>bf5086ce78a4aa49c058a1a9bcfd4387</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>9eeec88842c9735ee9ce8a208a7b97f4</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>3bf1fb3ccea1761a48be05f6a573d9c7</anchor>
      <arglist>(SoState *, SoNormalCache *)</arglist>
    </member>
    <member kind="function">
      <name>numVertices</name>
      <anchor>c63bdf12c111765158f984aa36e323e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoField</name>
    <filename>classSoField.html</filename>
    <member kind="function">
      <name>~SoField</name>
      <anchor>5ad15124fa9c372632cdcff9aae9ce0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>SoField</name>
      <anchor>c98e5cd5d81b1a0b817d310bf85a35e6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>ae6bb64a7e35d85a2b01395da645120f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClasses</name>
      <anchor>d6112c598f125a25fd4db2959c0d9880</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setIgnored</name>
      <anchor>1bc88e54b4476a54db9e065672ad6359</anchor>
      <arglist>(SbBool ignore)</arglist>
    </member>
    <member kind="function">
      <name>isIgnored</name>
      <anchor>6467c80c0147a7cfd791a9836f86d802</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setDefault</name>
      <anchor>75c0ee159b54aa22a56b1629fe7bc63d</anchor>
      <arglist>(SbBool def)</arglist>
    </member>
    <member kind="function">
      <name>isDefault</name>
      <anchor>57dc4f40a314a16652501f407a3231c8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>34ac9c7e16370f08a911e8ef74c8f784</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>36849953c91f385ab581071d5335338e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isOfType</name>
      <anchor>95d7bbed8e03793b9537acde298dd6b0</anchor>
      <arglist>(const SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>enableConnection</name>
      <anchor>ab3795218549a2d22b723e9c7f2846eb</anchor>
      <arglist>(SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isConnectionEnabled</name>
      <anchor>fc064aeb0d1c810cf78e880ad7dcdc7f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>connectFrom</name>
      <anchor>4bb51478745e58c8b4712b35c42aa75a</anchor>
      <arglist>(SoEngineOutput *master, SbBool notnotify=0, SbBool append=0)</arglist>
    </member>
    <member kind="function">
      <name>appendConnection</name>
      <anchor>0ee9ad5225e32b7c135b38244920dfb9</anchor>
      <arglist>(SoEngineOutput *master, SbBool notnotify=0)</arglist>
    </member>
    <member kind="function">
      <name>disconnect</name>
      <anchor>1159b19752c3a62aebfe11719d83d700</anchor>
      <arglist>(SoEngineOutput *engineoutput)</arglist>
    </member>
    <member kind="function">
      <name>isConnectedFromEngine</name>
      <anchor>963c1858a17708efe4cdb452722d8217</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getConnectedEngine</name>
      <anchor>7cc56edca09d3a0d623e65f1e06d9752</anchor>
      <arglist>(SoEngineOutput *&amp;master) const </arglist>
    </member>
    <member kind="function">
      <name>connectFrom</name>
      <anchor>bfd7d859865d738ef61459e0615127cd</anchor>
      <arglist>(SoField *master, SbBool notnotify=0, SbBool append=0)</arglist>
    </member>
    <member kind="function">
      <name>appendConnection</name>
      <anchor>d8973889e322046d52e2d4a8ed3dbe05</anchor>
      <arglist>(SoField *master, SbBool notnotify=0)</arglist>
    </member>
    <member kind="function">
      <name>disconnect</name>
      <anchor>59cefe0b5aed4354d0ef652810178f78</anchor>
      <arglist>(SoField *field)</arglist>
    </member>
    <member kind="function">
      <name>isConnectedFromField</name>
      <anchor>ef6bfb61811d21785ec71756f33a7616</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getConnectedField</name>
      <anchor>49fccaae156e546072cf452c1d15b2ef</anchor>
      <arglist>(SoField *&amp;master) const </arglist>
    </member>
    <member kind="function">
      <name>getNumConnections</name>
      <anchor>ba0ad7ec9501fedeb988f7820a39320f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getForwardConnections</name>
      <anchor>ab414791d41441833160c4aa05383a31</anchor>
      <arglist>(SoFieldList &amp;slavelist) const </arglist>
    </member>
    <member kind="function">
      <name>getConnections</name>
      <anchor>29f7c81cdd02be41309cc803b6917a81</anchor>
      <arglist>(SoFieldList &amp;masterlist) const </arglist>
    </member>
    <member kind="function">
      <name>disconnect</name>
      <anchor>f8e8c5c46e9cd112f8dd4664fff77117</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isConnected</name>
      <anchor>0f6a0ca587d1592f50051c262082583b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setContainer</name>
      <anchor>9fbdf1e1b8fa0b4c610af0448041d0b1</anchor>
      <arglist>(SoFieldContainer *cont)</arglist>
    </member>
    <member kind="function">
      <name>getContainer</name>
      <anchor>46019fe43e4d41118544a02f19d23130</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>1ced83f62b6776e9e805aeb5427108e4</anchor>
      <arglist>(const char *valuestring)</arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>d30227a5c8485e5bdaa52b86a21f9591</anchor>
      <arglist>(SbString &amp;valuestring)</arglist>
    </member>
    <member kind="function">
      <name>shouldWrite</name>
      <anchor>08d5c770270931eb02d5eaff48c3f0cb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>touch</name>
      <anchor>64ebcf224b92166b743903c9bf8d748f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>startNotify</name>
      <anchor>2cc06510e3bbe043bbeded48ec721f48</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>917c364cae1a18863084cdf8ad6f8e7e</anchor>
      <arglist>(SoNotList *nlist)</arglist>
    </member>
    <member kind="function">
      <name>enableNotify</name>
      <anchor>4cf2036ff086d620ff77bef57ac36069</anchor>
      <arglist>(SbBool on)</arglist>
    </member>
    <member kind="function">
      <name>isNotifyEnabled</name>
      <anchor>9fcec72e47b48d75f037aff1a05e3d73</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>addAuditor</name>
      <anchor>f950e95a5e11aadb110f68e67d58ac42</anchor>
      <arglist>(void *f, SoNotRec::Type type)</arglist>
    </member>
    <member kind="function">
      <name>removeAuditor</name>
      <anchor>b990bb100c12bc1637d35318b94f2e47</anchor>
      <arglist>(void *f, SoNotRec::Type type)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>a674ee4e73605c2132994ebfd05780aa</anchor>
      <arglist>(const SoField &amp;f) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>24f569dd98e950e5b6f1bf109ce97670</anchor>
      <arglist>(const SoField &amp;f) const </arglist>
    </member>
    <member kind="function">
      <name>connectionStatusChanged</name>
      <anchor>586b64475f4068518f0da4615b37b4cf</anchor>
      <arglist>(int numconnections)</arglist>
    </member>
    <member kind="function">
      <name>isReadOnly</name>
      <anchor>fce6c509e52307cea1e8291250015139</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>0fcd0bf81f6a9ca80450148c7084b49b</anchor>
      <arglist>(const SoField &amp;f) const =0</arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>538c1dc5592da995e9760e5ccacadf21</anchor>
      <arglist>(const SoField &amp;f)=0</arglist>
    </member>
    <member kind="function">
      <name>fixCopy</name>
      <anchor>7d7a05ee937f6790f38fe727415e5d84</anchor>
      <arglist>(SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>referencesCopy</name>
      <anchor>c17b8407371efd994c71db88a523ba63</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyConnection</name>
      <anchor>2c822e41b385ca49e0f16f3aab8f78e6</anchor>
      <arglist>(const SoField *fromfield)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>fe2331de41af913537066e149a49a35b</anchor>
      <arglist>(SoInput *in, const SbName &amp;name)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>b629d9e30c642200478e941dfd5d651d</anchor>
      <arglist>(SoOutput *out, const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>countWriteRefs</name>
      <anchor>f8494f0ed62176deff0f1e189014ce46</anchor>
      <arglist>(SoOutput *out) const </arglist>
    </member>
    <member kind="function">
      <name>setFieldType</name>
      <anchor>7aadd2ebddc316ae81a65db58fd4f73f</anchor>
      <arglist>(int type)</arglist>
    </member>
    <member kind="function">
      <name>getFieldType</name>
      <anchor>a1d4f6b1c475506f5fb727fa5b66a94c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getDirty</name>
      <anchor>0f8b2598ca9625477fed264f6ffd081f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setDirty</name>
      <anchor>a6aa9994c273b961f0d14b9ff55ca876</anchor>
      <arglist>(SbBool dirty)</arglist>
    </member>
    <member kind="function">
      <name>evaluate</name>
      <anchor>e04e9d89c5575c8a23299f9ceeda1de1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valueChanged</name>
      <anchor>18f77390769b59187600e841c5298d95</anchor>
      <arglist>(SbBool resetdefault=1)</arglist>
    </member>
    <member kind="function">
      <name>evaluateConnection</name>
      <anchor>dac06f0c92c0b595999cbbbef409dc60</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>readValue</name>
      <anchor>7c18aaa8207dc6aef91c71d1b999085e</anchor>
      <arglist>(SoInput *in)=0</arglist>
    </member>
    <member kind="function">
      <name>writeValue</name>
      <anchor>3501176cbe0bc9a208ce5b4e9344c577</anchor>
      <arglist>(SoOutput *out) const =0</arglist>
    </member>
    <member kind="function">
      <name>readConnection</name>
      <anchor>c25af1612a2270a45bb9a469f6d34802</anchor>
      <arglist>(SoInput *in)</arglist>
    </member>
    <member kind="function">
      <name>writeConnection</name>
      <anchor>3dd91105a823ec2de598b50e63c41604</anchor>
      <arglist>(SoOutput *out) const </arglist>
    </member>
    <member kind="function">
      <name>isDestructing</name>
      <anchor>afbd223ac652931734d058419c7fefc5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>createNotRec</name>
      <anchor>f4edb045ca52ce156b557c20a1fef571</anchor>
      <arglist>(SoBase *container)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoFieldContainer</name>
    <base>SoBase</base>
    <filename>classSoFieldContainer.html</filename>
    <member kind="function">
      <name>SoFieldContainer</name>
      <anchor>3950d8784a244da6e5d81361760f2845</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoFieldContainer</name>
      <anchor>4aa2232495749eb6ac1af54d200f2180</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>bf897f40f77092485141ac666e37fb0e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>4702c1c71afff56e7556937e704ee03a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setToDefaults</name>
      <anchor>96ce6bfbc94538e8d037030f9990ee61</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>hasDefaultValues</name>
      <anchor>1bfd3ad51195e034dfebbff073f79b0e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>fieldsAreEqual</name>
      <anchor>7bcfcef5ab9fa426500f612f85daeb9a</anchor>
      <arglist>(const SoFieldContainer *container) const </arglist>
    </member>
    <member kind="function">
      <name>copyFieldValues</name>
      <anchor>2ff978298dff282bdebfaf268a634f58</anchor>
      <arglist>(const SoFieldContainer *container, SbBool copyconnections=0)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>42458263ddb5dbbdf9473c3dae07a483</anchor>
      <arglist>(const char *const fielddata)</arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>ab59399cd2889f2504587c59a98bd35a</anchor>
      <arglist>(SbString &amp;fielddata)</arglist>
    </member>
    <member kind="function">
      <name>getFields</name>
      <anchor>243551995fa3e159b3a384dc8ee352c1</anchor>
      <arglist>(SoFieldList &amp;l) const </arglist>
    </member>
    <member kind="function">
      <name>getAllFields</name>
      <anchor>440fa92008d81efb70611c0b692050c5</anchor>
      <arglist>(SoFieldList &amp;l) const </arglist>
    </member>
    <member kind="function">
      <name>getField</name>
      <anchor>f37c273006d56c866373bbdbd2740e61</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>getEventIn</name>
      <anchor>dc3421886e0c2f3a942ad1ecb791bcb8</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>getEventOut</name>
      <anchor>7cb4b21d9564a06b622fe844e3e5c166</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldName</name>
      <anchor>f4793f88a9be2404ea0607de4a9b2111</anchor>
      <arglist>(const SoField *const field, SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>enableNotify</name>
      <anchor>cfd479a5769b6f2e5c64e33bc5ecda81</anchor>
      <arglist>(const SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isNotifyEnabled</name>
      <anchor>26e6ab8aa9c6f6ce4e79ff89ed6bd330</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>41ff9570a0aeda702f818eae29c876cc</anchor>
      <arglist>(const char *fielddata, SoInput *in)</arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>1b1ee6b9b4c4dce34072b2207d86e272</anchor>
      <arglist>(SbString &amp;fielddata, SoOutput *out)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>8d8637bfa120513d81521c9cd8bc1309</anchor>
      <arglist>(SoNotList *l)</arglist>
    </member>
    <member kind="function">
      <name>validateNewFieldValue</name>
      <anchor>242628b2d7e41340398754054ae11ad5</anchor>
      <arglist>(SoField *field, void *newval)</arglist>
    </member>
    <member kind="function">
      <name>addWriteReference</name>
      <anchor>e7548576fd116460cedc5208f858f2d4</anchor>
      <arglist>(SoOutput *out, SbBool isfromfield=0)</arglist>
    </member>
    <member kind="function">
      <name>writeInstance</name>
      <anchor>0f53c49cee136d7248813963dfc97aaf</anchor>
      <arglist>(SoOutput *out)</arglist>
    </member>
    <member kind="function">
      <name>getIsBuiltIn</name>
      <anchor>acdbdb2562de00fd2a5f3caa05aa44f7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>804a4be70d7808aba5dbeff8570f8fb5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>f74b2eb05fc0ee8493c46437717e8261</anchor>
      <arglist>(const SoFieldContainer *from, SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>copyThroughConnection</name>
      <anchor>09783845667844c4c925f5f0f9a75590</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initCopyDict</name>
      <anchor>bd1c5856ee0e9c1e410b44e1d860c2fc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addCopy</name>
      <anchor>a4bd2cf6fe33bd29bba62d49cc166233</anchor>
      <arglist>(const SoFieldContainer *orig, const SoFieldContainer *copy)</arglist>
    </member>
    <member kind="function">
      <name>checkCopy</name>
      <anchor>a95f3cfa95ecdb443d7d62faa1c2aee0</anchor>
      <arglist>(const SoFieldContainer *orig)</arglist>
    </member>
    <member kind="function">
      <name>findCopy</name>
      <anchor>a5631c8ea1ef70662b136e690cbb8cf8</anchor>
      <arglist>(const SoFieldContainer *orig, const SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>copyDone</name>
      <anchor>c30353612cc6fc6fa1c0b953e9648fe3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUserData</name>
      <anchor>0381b3af71e47ffccaf445aa4de38bad</anchor>
      <arglist>(void *userdata) const </arglist>
    </member>
    <member kind="function">
      <name>getUserData</name>
      <anchor>6a5d55381c6f6d8ea62f410885d68fc3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>ebf8cab6ca3299aa1c05cc9b2dde1e35</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>isBuiltIn</name>
      <anchor>bfdbfe7eae635b3d67893c978297401f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoFieldConverter</name>
    <base>SoEngine</base>
    <filename>classSoFieldConverter.html</filename>
    <member kind="function">
      <name>SoFieldConverter</name>
      <anchor>8dc92acb9a61534ce750a6485b4498b7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoFieldConverter</name>
      <anchor>1c0d4888d64e7aebbc8158fb64dd4e0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>41ca87784cb84ef014dbb8bd308b9d28</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>4360697b700ad3a5e73238e2b8b9d20e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>3d964eab3feea79e2a19ff65d3e5547a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>fa3c2cc79c44e95202735364d75eb0fa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>2a7e245db1275f6d61d3ca5696ea858b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>afbecbb4bee615e2b95f2e8c4d749626</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6a3d7a20b8a18656a82e5f5a3a53c8b0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClasses</name>
      <anchor>a9130b402a06769f015d6337f60ee9d3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getInput</name>
      <anchor>f67f8888f8d07b60c30dd0fe8d56e034</anchor>
      <arglist>(SoType type)=0</arglist>
    </member>
    <member kind="function">
      <name>getOutput</name>
      <anchor>5107660768efbcfcde9c5df094e0055d</anchor>
      <arglist>(SoType type)=0</arglist>
    </member>
    <member kind="function">
      <name>getConnectedInput</name>
      <anchor>80e7556b71c5cfe7b5e28b8f41c4521a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getForwardConnections</name>
      <anchor>eb92fa6e507bc328a3e2c766948b6ee2</anchor>
      <arglist>(SoFieldList &amp;l) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoFieldData</name>
    <filename>classSoFieldData.html</filename>
    <member kind="function">
      <name>SoFieldData</name>
      <anchor>95369f380c061dbd05479ef40bc2e719</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoFieldData</name>
      <anchor>3bd1d0e91634fd525f6bda748378d7a6</anchor>
      <arglist>(const SoFieldData &amp;fd)</arglist>
    </member>
    <member kind="function">
      <name>SoFieldData</name>
      <anchor>a8b674b6db43a3326d95d51ed24c2034</anchor>
      <arglist>(const SoFieldData *fd)</arglist>
    </member>
    <member kind="function">
      <name>SoFieldData</name>
      <anchor>ff51b3706e99440af35c1e1d84a9970b</anchor>
      <arglist>(int numfields)</arglist>
    </member>
    <member kind="function">
      <name>~SoFieldData</name>
      <anchor>300cabe43428cb9d990ec5d8f1493042</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>addField</name>
      <anchor>424da8f6ebf6e41d3a4be8de36f0b8b7</anchor>
      <arglist>(SoFieldContainer *base, const char *name, const SoField *field)</arglist>
    </member>
    <member kind="function">
      <name>overlay</name>
      <anchor>8ed1cb9cf6cd8418ee7e583ec04b0939</anchor>
      <arglist>(SoFieldContainer *to, const SoFieldContainer *from, SbBool copyconnections) const </arglist>
    </member>
    <member kind="function">
      <name>getNumFields</name>
      <anchor>ec47845415f427f050e6fa787697a734</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldName</name>
      <anchor>dec57701a82fc2e4572ba1489dbe9cc4</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <name>getField</name>
      <anchor>383455e1821fca813d82fbe66b872437</anchor>
      <arglist>(const SoFieldContainer *object, int index) const </arglist>
    </member>
    <member kind="function">
      <name>getIndex</name>
      <anchor>3217933eb20685fc0924764524c23c0e</anchor>
      <arglist>(const SoFieldContainer *fc, const SoField *field) const </arglist>
    </member>
    <member kind="function">
      <name>addEnumValue</name>
      <anchor>f0ba782b6f2d5510e0ce46a9b7f80f5b</anchor>
      <arglist>(const char *enumname, const char *valuename, int value)</arglist>
    </member>
    <member kind="function">
      <name>getEnumData</name>
      <anchor>8bb725bc0912a62abba85369cf2f7883</anchor>
      <arglist>(const char *enumname, int &amp;num, const int *&amp;values, const SbName *&amp;names)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>a4ab8114fb3f0532d94c0822d9984842</anchor>
      <arglist>(SoInput *in, SoFieldContainer *object, SbBool erroronunknownfield, SbBool &amp;notbuiltin) const </arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>42a97bbffd8dcc60afce013105b704ba</anchor>
      <arglist>(SoInput *in, SoFieldContainer *object, const SbName &amp;fieldname, SbBool &amp;foundname) const </arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>4d01e7a7d07e25844919d3ef83fa4f20</anchor>
      <arglist>(SoOutput *out, const SoFieldContainer *object) const </arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>64970910d09dbab9aa3f862bab9cb939</anchor>
      <arglist>(const SoFieldData *src)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>6f2e8b004804940f1b05cf07be93d1fe</anchor>
      <arglist>(const SoFieldContainer *c1, const SoFieldContainer *c2) const </arglist>
    </member>
    <member kind="function">
      <name>readFieldDescriptions</name>
      <anchor>6f87717e5cf1646f37de064ccdb04cb7</anchor>
      <arglist>(SoInput *in, SoFieldContainer *object, int numdescriptionsexpected, const SbBool readfieldvalues=1) const </arglist>
    </member>
    <member kind="function">
      <name>writeFieldDescriptions</name>
      <anchor>9ba73a17af7d5128db8461aedddea989</anchor>
      <arglist>(SoOutput *out, const SoFieldContainer *object) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoFieldList</name>
    <base>SbPList</base>
    <filename>classSoFieldList.html</filename>
    <member kind="function">
      <name>SoFieldList</name>
      <anchor>f3c9e5f08d465cd42b32e3b6949d47df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoFieldList</name>
      <anchor>38cdbfdb98409d3e3939207f967fe5fc</anchor>
      <arglist>(const int sizehint)</arglist>
    </member>
    <member kind="function">
      <name>SoFieldList</name>
      <anchor>d465136c3de42cbb6e3bd32a9c358edd</anchor>
      <arglist>(const SoFieldList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>b29c53dcb620f2d8628dcd67b2e98b13</anchor>
      <arglist>(SoField *field)</arglist>
    </member>
    <member kind="function">
      <name>insert</name>
      <anchor>ed7ec7f4060a5abf1c2400b7fb2025e5</anchor>
      <arglist>(SoField *field, const int insertbefore)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>05447f09c41f661b31d63ac34a65f872</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>b3e979663b9114d06f285047727c97c4</anchor>
      <arglist>(const int idx, SoField *field)</arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>1768c3858aee94b93e63a736c96f9671</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoFieldSensor</name>
    <base>SoDataSensor</base>
    <filename>classSoFieldSensor.html</filename>
    <member kind="function">
      <name>SoFieldSensor</name>
      <anchor>88f14d81988af3961e863dd656d80f44</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoFieldSensor</name>
      <anchor>0224c337f66cc31dfbcf37f203486ac7</anchor>
      <arglist>(SoSensorCB *func, void *data)</arglist>
    </member>
    <member kind="function">
      <name>~SoFieldSensor</name>
      <anchor>3ac53745756a202c0a3e50a056524f84</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>attach</name>
      <anchor>7bd0f67e9cc6e174c0367fdc86c2b09c</anchor>
      <arglist>(SoField *field)</arglist>
    </member>
    <member kind="function">
      <name>detach</name>
      <anchor>120b58812997b3579c108f00010e19c5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getAttachedField</name>
      <anchor>9ca4429bc5b63e29b4798c9fcbcbc46a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>trigger</name>
      <anchor>a09e27d3812f5ac53d4fa532d313d607</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoFile</name>
    <base>SoNode</base>
    <filename>classSoFile.html</filename>
    <member kind="function">
      <name>SoFile</name>
      <anchor>79fbde466a7ee0dbb9db96a49f3f3a87</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoFile</name>
      <anchor>bd8a336069bbe96aa96e72ec8e1320e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ffecb4ab49250c1c95d2b2510791cf6c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>c96c94ade509a82f4a33619c52a4ac08</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>48c4a8f285ed0226c0f41559420348cd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>34fc3cfd3a72c109e4f830b504df7e28</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>21ffb705799cf7daf9a34639fea94997</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>34ced21ec68d3f2654831c5e6819c064</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>cde55d3bd0b47a5e81aeadadc44821ed</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>31f0782b83bedb23254dfce09cc8647b</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>d27f669c8e1db8487a238177db4b066f</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>ca244d5433120cdff283c86d3ea318c7</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>69bfba34aa54bf4b1cf92b1ede823e74</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>de6bf42fe5a44473233e0aa7f3b0520d</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>8c3ee2f11fa89d11f5b761010748b441</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>98dce694a3aab07fd7a05674c49df0ff</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>copyChildren</name>
      <anchor>9015b5fc8d660d95c0165b6c6a9a2d60</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>1db21bc947e41b11f058b59cd4d8cd82</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>639490591ddda0a83a16aae73007f226</anchor>
      <arglist>(const SoFieldContainer *from, SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>getFullName</name>
      <anchor>6c4cae092b2cd5bee96fab24d61c6178</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>0c1f0cac18261c2413c753591884b005</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>readNamedFile</name>
      <anchor>4ebb835e3494f80a5c64e634017b5186</anchor>
      <arglist>(SoInput *in)</arglist>
    </member>
    <member kind="function">
      <name>name</name>
      <anchor>b5a2691d80251515f8d7a501fc918e3f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoFloatElement</name>
    <base>SoElement</base>
    <filename>classSoFloatElement.html</filename>
    <member kind="function">
      <name>~SoFloatElement</name>
      <anchor>34b62e52236b3b2201039af2b1e7fbc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>7ea1839670ae1793f3a25c3eddd312d6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>84c7da3bc53ee5071b1d00d8bc9e0b74</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>9005807a0c208cc2da7a9bb186ad736b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>73858638ae99e6a928a1af53331694a6</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>matches</name>
      <anchor>c0440db3401a0e11feba773c11fa0903</anchor>
      <arglist>(const SoElement *element) const </arglist>
    </member>
    <member kind="function">
      <name>copyMatchInfo</name>
      <anchor>b8682b820fa7653322335bb40fc72777</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>fd624d54625fca2886bbe0b8890d259e</anchor>
      <arglist>(FILE *file) const </arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>ffbf73ad04a368a6e171241d70cb66fd</anchor>
      <arglist>(const int stackIndex, SoState *const state, SoNode *const node, const float value)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>bc4ccd99031a44ad46ad293e1731d691</anchor>
      <arglist>(const int stackIndex, SoState *const state, const float value)</arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>ba199d41bb48de8528aeb9fa9b413d57</anchor>
      <arglist>(const int stackIndex, SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>setElt</name>
      <anchor>16b947ef6a885245ef4d44ca46a017be</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <name>data</name>
      <anchor>99e4dbb7cb48a8eab24eeaabc44f47f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoFont</name>
    <base>SoNode</base>
    <filename>classSoFont.html</filename>
    <member kind="function">
      <name>SoFont</name>
      <anchor>1665809f7a386fd13f737ef436ddb2ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoFont</name>
      <anchor>a4cbe62cf7233f5e274e6bb4eeee20d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>18775e731b242ab9d879733896eb6ee1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>ed1a4e6f82a81f23216002c3bdde8a68</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>11884b1ba31ea9769fc3279c84f6e322</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>d7c806ba11566d02b7938232e20a4479</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>fb455a2b94e97bd280eee21e040ad5e4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>ec10736bf3a4d8a4e5d488e001a4e142</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>b69f7ddb085b9ca87d99176dc0f82ee8</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>0ddad1a9fac182cff2d13e019b77c3cb</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>5bc6723e6a159d1bcf47575037a11829</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>0bd6a90eb45102480ecdd2630745af2d</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>8994026608cc3b61e226d9e1d43975ad</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>name</name>
      <anchor>6e05868c24cbaeeee3f8e2e89e024a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>size</name>
      <anchor>8d2c7630d8020176d56802a9f336cdeb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoFontStyle</name>
    <base>SoFont</base>
    <filename>classSoFontStyle.html</filename>
    <member kind="function">
      <name>Family</name>
      <anchor>797fff8ccb801543fbda54be3a19d3cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Style</name>
      <anchor>efec3a4f69d7f6eb27e90f6b3e367501</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoFontStyle</name>
      <anchor>34ad9d6c3e07b3a89c89a32a905aa747</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoFontStyle</name>
      <anchor>f707554552e0f4c881ec4ce39e3d36dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>b465f5e05b2be9830fb032e39bd16c64</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>de32d446778213da5176271e86e1c6ad</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>9b2e81c5933d1778daeecfb1dad1acdb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>cc1e9f4644e64bb4e9cc97186d7c902d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>bc86bfb4e8e93c8bcf5ad8c5d7786dbc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFontName</name>
      <anchor>5c088de3f5332ed893d9612a97d23b22</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>7939d5bc764d14689297cc2530b72cae</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>0ee9113f6379cb4cfa88a4059bf3e7f2</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>2cd6856555cc8e56a3f4da01d0ef44f4</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>eca0739cbaca6e46c9bc8b3cb3c9abd5</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>a4dd89b6e80e49a80dcdd3461cdb29ac</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>e703f8b5bb04f5231fec9c96c911a00f</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>family</name>
      <anchor>0f275bb697594e9d872de723d1542f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>style</name>
      <anchor>36ed6e5a06403b03bf78b2aab28d37bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoFullPath</name>
    <base>SoPath</base>
    <filename>classSoFullPath.html</filename>
    <member kind="function">
      <name>SoTempPath</name>
      <anchor>3db738d22a6a471b912582e2d878cc2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>pop</name>
      <anchor>c910125223965d59eb473cadc636f8c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTail</name>
      <anchor>4bddfc1f99bb0cc70c9f1e2ebe1212ce</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNodeFromTail</name>
      <anchor>1c8d9be87e8eef34f67b81ac8a6df595</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getIndexFromTail</name>
      <anchor>416b755d0532b480de14938c630d5968</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getLength</name>
      <anchor>b2b62f3955e8b9a6c965018c098ef61a</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoGate</name>
    <base>SoEngine</base>
    <filename>classSoGate.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>1706f2390c1faf0112bbf1e2ad32d445</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dummy</name>
      <anchor>7bf3e07fc44935e10a38d36fab773395</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoGate</name>
      <anchor>8f33f9f499f21c30e1e21b51aa022719</anchor>
      <arglist>(SoType type)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>cab2236e1b3181c99c21f163f8a86c77</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>66eb2c3eca35dbd29ed5c1a77deca209</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>90cfdbde079532eaf26607564fdeea50</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>a1a3b6778bab2fb2d4f4bd3cac993c26</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>17fe469bf40f14bed770f2f5dc9e7c39</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>5b98b615f4371c989d97cda32de16ef1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>73eeb715d0ee7b1f17c6203d76a1eb2a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>inputChanged</name>
      <anchor>eb37fc6d9694a3124381c2788b8d5877</anchor>
      <arglist>(SoField *which)</arglist>
    </member>
    <member kind="function">
      <name>enable</name>
      <anchor>58ba8cba7b7a0485378bca24de4ddca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>trigger</name>
      <anchor>8fabec4cf929a7f24c941dee44c879d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input</name>
      <anchor>6de98f1f2ff1166dfc5a63ecb10275bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>output</name>
      <anchor>9959b3e7a3cdd1fe22bd58556f2569a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoGetBoundingBoxAction</name>
    <base>SoAction</base>
    <filename>classSoGetBoundingBoxAction.html</filename>
    <member kind="function">
      <name>extendBy</name>
      <anchor>8c2429efc99bf73ad48b20788da397fe</anchor>
      <arglist>(const SbXfBox3f &amp;box)</arglist>
    </member>
    <member kind="function">
      <name>ResetType</name>
      <anchor>c64919a694de0f25a48d1072c5c92f33</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoGetBoundingBoxAction</name>
      <anchor>b575afde0c66bdfa47b4e9ccf5183f1b</anchor>
      <arglist>(const SbViewportRegion &amp;vp)</arglist>
    </member>
    <member kind="function">
      <name>~SoGetBoundingBoxAction</name>
      <anchor>1008037d87af0298a54311dbf5568322</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>620c07f36a9a2a5b99ba193f5591ccee</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>da2cb6379cdafdb5c3394af378d90844</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>693f3ae41369317133b9e4496ccae103</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>379d1e7ade13fe6bf7c29673cbecf2c4</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>fe9252bf770d1c3d3ef025dd6c2877d1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>8b0c3a33a2e8ae09a10af7a3bd6d64b5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>5a132316a6f570d89bfb03ff2052965b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>e48de20e2d756e61eb918d31dff41be9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setViewportRegion</name>
      <anchor>8729d4cebd51dff3e91a592f1c1f97a6</anchor>
      <arglist>(const SbViewportRegion &amp;newregion)</arglist>
    </member>
    <member kind="function">
      <name>getViewportRegion</name>
      <anchor>4a56ebbcaca9d2f8d44d6f5f34abaafb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>d0575b70b736eb56b64fdf613e1e33d9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getXfBoundingBox</name>
      <anchor>b452c2ec28417fc7b589f9382358d8b8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getCenter</name>
      <anchor>248593416c3eb89cbd4d4cd228d71da5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setInCameraSpace</name>
      <anchor>332ce4920d34d06a4b27ea67cc1ce99f</anchor>
      <arglist>(const SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isInCameraSpace</name>
      <anchor>5fea59506771c8c21d83de9675edd0d2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setResetPath</name>
      <anchor>5c796a263ee79ee1bf2880e987fd43bf</anchor>
      <arglist>(const SoPath *path, const SbBool resetbefore=1, const ResetType what=ALL)</arglist>
    </member>
    <member kind="function">
      <name>getResetPath</name>
      <anchor>43994dce7a828f3e873bb5957f6183a4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isResetPath</name>
      <anchor>2cb391aec10d6c84cfdc4bd4d62808a3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isResetBefore</name>
      <anchor>c803e39670329431e32431f5f439eb74</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getWhatReset</name>
      <anchor>5d8efc7d17e3c115c1679e2a873f95cf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>checkResetBefore</name>
      <anchor>03b81040285674e1f3f33615b927026a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>checkResetAfter</name>
      <anchor>0229310254d52ed12d27e0f1812e900d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>extendBy</name>
      <anchor>5a4d10e40fc73fa438007d76df6cbbfc</anchor>
      <arglist>(const SbBox3f &amp;box)</arglist>
    </member>
    <member kind="function">
      <name>setCenter</name>
      <anchor>deac8e44eb54353bca044cd540d35b77</anchor>
      <arglist>(const SbVec3f &amp;center, const SbBool transformcenter)</arglist>
    </member>
    <member kind="function">
      <name>isCenterSet</name>
      <anchor>5d634d927e1e4980a10431dc121b0fbf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>resetCenter</name>
      <anchor>d132b7df48f254c4500fd8b2de4ac3cb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>beginTraversal</name>
      <anchor>014ad0b1616c5c24d039a773d073d476</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoGetMatrixAction</name>
    <base>SoAction</base>
    <filename>classSoGetMatrixAction.html</filename>
    <member kind="function">
      <name>SoGetMatrixAction</name>
      <anchor>e5ac0b7f06181091f871fee39562f4e9</anchor>
      <arglist>(const SbViewportRegion &amp;region)</arglist>
    </member>
    <member kind="function">
      <name>~SoGetMatrixAction</name>
      <anchor>27ac814be170d29e510977bf6b579a47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>077438ab5834ca5436f194b01d80a32f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>04e2c194a17acd3b8afac70baf62bf8a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>f930cd1eb94563078fa1b7ac6cf9500d</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>79b8acef205ee40c73eb27c2585cf8d3</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>b5dc1c84d3fac1b5e9339a1b6d4c0795</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>a24bbd645b205d09d03f6340c25ea670</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>49940d52eab06080b7bd66b83a09c4f3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>8233bc45b29efe0b400537485b9bd00a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setViewportRegion</name>
      <anchor>94d1edd2867ac637c183e184e7e3e2a4</anchor>
      <arglist>(const SbViewportRegion &amp;region)</arglist>
    </member>
    <member kind="function">
      <name>getViewportRegion</name>
      <anchor>8f05ba3e817d91eb8c51d62189116739</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>2ba7ec7b75bf2a11540952f5bd966dc6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getInverse</name>
      <anchor>0f9c88aaadeea5fed0cac6b41f8924fb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTextureMatrix</name>
      <anchor>b818d4b77714038f0412e139600598bf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTextureInverse</name>
      <anchor>3ddc9020114cab6f0976615205c506be</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>beginTraversal</name>
      <anchor>8cb038085672ecad54c2fd86ccb0e76e</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoGetPrimitiveCountAction</name>
    <base>SoAction</base>
    <filename>classSoGetPrimitiveCountAction.html</filename>
    <member kind="function">
      <name>SoGetPrimitiveCountAction</name>
      <anchor>d96ce284d73ed804cf219318022c01dc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoGetPrimitiveCountAction</name>
      <anchor>d418f11c073edfdd41963bfac0883334</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>25f8ff5e8e9c71d88b98972b54eda6d6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>746605aec056253fffd37131b5cf0daf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>e4ba2e3d9d1feaf139af7cc043d6871c</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>c249c50615603601f1e2d333d979f2e5</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>bb5186034bb002554f47a7caf52308d9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>2ae3af9e700df464278681ff0d61f410</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>4023cbedd2a72e22a77d2b8c1b2711f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7572e3ebb4d4dcd84b33fc7c49ca9896</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTriangleCount</name>
      <anchor>d6b44613cd180df30a610e5cc433eeb5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getLineCount</name>
      <anchor>df0923412bc23b7edd94b563a1e58d84</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPointCount</name>
      <anchor>a55f5a2c8585c8436dc5f972c2f02bf7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTextCount</name>
      <anchor>ea009de66f6f510d77fe3348d03b6da0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getImageCount</name>
      <anchor>30c35c514ae526b8bd6c5a2c375343f7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>containsNoPrimitives</name>
      <anchor>b096760eab5aa3d23ce173d96eb197cf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>containsNonTriangleShapes</name>
      <anchor>3034b5eb71497c0216901ada5b91662c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>is3DTextCountedAsTriangles</name>
      <anchor>a8672b57993a7f76c023a5c8280d0edc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setCount3DTextAsTriangles</name>
      <anchor>77d772d26366cae2df50072510d3e657</anchor>
      <arglist>(const SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>canApproximateCount</name>
      <anchor>0cb9ca77e912f3fc7101068f2bb0f7bc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setCanApproximate</name>
      <anchor>12ef509b97600196ac98e8e384c1a425</anchor>
      <arglist>(const SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>setDecimationValue</name>
      <anchor>631433ccadec3636d90ffefcea353150</anchor>
      <arglist>(SoDecimationTypeElement::Type type, float percentage=1.0)</arglist>
    </member>
    <member kind="function">
      <name>getDecimationType</name>
      <anchor>bee67ef57de81b1d8623b57b6426446f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getDecimationPercentage</name>
      <anchor>ecf62216c2b534af098c200825b5a523</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addNumTriangles</name>
      <anchor>78d9fff0fef87f447f62c43d9c728935</anchor>
      <arglist>(const int num)</arglist>
    </member>
    <member kind="function">
      <name>addNumLines</name>
      <anchor>ee2ab6c1a328b3ac7c2914f5d17fda4f</anchor>
      <arglist>(const int num)</arglist>
    </member>
    <member kind="function">
      <name>addNumPoints</name>
      <anchor>de3acd55b90303e0300a35eec7d79037</anchor>
      <arglist>(const int num)</arglist>
    </member>
    <member kind="function">
      <name>addNumText</name>
      <anchor>db3a0d28cf056be2dfbd1281bc7b5d7f</anchor>
      <arglist>(const int num)</arglist>
    </member>
    <member kind="function">
      <name>addNumImage</name>
      <anchor>60eb717ba1b0a3e197ccf3994781dc35</anchor>
      <arglist>(const int num)</arglist>
    </member>
    <member kind="function">
      <name>incNumTriangles</name>
      <anchor>73dd9395cce3b8672d946e2d68255645</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>incNumLines</name>
      <anchor>3d628ce227ea643414e1bcdff83908d3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>incNumPoints</name>
      <anchor>f23b3aa141a6efd8dc5892dce77ab8ab</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>incNumText</name>
      <anchor>42899e902896d95df12b4d2729892417</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>incNumImage</name>
      <anchor>1a4324f01af564588056cfec816f6393</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>beginTraversal</name>
      <anchor>a252da82ac0a2aa5263413899d66ca62</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoGLColorIndexElement</name>
    <base>SoReplacedElement</base>
    <filename>classSoGLColorIndexElement.html</filename>
    <member kind="function">
      <name>get</name>
      <anchor>fa4c8f9e8b4d78255a76ac8837fbad44</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getDefault</name>
      <anchor>aa4afc287e8241c4129cd7af2cd56484</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoGLColorIndexElement</name>
      <anchor>ae18ec8d7cab4fe5cb8c5519eee03d0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5bade34d739d8d63dbefa393a793ec9a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>fedb0cd19362124b7dedcd2ce710acb9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>907446af6185550332ebcc56c6abbdc3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7848cc1f9f83491f029594a28bc30ff7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isColorIndexMode</name>
      <anchor>4210813703fd2737eda8067edb35fe30</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>4b2b724439e36f144a3b80ec9421e398</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>514870d404af75a3b4452cbd39efe439</anchor>
      <arglist>(SoState *const state, SoNode *const node, const int32_t numindices, const int32_t *const indices)</arglist>
    </member>
    <member kind="function">
      <name>getInstance</name>
      <anchor>c58b13db3ae9fe48c603ec347cbfe4c7</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>getNum</name>
      <anchor>961e3430fdf5ceb0be97886b2d08813c</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoGLLineWidthElement</name>
    <base>SoLineWidthElement</base>
    <filename>classSoGLLineWidthElement.html</filename>
    <member kind="function">
      <name>~SoGLLineWidthElement</name>
      <anchor>b31d3b69c48fe512bb08740769a327b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>3c8e4be636208ccd6cae31536ebf6a66</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>5f8893274bb5441e1c2312386413c08d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>df6a56eadbcea69403a0f0631e806a77</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>62e38ff4d2319ae23eb22d17a0a6a2b7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>ec5e4cd4da409b3f605526cca890c517</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>push</name>
      <anchor>97d67146a752b66547a72dab2095a59d</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>pop</name>
      <anchor>376fc1204889dc9ebde64cab729dd077</anchor>
      <arglist>(SoState *state, const SoElement *prevTopElement)</arglist>
    </member>
    <member kind="function">
      <name>setElt</name>
      <anchor>99023b6f65600d89f1edcc084aecf5a3</anchor>
      <arglist>(float width)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoGLPointSizeElement</name>
    <base>SoPointSizeElement</base>
    <filename>classSoGLPointSizeElement.html</filename>
    <member kind="function">
      <name>~SoGLPointSizeElement</name>
      <anchor>b54691def266979e2695777d2d978da4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>4f4ad191e7280e4c6eef85de98d2c3f3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>a08f849012b2f308fa9e43f89e6c578e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>2f0d05a5fade2e1508b28c0960ec41c1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>32ecb7f4c04dd56ab5d979a269e7a336</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>8f7bd9e0a740e5a80bfc27f29a9f33f1</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>push</name>
      <anchor>dd020f6e47a46716b9d43591cdc5c426</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>pop</name>
      <anchor>e2cbb7d333efd36091751023e485c6de</anchor>
      <arglist>(SoState *state, const SoElement *prevTopElement)</arglist>
    </member>
    <member kind="function">
      <name>setElt</name>
      <anchor>1c589ffa540114b8f006d6a6a032c76f</anchor>
      <arglist>(float size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoGLRenderAction</name>
    <base>SoAction</base>
    <filename>classSoGLRenderAction.html</filename>
    <member kind="function">
      <name>SoGLRenderActionP</name>
      <anchor>1ad337efc85d4bc52ee07748964232d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoGLRenderAbortCB</name>
      <anchor>e38cb7794e7fe3de95ebe385a1e00f04</anchor>
      <arglist>(void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>TransparencyType</name>
      <anchor>b318debd5fb749f9fcc16487522b860c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>CREEN_DOOR</name>
      <anchor>b318debd5fb749f9fcc16487522b860c85b730dde06333632ba11faaa4ea6065</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>DD</name>
      <anchor>b318debd5fb749f9fcc16487522b860cef8642833b3f74d1891f981d299fe402</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ELAYED_ADD</name>
      <anchor>b318debd5fb749f9fcc16487522b860c50db8d25f88f0e2b9a5cbcb3bfac652b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ORTED_OBJECT_ADD</name>
      <anchor>b318debd5fb749f9fcc16487522b860c72a317c8d7011d1685533cbf92ad097f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LEND</name>
      <anchor>b318debd5fb749f9fcc16487522b860c097026a11757fcb96ddb52e51850f244</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ELAYED_BLEND</name>
      <anchor>b318debd5fb749f9fcc16487522b860cdbc8dd4b5600709df598ab300699bc26</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ORTED_OBJECT_BLEND</name>
      <anchor>b318debd5fb749f9fcc16487522b860c46d3d452475893e784b18b21a2f587f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ORTED_OBJECT_SORTED_TRIANGLE_ADD</name>
      <anchor>b318debd5fb749f9fcc16487522b860cc636aa256a6893c78796376f482210a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ORTED_OBJECT_SORTED_TRIANGLE_BLEND</name>
      <anchor>b318debd5fb749f9fcc16487522b860c85eeb15a9ae8ff2e08e19004f54103db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ONE</name>
      <anchor>b318debd5fb749f9fcc16487522b860c99990d4157e3622b968773e9892b87c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ORTED_LAYERS_BLEND</name>
      <anchor>b318debd5fb749f9fcc16487522b860c10f40549a0473dbc8692c998b41feef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>AbortCode</name>
      <anchor>016763ba5e313424f2450aa41693e8f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ONTINUE</name>
      <anchor>016763ba5e313424f2450aa41693e8f6c45fb1cc909525052e4b7b5e4e534e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>BORT</name>
      <anchor>016763ba5e313424f2450aa41693e8f6fc27fe42f07f195a259be7c8e4613b6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>RUNE</name>
      <anchor>016763ba5e313424f2450aa41693e8f64817d1d831b24cf068da57e4c9214917</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ELAY</name>
      <anchor>016763ba5e313424f2450aa41693e8f6bbd4e7ce1b7626971c354527309f9f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoGLRenderAction</name>
      <anchor>172532085adc5c2d5bc5dcc11b51577b</anchor>
      <arglist>(const SbViewportRegion &amp;viewportregion)</arglist>
    </member>
    <member kind="function">
      <name>~SoGLRenderAction</name>
      <anchor>c73ea4430f27bc92ba89a327ef0cd72e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>3ae003b708f5b873bcb95ec0ee5771ae</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>11dd3e4dd03768f4379df273eec26be4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>9dafa39fdca32aa9c93f115fa470c6c8</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>c1849c3c06b55087e5eab6be6db5c10a</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>729631d563fa54b07248a57fd253cca2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>148851a9797f99b7c0e0d84b7f37e695</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>dc48d893b717590769ace24351860b37</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6edc84c92e9bbd3311776c108f173c30</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setViewportRegion</name>
      <anchor>dc75a9c2226604ef9cb8deaadcdafe81</anchor>
      <arglist>(const SbViewportRegion &amp;newregion)</arglist>
    </member>
    <member kind="function">
      <name>getViewportRegion</name>
      <anchor>0e11c2e85f92794d5c44c6a85573ade3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setUpdateArea</name>
      <anchor>facefd8a75c0e97bcfb5e0ad0b86e800</anchor>
      <arglist>(const SbVec2f &amp;origin, const SbVec2f &amp;size)</arglist>
    </member>
    <member kind="function">
      <name>getUpdateArea</name>
      <anchor>581f28c513031b866c3e92ddd87a9b3d</anchor>
      <arglist>(SbVec2f &amp;origin, SbVec2f &amp;size) const </arglist>
    </member>
    <member kind="function">
      <name>setAbortCallback</name>
      <anchor>baa6b6775b84984ca68a35484d072525</anchor>
      <arglist>(SoGLRenderAbortCB *const func, void *const userdata)</arglist>
    </member>
    <member kind="function">
      <name>setTransparencyType</name>
      <anchor>566bc8a65b02c8220f7e2472c25bc233</anchor>
      <arglist>(const TransparencyType type)</arglist>
    </member>
    <member kind="function">
      <name>getTransparencyType</name>
      <anchor>ffd7c9e198d9b7d2478b30c68c2b8ef4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setSmoothing</name>
      <anchor>4da74726ed6caf63cc94aec9a5dd70eb</anchor>
      <arglist>(const SbBool smooth)</arglist>
    </member>
    <member kind="function">
      <name>isSmoothing</name>
      <anchor>f8ef534cc93cd3d3dc6e15834e64cb85</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setNumPasses</name>
      <anchor>baef725b835c9d34db262f85ce92c860</anchor>
      <arglist>(const int num)</arglist>
    </member>
    <member kind="function">
      <name>getNumPasses</name>
      <anchor>9191b685cc82431618408805ab5bde2b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setPassUpdate</name>
      <anchor>082c3841d340835436198e494b46f102</anchor>
      <arglist>(const SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isPassUpdate</name>
      <anchor>6fe1ecca5e793589055b3ced5c6aa297</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setPassCallback</name>
      <anchor>041614dfb0ee1edcb1f8af1a584eb1de</anchor>
      <arglist>(SoGLRenderPassCB *const func, void *const userdata)</arglist>
    </member>
    <member kind="function">
      <name>setCacheContext</name>
      <anchor>f6f24d1fc081580be4c02ad375635f99</anchor>
      <arglist>(const uint32_t context)</arglist>
    </member>
    <member kind="function">
      <name>getCacheContext</name>
      <anchor>6e7919ad5b1d060574366220a414b9e5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>addDelayedPath</name>
      <anchor>0088b567ca6ec701ecab30a116426e68</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>isRenderingDelayedPaths</name>
      <anchor>b02f91427c8194851aed4f677e68c44a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>handleTransparency</name>
      <anchor>1e92c2b8563a627eb0b14efe08f752c1</anchor>
      <arglist>(SbBool istransparent=0)</arglist>
    </member>
    <member kind="function">
      <name>getCurPass</name>
      <anchor>fa8670b872d4eb17c2c32dbb5e4fe15a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>abortNow</name>
      <anchor>47e743b1b44badaa40f163e8bcbccd35</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setRenderingIsRemote</name>
      <anchor>d2965b6bf4205683149f972bc8091537</anchor>
      <arglist>(SbBool isremote)</arglist>
    </member>
    <member kind="function">
      <name>getRenderingIsRemote</name>
      <anchor>e66a5eb37c12491f6c1bc3773dbb8d4d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>invalidateState</name>
      <anchor>58a967ade8581eaf4f4b1a82c7565e47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addPreRenderCallback</name>
      <anchor>52ceaef1d177334d3ba0302d491e9e7d</anchor>
      <arglist>(SoGLPreRenderCB *func, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>removePreRenderCallback</name>
      <anchor>68c075ecbf3dc42e3bb4333f54d57a26</anchor>
      <arglist>(SoGLPreRenderCB *func, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setSortedLayersNumPasses</name>
      <anchor>6114e3e6126cb0ed9eb66b43526960b7</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>getSortedLayersNumPasses</name>
      <anchor>0de1f219fcd109f38e721e8825ab0c3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>beginTraversal</name>
      <anchor>5abd36c42d1bc03f99410bc7e75b463f</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>endTraversal</name>
      <anchor>8f60e31488b81431d9909d390b18b649</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoGlyph</name>
    <filename>classSoGlyph.html</filename>
    <member kind="function">
      <name>getAdvance</name>
      <anchor>abbc3d65a0be3ee3e4d47ed9bfc8639e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getKerning</name>
      <anchor>aad6132b57050694b64f32223fbbb2f5</anchor>
      <arglist>(const SoGlyph &amp;rightglyph) const </arglist>
    </member>
    <member kind="function">
      <name>SoGlyphP</name>
      <anchor>032b232513bad4685fece255d5769565</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoGlyph</name>
      <anchor>bdfc619870ae27ce222ddf16e359e9a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoGlyph</name>
      <anchor>cb6bef86b559ac87907338f18d778a0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>unref</name>
      <anchor>34429d57345422f33f7cffff2dd2460a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getGlyph</name>
      <anchor>3a6d1fd028a4ef0f98854a6942e28d02</anchor>
      <arglist>(const char character, const SbName &amp;font)</arglist>
    </member>
    <member kind="function">
      <name>getCoords</name>
      <anchor>15596a1a76b5a8ae67040afb9a6dd387</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFaceIndices</name>
      <anchor>57a933f3aede9ca9dfde30369cabe5e7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getEdgeIndices</name>
      <anchor>511e2cc4fcebee6e6952231449faca92</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNextCWEdge</name>
      <anchor>e6e9912af6ac1e6035717b4a2d080a1d</anchor>
      <arglist>(const int edgeidx) const </arglist>
    </member>
    <member kind="function">
      <name>getNextCCWEdge</name>
      <anchor>5ea6632ae366d3bc517a1899be017e5b</anchor>
      <arglist>(const int edgeidx) const </arglist>
    </member>
    <member kind="function">
      <name>getWidth</name>
      <anchor>55d81c949f19a1983b9efcfbebc2629f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>ca858ca2ea0978b9fc96cbf8724374ef</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getGlyph</name>
      <anchor>85408a8f2690f6d979ad1086415f8c64</anchor>
      <arglist>(SoState *state, const unsigned int character, const SbVec2s &amp;size, const float angle)</arglist>
    </member>
    <member kind="function">
      <name>getBitmap</name>
      <anchor>e62521d56afe5e5b6235c7ca66bf318b</anchor>
      <arglist>(SbVec2s &amp;size, SbVec2s &amp;pos, const SbBool antialiased) const </arglist>
    </member>
    <member kind="function">
      <name>setCoords</name>
      <anchor>4e13edcccb97b9d3b7a182fe0ff87715</anchor>
      <arglist>(SbVec2f *coords, int numcoords=-1)</arglist>
    </member>
    <member kind="function">
      <name>setFaceIndices</name>
      <anchor>a43321a866271690856ed606495c34d6</anchor>
      <arglist>(int *indices, int numindices=-1)</arglist>
    </member>
    <member kind="function">
      <name>setEdgeIndices</name>
      <anchor>ebfc7c9fba24b9ebbdc07fb8ac9a90b8</anchor>
      <arglist>(int *indices, int numindices=-1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoGroup</name>
    <base>SoNode</base>
    <filename>classSoGroup.html</filename>
    <member kind="function">
      <name>SoUnknownNode</name>
      <anchor>5da88bb294a3599412d7ba0ea3d2bc3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoGroup</name>
      <anchor>6a166a894fe88f6c186efd09ecff7cf8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoGroup</name>
      <anchor>a7e15ff5654c7ab4724b397fff8ae889</anchor>
      <arglist>(int nchildren)</arglist>
    </member>
    <member kind="function">
      <name>~SoGroup</name>
      <anchor>45d9cfe36bf555a90b2e253a2e5a9d9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>3e3c469d6dfe21b0519b22586aed5380</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>e86f127de98897702634f99d6f0aa2fa</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>933eed1dd19c5266f4f5afe69e281361</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>4ddb37e2d70663d1d44da6c42ea39947</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a2e59ccc8875fc551e00facc427a229f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addChild</name>
      <anchor>23e0a7aebf3ec75c40638cc360c0e5e6</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>insertChild</name>
      <anchor>0a87322279423aab116fe442626158b7</anchor>
      <arglist>(SoNode *child, int newchildindex)</arglist>
    </member>
    <member kind="function">
      <name>getChild</name>
      <anchor>a15cf5f6a91f19377852b71efb670a9b</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <name>findChild</name>
      <anchor>1c662ef0bbe4052c6573f595b94276b7</anchor>
      <arglist>(const SoNode *node) const </arglist>
    </member>
    <member kind="function">
      <name>getNumChildren</name>
      <anchor>fb2aef68e18331b6edc3523cf6f546f2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>removeChild</name>
      <anchor>08a8536e74a09043e820206cc1107c77</anchor>
      <arglist>(int childindex)</arglist>
    </member>
    <member kind="function">
      <name>removeChild</name>
      <anchor>4164d0ef348129adf0ec244153576e07</anchor>
      <arglist>(SoNode *child)</arglist>
    </member>
    <member kind="function">
      <name>removeAllChildren</name>
      <anchor>0e0f51c52b2a78173c46531785decd36</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>replaceChild</name>
      <anchor>d8ad1c3ce980cd622a9e6481dc567d0c</anchor>
      <arglist>(int index, SoNode *newchild)</arglist>
    </member>
    <member kind="function">
      <name>replaceChild</name>
      <anchor>e006a114fac6746a3514eebd0a8f3dc5</anchor>
      <arglist>(SoNode *oldchild, SoNode *newchild)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>209bb35866916e72da4b18046428057c</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>1ee9efd0a4183d032a0417114b04ee38</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>a3a6024dda260bc148e05cf35a7361c7</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>d5a7fa40c5caac6f193f48f780658340</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>35e6dbcbea865a28977fce93e3b835a3</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>9cedae6a08d579f9fade1b92fe8aaa95</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>a17968b17d069e36fc9c5598f9b43c20</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>63a504e1809c7413318396010d002335</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>12aef60c111941b6663a7a77bc83b75c</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>e728a959b52a0ac5f110095bd8a42494</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>263b32be11483f9de8f892222aed0aa2</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>6816e99adaa3bcc6056df91e4db1fca0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>3c6b5609d4c6e5ec4ff5fe5797e15fed</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>readChildren</name>
      <anchor>c2d8b2d407cfdf87edf06fb986d53d02</anchor>
      <arglist>(SoInput *in)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>ae8e8e5103e323b5d59eb8386671cc59</anchor>
      <arglist>(const SoFieldContainer *from, SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>createNotRec</name>
      <anchor>a8cac54a0a595403f5475cc502bebdd7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setOperation</name>
      <anchor>406c817ec0e1e44cf70e953c7d2fd4d4</anchor>
      <arglist>(const SoNotRec::OperationType operationType=SoNotRec::UNSPECIFIED, const SoNode *changedChild=NULL, const int changedIndex=-1)</arglist>
    </member>
    <member kind="function">
      <name>children</name>
      <anchor>1e8e7f082d2877bd063068786a1d7dda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoHandleBoxDragger</name>
    <base>SoDragger</base>
    <filename>classSoHandleBoxDragger.html</filename>
    <member kind="function">
      <name>arrow1</name>
      <anchor>347d33731bd394ef4fa6d78ad30c983c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>arrow1Switch</name>
      <anchor>7204d667d9dbd8e18de54cd3f834792c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>arrow2</name>
      <anchor>e732ebe0a710a42150806510b8339cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>arrow2Switch</name>
      <anchor>55c73adda41e7237d2258b2fa242e688</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>arrow3</name>
      <anchor>80cf72f68f0be20904dcfb7c53ba066c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>arrow3Switch</name>
      <anchor>7d7b846fcc303a2d03e06e0ad33b0eba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>arrow4</name>
      <anchor>d52176b8fe0a5e19b3b60b0bcba169ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>arrow4Switch</name>
      <anchor>8be55c24e4c960ad68d4fb05755fa836</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>arrow5</name>
      <anchor>bf47ee62217248428826729828e98484</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>arrow5Switch</name>
      <anchor>8b4e4c25588920121502d4ff9acab7ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>arrow6</name>
      <anchor>fdded5853decf16d6937870f249584e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>arrow6Switch</name>
      <anchor>1ce4e6acc810a52977a5a8871d446814</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>arrowTranslation</name>
      <anchor>b24fce41896e2eccbe3971d78c07b111</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>drawStyle</name>
      <anchor>83799e9ef6efc4bcbc2be198bc10bd43</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder1</name>
      <anchor>145fe9b03f419c7f41844f96715d2b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder1Active</name>
      <anchor>4c9a7718d7ea0a7b2c768d5ccf9465ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder1Switch</name>
      <anchor>cca0ea9cc3118ef98b4523cd105c35ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder2</name>
      <anchor>a7275978e26c9eeb0b38b8ede1a5921d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder2Active</name>
      <anchor>393c3c4e320009162725613c6eb1b62e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder2Switch</name>
      <anchor>88bebedfb93e81f66e94b2829309a562</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder3</name>
      <anchor>14ce9c75859b9698d05ab85f7334fe2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder3Active</name>
      <anchor>49610be364436adadb57595cfc5fb5b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder3Switch</name>
      <anchor>4e665a7c242f86fac018516aefcabc35</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder4</name>
      <anchor>3c34772ce0692a07e88379a5faecdb94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder4Active</name>
      <anchor>06742bdf81ccca8b37ed62a6f9f9d345</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder4Switch</name>
      <anchor>1c66c48d3f88fb74c064dff90054e3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder5</name>
      <anchor>96e0b39c3f7fa5411a559c78bc30e6c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder5Active</name>
      <anchor>e6856b4e8208024ed66e81ff0380cf6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder5Switch</name>
      <anchor>2f79b230cb3e8f2d6fe3f054605fce06</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder6</name>
      <anchor>c814652b392c8a4896ea694c9befde0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder6Active</name>
      <anchor>6e847b40c256b10a0ea7bc08f17095bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>extruder6Switch</name>
      <anchor>6d38cbea633c318731ea30f1744e3fa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>surroundScale</name>
      <anchor>7865a5da1becc3402908546992111458</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator1</name>
      <anchor>3481eeb3a17100f5b1f64d32f98307f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator1Active</name>
      <anchor>96b84d3c026df2ccb6fe954dac946069</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator1Switch</name>
      <anchor>732d94c43f2ada7e78920b671b974a09</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator2</name>
      <anchor>560a5b95bccc558acc94af473fe9e8c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator2Active</name>
      <anchor>19b9a8fa9526eb5f7ba85f116ab53ebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator2Switch</name>
      <anchor>c75349b5d9592080de5605d380a51cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator3</name>
      <anchor>ff6ebf120b62aedacc252dc6690afb65</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator3Active</name>
      <anchor>da699f6d8fc51ce81d2e6870623c234d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator3Switch</name>
      <anchor>d53fba39bb7f88a832dc81af72601c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator4</name>
      <anchor>6e77ccee30bfa4b1cdc7b67c41e4ca53</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator4Active</name>
      <anchor>30e4fa73da302c30b6181bebd4d02c52</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator4Switch</name>
      <anchor>69cbdc8d7dbcbcedf624e9a04de93f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator5</name>
      <anchor>92a83a8ec6d89fa633eb02909bb66014</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator5Active</name>
      <anchor>ac6853eb42719c80207a7d5a43559434</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator5Switch</name>
      <anchor>6fb217a129e8faeb23d8ded446381028</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator6</name>
      <anchor>1bd0014e83234388c6c1cd54bdd90c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator6Active</name>
      <anchor>70b49938f2c7e8a9f87ae9a44c03abad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator6Switch</name>
      <anchor>f7e1224ac36f041625e03e99ff095b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform1</name>
      <anchor>634e18a5920328972a85ce7ea50403b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform1Active</name>
      <anchor>b1772b6a5df81d6edf44f018c4dedbcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform1Switch</name>
      <anchor>e3fcf3a39b0404489bf95205276a7d18</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform2</name>
      <anchor>bc4122e8cdafe97b7e8d00fcc0c9c002</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform2Active</name>
      <anchor>4187e75b7847b634cc9cf634c7206701</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform2Switch</name>
      <anchor>f9cc8736420765bf84c307ec4a06b741</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform3</name>
      <anchor>311a937fa77da9400cd86079593f9a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform3Active</name>
      <anchor>c9d95591d836082e7b3f1eb429e3b271</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform3Switch</name>
      <anchor>9ed7880677f025963e77ed1706b2dbac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform4</name>
      <anchor>e11ba97fe9529c0efa0e29b3bad2ded2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform4Active</name>
      <anchor>d5f02884a42898354d8b358de0c18f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform4Switch</name>
      <anchor>22c6bd6ce3503bf5c5827ebcdf6d7984</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform5</name>
      <anchor>f917ead6dc0e6692f29b7e5f36afc5fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform5Active</name>
      <anchor>3c4ed3b512370472cd3428448865a4c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform5Switch</name>
      <anchor>fb0f2117f0879e09d98ea43e563df7bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform6</name>
      <anchor>a5df2e5a22b20920c24c492b726502eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform6Active</name>
      <anchor>e99b81b1112e7a2b4f7d3f0790edfd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform6Switch</name>
      <anchor>d1c8e5adc07a29d3ef2d71f6f48c54c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform7</name>
      <anchor>1c9767880270a5a5872937ad0fba2f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform7Active</name>
      <anchor>7f47a14b3f9714199d77153b280aedbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform7Switch</name>
      <anchor>23ec6b03d467183b89d585e6b45b1bf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform8</name>
      <anchor>5f4681d25a0ac39af798e3508a183c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform8Active</name>
      <anchor>a75ac2ec6aad6629486920679e687b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uniform8Switch</name>
      <anchor>3014f499bada8703b4094c71cd5f07e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoHandleBoxDragger</name>
      <anchor>5b4917fb4ce7c2b5a9e044369438de7e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoHandleBoxDragger</name>
      <anchor>859ca9d61035266904fbbf743dd5c627</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>de95920ccef9aef047d532ec5aba5c5e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>b990f6070ddc93412fcfe2de2e8e70c5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>c2e71961f3b93d77ed09cb154fbb6e1a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>25e5fc858f937875d1cbe61e8dc1899a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>fcbb07f9a08a8b69b5e6ed2eae1197a2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>d798cc275d6749407773117f8d1f5ac2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>70d96a139107e589edead302faae0b7b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a2a083c6f611acd44ceac97e52ab41c5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>22fd21ed12c880f3efea65ebd0d39a82</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>60f59d46f50d668a3e42331c182d0816</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>startCB</name>
      <anchor>807a19805071592181f540e670ed3972</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>motionCB</name>
      <anchor>142599d5cfc9d58189fe038507ae0ab7</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>finishCB</name>
      <anchor>c32f2aced387d349e1bb680d5f7fabf2</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>metaKeyChangeCB</name>
      <anchor>1d81c7f97ade48acbcc0d24d7794bd77</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>0aee9daa04056e70c3d9306b9e51d3a1</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>3f67daa2f9869bb2bf9f6c4fda9dec4e</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>48069238efe24a46cf15f539973b08f0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>7837fd5cd8449267fdf4438d58027fdd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>ab0b03e1335de3e706a06a5119cf9bd8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setAllPartsActive</name>
      <anchor>99bc8950f885716a9ac81bf461e3802e</anchor>
      <arglist>(SbBool onoroff)</arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>dde36d1ce2232a4c1f799f9c98f307b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>c3f9e92c27dff70aa86cc132296f40b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translFieldSensor</name>
      <anchor>f639384d9e110a7e0e99bd98a3eee565</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFieldSensor</name>
      <anchor>7a9f8369f7aca9061a41ed5b4012adb2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoHandleBoxManip</name>
    <base>SoTransformManip</base>
    <filename>classSoHandleBoxManip.html</filename>
    <member kind="function">
      <name>SoHandleBoxManip</name>
      <anchor>6be60bcbecde5e568a69905bc6079418</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoHandleBoxManip</name>
      <anchor>081dea2cd85cb46b016831137331d788</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>06bd7038a0018cc40ea7c223ff1d5f51</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f4b932400122e9f94e1d70d9a7ed5340</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>6a4dc61a97d1466bac0714ee01fbe082</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>23dd970166b4c16ef347cd78bbd687a6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>aeeeaf0666c1160f00389c3e48f6c03e</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoHandleEventAction</name>
    <base>SoAction</base>
    <filename>classSoHandleEventAction.html</filename>
    <member kind="function">
      <name>SoHandleEventAction</name>
      <anchor>5064ba50229cbe988529fe684f9cd031</anchor>
      <arglist>(const SbViewportRegion &amp;viewportregion)</arglist>
    </member>
    <member kind="function">
      <name>~SoHandleEventAction</name>
      <anchor>34e96a32f0e3ff8dca003a019ebf2aa8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>417b98c718510cee397a4c6e5a0dff07</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d384f07eb1895e6cd40b4742c6e4c96c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>2d249745d188755c408a5a4af45aac23</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>d35e40d200147ff7a009e6f825a5d7e5</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>feddea59d7fea4ec010086ff7d9acfd8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>0c8844e6e6e79d4c04f48734814f31a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>adb9d47d671aff72beb36a9e11f124ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f8c7e6736166dccfbbdc9d7d5f05684f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setViewportRegion</name>
      <anchor>3789af4dd51672e02587816661a08fd2</anchor>
      <arglist>(const SbViewportRegion &amp;newregion)</arglist>
    </member>
    <member kind="function">
      <name>getViewportRegion</name>
      <anchor>66a2dbcb2dd81cc67fd37d69cef65c5f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setEvent</name>
      <anchor>e431ba76ac60ddfd160d150d9f37e842</anchor>
      <arglist>(const SoEvent *ev)</arglist>
    </member>
    <member kind="function">
      <name>getEvent</name>
      <anchor>b42e2c4e7b63ee61e374b39bf78c415f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setHandled</name>
      <anchor>e27869d8043de45b0e29d07b7dabd02e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isHandled</name>
      <anchor>3474c845128c7bd9bea92081e5bdf25e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setGrabber</name>
      <anchor>2c7d99dd4a7d6635ca14ba2246285ada</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>releaseGrabber</name>
      <anchor>de6a8ef0aceb76d516f623d3f5f5d02e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getGrabber</name>
      <anchor>03ba08db320a5a62fc388720c1059db9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setPickRoot</name>
      <anchor>e22b30a237275ce72f685be1c27c9da4</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>getPickRoot</name>
      <anchor>fcc72a13a6f724a7134aa077bdd5950b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setPickRadius</name>
      <anchor>28f3e792d32278c6a84aa3963c0e153f</anchor>
      <arglist>(const float radiusinpixels)</arglist>
    </member>
    <member kind="function">
      <name>getPickedPoint</name>
      <anchor>29af021df8f9ab25023b4f9d901e314e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getPickedPointList</name>
      <anchor>cdfbd6db0f7396a329522ce862b9187d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>beginTraversal</name>
      <anchor>c166197a430e31f9004015121015e92b</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoHardCopy</name>
    <filename>classSoHardCopy.html</filename>
    <member kind="function">
      <name>init</name>
      <anchor>e1fbea5ce5f0fcd4c4a003ac76ee7a3f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getProductName</name>
      <anchor>fb41be14ae5a8540bd70f0f4fe0c1266</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getVersion</name>
      <anchor>2ab5e0b641005c107cfff478582b72e4</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoIdleSensor</name>
    <base>SoDelayQueueSensor</base>
    <filename>classSoIdleSensor.html</filename>
    <member kind="function">
      <name>SoIdleSensor</name>
      <anchor>38f4ba3784a19ef721730304cb59518b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoIdleSensor</name>
      <anchor>287e2990524792fd89e6a0f7762747b0</anchor>
      <arglist>(SoSensorCB *func, void *data)</arglist>
    </member>
    <member kind="function">
      <name>~SoIdleSensor</name>
      <anchor>3e49ee86dda770ce9f17bbf0722c5084</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoImage</name>
    <base>SoShape</base>
    <filename>classSoImage.html</filename>
    <member kind="function">
      <name>VertAlignment</name>
      <anchor>1b53fae1ddedd0dc4f5471ba90d048a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OTTOM</name>
      <anchor>1b53fae1ddedd0dc4f5471ba90d048a28b030ed80252bb443fa15bcd4564e256</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ALF</name>
      <anchor>1b53fae1ddedd0dc4f5471ba90d048a2072997f653966022f9e624ff038401cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OP</name>
      <anchor>1b53fae1ddedd0dc4f5471ba90d048a2c1ce7d8b1ffd64ae5179fd2bad55f358</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>HorAlignment</name>
      <anchor>85dee2c63494827b752aa7d9ead26f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EFT</name>
      <anchor>85dee2c63494827b752aa7d9ead26f6be6841512e4eafcf4f498514d11a5862e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ENTER</name>
      <anchor>85dee2c63494827b752aa7d9ead26f6b4b755bf99642cc72e47cad534f9d0247</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>IGHT</name>
      <anchor>85dee2c63494827b752aa7d9ead26f6bba11b512dbaf29a162a917324d1b0a5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoImage</name>
      <anchor>eef86fd5240dc59b031e49dd0f1e0402</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoImage</name>
      <anchor>17ef93d3085bd1387a168dd80a95abed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>6fe6e63b99575b51902f3effa258e6d2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>cf3d09cdf9eae8c36eb590712f564304</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>53d991a38d2ce641f6147e5d1325a767</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>e9c57db3b314f7893d11bb8debf93bb2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>280d331117bad8dc7119f468331a6220</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>39003530abbdd172fd399ac277315578</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>fa004c3e8333cbea28d88cea24bb6dba</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>bc9ac911e16ede073f9fc0e47686d388</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>46db5083906a4916cf514d0636b0d96b</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>fec8f680a441cd18b6d59dbaa66a4675</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>e08cd0bff6b575f851592c0642f050d2</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>818c282ec15d1f6ce2d0847c78977268</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>getReadStatus</name>
      <anchor>2d3f691bb49af5ccea50601825f12e71</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setReadStatus</name>
      <anchor>4ac17d1506e231bfb61fcdef3d5e5602</anchor>
      <arglist>(SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>width</name>
      <anchor>8c77fe717baad762597c43bd387218e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>height</name>
      <anchor>6c2734e0a6776c80c98d53c9b01e21a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>vertAlignment</name>
      <anchor>eb5f590a5fed89fc7d7b1d308054f4fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>horAlignment</name>
      <anchor>83f5d85b3b60c9d40bed2ba0d412a5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>image</name>
      <anchor>09e91a795301ae842a1be118ff5109d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>filename</name>
      <anchor>6d4ae0d8e96d19f7198c45fab8e66df4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoIndexedFaceSet</name>
    <base>SoIndexedShape</base>
    <filename>classSoIndexedFaceSet.html</filename>
    <member kind="function">
      <name>SoIndexedFaceSet</name>
      <anchor>7395181966165160a16034165370183f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoIndexedFaceSet</name>
      <anchor>a8cba49ffb7d140de49efd7c50f112b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>6f12f006c9140ae84cdb3465200aba41</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>cf12725b11679ed92b64ad93b98900a5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>ccdfdc3267651ff0fbb935ee16fddbeb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>a4b0d1568872abc4bd18d7ded834aa65</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a402b04815a66ae3d807884f393745a6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>d40204739706ee03825f7344328e5a0a</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>8bf94c6e2513dd486445c4d79d3fbc80</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>2f7077230d6945c9cf025273fcb3f4bd</anchor>
      <arglist>(SoState *state, SoNormalBundle *bundle)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>ec657bda0949de2f8664be78cee2493c</anchor>
      <arglist>(SoState *state, SoNormalCache *cache)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>fcf16a60e75cd1f7d88d7853b0c16387</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoIndexedLineSet</name>
    <base>SoIndexedShape</base>
    <filename>classSoIndexedLineSet.html</filename>
    <member kind="function">
      <name>SoIndexedLineSet</name>
      <anchor>164d8a8b011e18eee1982abd1b581b20</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoIndexedLineSet</name>
      <anchor>ec61d02f397b0aa35f7f932e3f73ebfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d7622feedd0136f8eb69c5ee5ea8bc08</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>65bf790739650916db0cddfc1b7af0d2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>670d261f8afef9eeb8012e26814a3872</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>b62b6ee261e44f6806eef28805c5be8c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f54d2781b192b4d4579732766d401ee3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>68446f3fffa43afc784e4f5a0e3e55a8</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>3fa55d0c4bea4b51fdcbf79eba343b53</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>93b36d6bc86fb020489b80a1ce9a158b</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoIndexedNurbsCurve</name>
    <base>SoShape</base>
    <filename>classSoIndexedNurbsCurve.html</filename>
    <member kind="function">
      <name>SoIndexedNurbsCurveP</name>
      <anchor>9e85ca10f81eb9a3d40c7d05b4b531f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoIndexedNurbsCurve</name>
      <anchor>c9453356a004334e954727eab8d9cd75</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoIndexedNurbsCurve</name>
      <anchor>4432eb4cff7d309794ec0bdc3fa57ac7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>8efb295eed554a0b4f74effb42cf8b23</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>14dd64dce8151be416f1a46cbd8fb85d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>99ee494cfcba58323586e62e9821e7c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>246e8334de20a0f6282912b9dd6be343</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>3eab1194e1467f26cc9bcf03dc73e2a2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>112208ab3c11a2f0f7467fa9b451ef49</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>948e23ad741e2fee1d9bb41afda74d12</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>ac17433fa4e776bfddfd1babc642e764</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>15f4b0022b46bd844a1a6f54da522891</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>sendPrimitive</name>
      <anchor>09036952f59087c9bfab06ce5483a214</anchor>
      <arglist>(SoAction *, SoPrimitiveVertex *)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>dcf39bde0894ccc04b6a7420ef0d9058</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>9788fe6d8d8ed8b322f13de9ae1b5ecc</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>createLineSegmentDetail</name>
      <anchor>4aa0b8d53cefa160ef74c3894c64beb8</anchor>
      <arglist>(SoRayPickAction *action, const SoPrimitiveVertex *v1, const SoPrimitiveVertex *v2, SoPickedPoint *pp)</arglist>
    </member>
    <member kind="function">
      <name>numControlPoints</name>
      <anchor>8b566eb9b4ad3ea7b50311aefb72aa6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>coordIndex</name>
      <anchor>e32ff72af45be515ed77ff47c5ddd760</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>knotVector</name>
      <anchor>f717f3c48d603b9a1765e02c67130e38</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoIndexedNurbsSurface</name>
    <base>SoShape</base>
    <filename>classSoIndexedNurbsSurface.html</filename>
    <member kind="function">
      <name>SoIndexedNurbsSurfaceP</name>
      <anchor>f5f1b1853c7d3c7dfc78c0b832d9c35e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoIndexedNurbsSurface</name>
      <anchor>32a49b3beeab5dc9fc6d115c2004763a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoIndexedNurbsSurface</name>
      <anchor>2bbe37eb3699e392748ad6bc93afba8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>f529b90943086ff494dfe4c7adeedd5c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>7cb368b8d24ddb0451a6c9c59136570e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>46396250d299e11f429d6771f96bf99c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>11bf2e1fba32f654201e80bdb325da8d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>b591e1dd572df109ce778056d81e76fd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>1f0eed88d71aad1f27e9166a08dbaa23</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>0e148385b214ae60275b30beb2f9e67a</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>1449e15e7704b19736335c0151cee5b6</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>sendPrimitive</name>
      <anchor>cb5acde3a4bc96216e22d18a70f1721e</anchor>
      <arglist>(SoAction *, SoPrimitiveVertex *)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>4222f6dbfb73b4798cbcf5140b07b159</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>018a85f79f83f17c1c1df316f83a5fad</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>createTriangleDetail</name>
      <anchor>534e907013393ac9b78e56249aceac69</anchor>
      <arglist>(SoRayPickAction *action, const SoPrimitiveVertex *v1, const SoPrimitiveVertex *v2, const SoPrimitiveVertex *v3, SoPickedPoint *pp)</arglist>
    </member>
    <member kind="function">
      <name>numUControlPoints</name>
      <anchor>96aa9d2c69b911943b1933ecd29440cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>numVControlPoints</name>
      <anchor>bda9f35376986cd24d25a2521e037e81</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>coordIndex</name>
      <anchor>d10043fccc50ff35413d1f4b29e51235</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uKnotVector</name>
      <anchor>a5fa8f2f1d03ee7ec53a0765750abe31</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>vKnotVector</name>
      <anchor>974a53bc0d52fd9ea3b0d26435999d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>numSControlPoints</name>
      <anchor>f78fa7edc64d3c9a5c9b40e2730fbf17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>numTControlPoints</name>
      <anchor>52bb3b078112279c88e6770e185fe794</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>textureCoordIndex</name>
      <anchor>697c5a7a868c530618252f647cabdaee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>sKnotVector</name>
      <anchor>6acc91c0e8d3299ebaac05e9707facaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tKnotVector</name>
      <anchor>9e25145aaa8ae9d230f67e2039ff8ec4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoIndexedShape</name>
    <base>SoVertexShape</base>
    <filename>classSoIndexedShape.html</filename>
    <member kind="function">
      <name>SoIndexedShape</name>
      <anchor>95d013121106581f13dffe229b4637cf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoIndexedShape</name>
      <anchor>4c2d96f0d8e0f484e1130f3ea482443d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>7fad5a00abcffffd79165dc53a77ff28</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>aaba1c76b4ebc133bc87e3987c64c538</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>97434d4748cd4e764db4aef18097c263</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>c331724d58dbcb62d2bedcb52efff0b5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0f0eadb391fb49004bdcfd2568396a58</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>599eb45ef1d6501745d68356b3d17f0d</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>getNumVerts</name>
      <anchor>c5dc266e55f5d28b301f1a4f44c0094f</anchor>
      <arglist>(const int startCoord)</arglist>
    </member>
    <member kind="function">
      <name>setupIndices</name>
      <anchor>d2975c1d31283911236eb85e680abd6e</anchor>
      <arglist>(const int numParts, const int numFaces, const SbBool needNormals, const SbBool needTexCoords)</arglist>
    </member>
    <member kind="function">
      <name>getNormalIndices</name>
      <anchor>34ce4abfc0cacd5c6c15b9cd63c59b35</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getColorIndices</name>
      <anchor>0d188c7b7a9868b57d99a8a736073140</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTexCoordIndices</name>
      <anchor>be2eeab78b950ba0bb09bef3aeda1edf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>areTexCoordsIndexed</name>
      <anchor>a0451abd888ba88ce1b76e854256ae2f</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getVertexData</name>
      <anchor>97e74cb895ffbba68b7a5378433ac8ff</anchor>
      <arglist>(SoState *state, const SoCoordinateElement *&amp;coords, const SbVec3f *&amp;normals, const int32_t *&amp;cindices, const int32_t *&amp;nindices, const int32_t *&amp;tindices, const int32_t *&amp;mindices, int &amp;numcindices, const SbBool needNormals, SbBool &amp;normalCacheUsed)</arglist>
    </member>
    <member kind="function">
      <name>coordIndex</name>
      <anchor>2782d75eda8d1831b2b279be8b333de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>materialIndex</name>
      <anchor>969bc4d2b7e03fb636059c496599bef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>normalIndex</name>
      <anchor>05dbebf79c7badea7a05063a0280bcff</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>textureCoordIndex</name>
      <anchor>7b118a6997db7b0374674a02ac2459ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoIndexedTriangleStripSet</name>
    <base>SoIndexedShape</base>
    <filename>classSoIndexedTriangleStripSet.html</filename>
    <member kind="function">
      <name>SoIndexedTriangleStripSet</name>
      <anchor>e8fb1dacdea5860aa57246a979285e37</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoIndexedTriangleStripSet</name>
      <anchor>af3fdbf417915bb7a23e190af3db2705</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>51359cdcf29086c156cbdd7797f2be4f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>084a0a8e6cab810de4093f46eb7f84ce</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>6b438a883708b58666e921c8b93d630c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>832966d2f21da90bebf72a4562f070bd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>740ae9dd927858a1476f7f97525ff3ec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>f1b2e3d3f84f0b38ac2b9b4d3890649d</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>35f1057ba26b504004d40d499ae1aca1</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>a2f936e06495a49c088179689a4c9d66</anchor>
      <arglist>(SoState *state, SoNormalBundle *nb)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>3682069b698ee5b67870ed5c2d64475d</anchor>
      <arglist>(SoState *state, SoNormalCache *nc)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>7e33a5497f77f4b47ef95432af127ffb</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoInfo</name>
    <base>SoNode</base>
    <filename>classSoInfo.html</filename>
    <member kind="function">
      <name>SoInfo</name>
      <anchor>287b26b41158b984054c3a3698187323</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoInfo</name>
      <anchor>d174fbd6eedbfbef251ed86902322d8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>724de12e84b2a758785ab0fdfcfb5e02</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>aadac66621eb9d610cdbbb6bf64d7107</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>159d08c2a593793b3e59d0b36a0d7c0b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>94ecfd3f5960a1fdf5fc5f30f580069f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>accde9d84e1e9399b14c5ebbc8cadca5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>string</name>
      <anchor>cb8b5cc82716d22bd9d220d26d0c197a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoInput</name>
    <filename>classSoInput.html</filename>
    <member kind="function">
      <name>SoDB</name>
      <anchor>94f1f515af26a8066f4f771aebd76175</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoInputP</name>
      <anchor>aa27b0390dc11914d30ac3c270c502a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoInput</name>
      <anchor>ad6a27869faabd1cfc94d537881af73e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoInput</name>
      <anchor>ec1751434db4f9bc397d872f7efcf100</anchor>
      <arglist>(SoInput *dictIn)</arglist>
    </member>
    <member kind="function">
      <name>~SoInput</name>
      <anchor>bf4e3d4e5d06959037323ed6f03f5df3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>findProto</name>
      <anchor>d0e25f354c7802977ea4f48dece877ca</anchor>
      <arglist>(const SbName &amp;name)</arglist>
    </member>
    <member kind="function">
      <name>addProto</name>
      <anchor>57453400e374bd1719fff8b2f4a463df</anchor>
      <arglist>(SoProto *proto)</arglist>
    </member>
    <member kind="function">
      <name>pushProto</name>
      <anchor>a117f260177b221870236d761005867b</anchor>
      <arglist>(SoProto *proto)</arglist>
    </member>
    <member kind="function">
      <name>getCurrentProto</name>
      <anchor>2eabe9deb19e1b8899307d4cc4014152</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>popProto</name>
      <anchor>f9b9b35394f090326900d83d203c45c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addRoute</name>
      <anchor>45d7f8f6244662d288e6ea6a29e374fb</anchor>
      <arglist>(const SbName &amp;fromnode, const SbName &amp;fromfield, const SbName &amp;tonode, const SbName &amp;tofield)</arglist>
    </member>
    <member kind="function">
      <name>checkISReference</name>
      <anchor>3bca1464e2a2895d274cf2ae88d3e475</anchor>
      <arglist>(SoFieldContainer *container, const SbName &amp;fieldname, SbBool &amp;readok)</arglist>
    </member>
    <member kind="function">
      <name>setFilePointer</name>
      <anchor>20f9f4b22af997659ca7c6ea561fa105</anchor>
      <arglist>(FILE *newFP)</arglist>
    </member>
    <member kind="function">
      <name>openFile</name>
      <anchor>7055fed4278c21a92564cd8c172288d8</anchor>
      <arglist>(const char *fileName, SbBool okIfNotFound=0)</arglist>
    </member>
    <member kind="function">
      <name>pushFile</name>
      <anchor>7a3279ca83ff540501a2fba2d27a04d3</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function">
      <name>closeFile</name>
      <anchor>1129eedac60a1c409d47558009a46ffb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isValidFile</name>
      <anchor>528a90823909957b417e2fefa743c91d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isValidBuffer</name>
      <anchor>541a70c39fac93a91be4ad14b5de98b6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getCurFile</name>
      <anchor>0e4f781fb2176e320f4f74e549af82bf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getCurFileName</name>
      <anchor>039f94d34a61c59893bc72b298987b08</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setBuffer</name>
      <anchor>24602561cfb84ffb1047207c3763fa50</anchor>
      <arglist>(void *bufpointer, size_t bufsize)</arglist>
    </member>
    <member kind="function">
      <name>setStringArray</name>
      <anchor>f28592d7aa017765fdaad6fbc6b3d99f</anchor>
      <arglist>(const char *strings[])</arglist>
    </member>
    <member kind="function">
      <name>getNumBytesRead</name>
      <anchor>ae89566e455bce511bca97f7646b5e9c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getHeader</name>
      <anchor>38f80ad59e0ca2e8ec1f6216a380f0ad</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getIVVersion</name>
      <anchor>32a5e6eaf4969d8ada1e5daf2e059269</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isBinary</name>
      <anchor>457936a22ca9585314552bcdfb2564b8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>5193596a25c9d0cc5fe6280acbdbf1f3</anchor>
      <arglist>(char &amp;c)</arglist>
    </member>
    <member kind="function">
      <name>getASCIIBuffer</name>
      <anchor>aa9370afb9829d4e053eae82b56f0be7</anchor>
      <arglist>(char &amp;c)</arglist>
    </member>
    <member kind="function">
      <name>getASCIIFile</name>
      <anchor>7e6a3babde6c7e217e2a29ff8a528f7f</anchor>
      <arglist>(char &amp;c)</arglist>
    </member>
    <member kind="function">
      <name>readHex</name>
      <anchor>589f80db7bde345c47c64f8d12cc2bb7</anchor>
      <arglist>(uint32_t &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>e96f56efe2cd0e61e046ae976d46f6c5</anchor>
      <arglist>(char &amp;c)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>9f5e23b8db88b37a9e154d4d0b3e2f43</anchor>
      <arglist>(char &amp;c, SbBool skip)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>81e213356becf52d09987bde2f646b25</anchor>
      <arglist>(SbString &amp;s)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>d3a94761592307d8179624ab0095c225</anchor>
      <arglist>(SbName &amp;n, SbBool validIdent=0)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>e0194dab35cf68149363ec635637147a</anchor>
      <arglist>(int &amp;i)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>37eaf39d8c7015810439b78b88b6caf6</anchor>
      <arglist>(unsigned int &amp;i)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>e25bc725ee5f2e106afc56d4dd05f93f</anchor>
      <arglist>(short &amp;s)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>cfab9a73baa1edaf02dac8a6944862db</anchor>
      <arglist>(unsigned short &amp;s)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>8b8edaa764bc0f01d03bdd08c5421823</anchor>
      <arglist>(float &amp;f)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>dcf3f1162ae979a5a410a1460f09dd8a</anchor>
      <arglist>(double &amp;d)</arglist>
    </member>
    <member kind="function">
      <name>readBinaryArray</name>
      <anchor>a24b5d57e230205637dfc475e29afe54</anchor>
      <arglist>(unsigned char *c, int length)</arglist>
    </member>
    <member kind="function">
      <name>readBinaryArray</name>
      <anchor>54ca5cab823c815fc199b7f685d469b4</anchor>
      <arglist>(int32_t *l, int length)</arglist>
    </member>
    <member kind="function">
      <name>readBinaryArray</name>
      <anchor>560111581a01297b7169bc3980dd11be</anchor>
      <arglist>(float *f, int length)</arglist>
    </member>
    <member kind="function">
      <name>readBinaryArray</name>
      <anchor>238e479498baa9e734bb489ab85e285e</anchor>
      <arglist>(double *d, int length)</arglist>
    </member>
    <member kind="function">
      <name>eof</name>
      <anchor>ae2dd97e64b66d394c016c96100807ad</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isFileVRML1</name>
      <anchor>317cb5abf19f4497e03ad18ccfd04303</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isFileVRML2</name>
      <anchor>9fa47e434f95ccf796a8bdffcac240c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>resetFilePointer</name>
      <anchor>587ea9cc13a516915fa0bb88cca2c61c</anchor>
      <arglist>(FILE *fptr)</arglist>
    </member>
    <member kind="function">
      <name>getLocationString</name>
      <anchor>93744cd5f3612d57693ca3ccf841c719</anchor>
      <arglist>(SbString &amp;string) const </arglist>
    </member>
    <member kind="function">
      <name>putBack</name>
      <anchor>581157f03a6367b675fd1a3053d2f27d</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function">
      <name>putBack</name>
      <anchor>a3275a753ea5094c301dfd2b4d6ac118</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <name>addReference</name>
      <anchor>6b848c9b5018faf263cba2ec3f4b8368</anchor>
      <arglist>(const SbName &amp;name, SoBase *base, SbBool addToGlobalDict=1)</arglist>
    </member>
    <member kind="function">
      <name>removeReference</name>
      <anchor>4cefe302eb15818d8479ef280db0ebbb</anchor>
      <arglist>(const SbName &amp;name)</arglist>
    </member>
    <member kind="function">
      <name>findReference</name>
      <anchor>b69667928e7f8b317891590f5fb6486c</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>addDirectoryFirst</name>
      <anchor>cf1c66aeaa773a2b667431f6a7b79e4e</anchor>
      <arglist>(const char *dirName)</arglist>
    </member>
    <member kind="function">
      <name>addDirectoryLast</name>
      <anchor>b87aef010d6cef7fd7e342e0b0c56004</anchor>
      <arglist>(const char *dirName)</arglist>
    </member>
    <member kind="function">
      <name>addEnvDirectoriesFirst</name>
      <anchor>47aba07c24b063b8914411f1507b2598</anchor>
      <arglist>(const char *envVarName, const char *separator=&quot;:\t &quot;)</arglist>
    </member>
    <member kind="function">
      <name>addEnvDirectoriesLast</name>
      <anchor>0ab1c2a23e37a3474495ca9f01e4d5a9</anchor>
      <arglist>(const char *envVarName, const char *separator=&quot;:\t &quot;)</arglist>
    </member>
    <member kind="function">
      <name>removeDirectory</name>
      <anchor>81232f02926735fc6be93225ae22dc6e</anchor>
      <arglist>(const char *dirName)</arglist>
    </member>
    <member kind="function">
      <name>clearDirectories</name>
      <anchor>52cbdc5c911d65c8348314d0fe92ec5f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getDirectories</name>
      <anchor>e39a7ead8ea676ad33786f79478ff504</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>522c7da748cada3332a488e3f0d0a943</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getPathname</name>
      <anchor>f9ea3c3871ac51b220cd6949e8682390</anchor>
      <arglist>(const char *const filename)</arglist>
    </member>
    <member kind="function">
      <name>getPathname</name>
      <anchor>72c37c9264259441d013ae2d82f07a3b</anchor>
      <arglist>(const SbString &amp;s)</arglist>
    </member>
    <member kind="function">
      <name>getBasename</name>
      <anchor>79895ffc6452b899e0c6c559cc615c01</anchor>
      <arglist>(const char *const filename)</arglist>
    </member>
    <member kind="function">
      <name>getBasename</name>
      <anchor>7225ea814b5ce0314c25b9aaeb851aad</anchor>
      <arglist>(const SbString &amp;s)</arglist>
    </member>
    <member kind="function">
      <name>searchForFile</name>
      <anchor>6ee3f1b5422497cc59ec969050a05d1c</anchor>
      <arglist>(const SbString &amp;basename, const SbStringList &amp;directories, const SbStringList &amp;subdirectories)</arglist>
    </member>
    <member kind="function">
      <name>popFile</name>
      <anchor>31ca60fa51f3185a9f68269a5a651761</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setIVVersion</name>
      <anchor>8dd2208b78264e118d0e8050eec0f261</anchor>
      <arglist>(float version)</arglist>
    </member>
    <member kind="function">
      <name>findFile</name>
      <anchor>f720556440547befcb96c56fedcd43b8</anchor>
      <arglist>(const char *fileName, SbString &amp;fullName)</arglist>
    </member>
    <member kind="function">
      <name>initFile</name>
      <anchor>c0ee366f1cdda6ee23e686d62892146f</anchor>
      <arglist>(FILE *newFP, const char *fileName, SbString *fullName, SbBool openedHere, SbDict *refDict=(SbDict *) NULL)</arglist>
    </member>
    <member kind="function">
      <name>checkHeader</name>
      <anchor>118d3782f786eb730c337f02d1cf87d0</anchor>
      <arglist>(SbBool bValidateBufferHeader=0)</arglist>
    </member>
    <member kind="function">
      <name>fromBuffer</name>
      <anchor>2d715bf53144a8264bd8ef187bc99558</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>skipWhiteSpace</name>
      <anchor>311a3e2c6e50fceadf569f4be8a5409b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>freeBytesInBuf</name>
      <anchor>8d1a58c157682bef50e2830889c6e6d4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>readInteger</name>
      <anchor>c1e04e4a618213d1093f2b890cf0a9db</anchor>
      <arglist>(int32_t &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>readUnsignedInteger</name>
      <anchor>e9c9afb18dbe1f4e4c579355eb0131d4</anchor>
      <arglist>(uint32_t &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>readReal</name>
      <anchor>5e52331fcb571c6febcd8f636108e0ba</anchor>
      <arglist>(double &amp;d)</arglist>
    </member>
    <member kind="function">
      <name>readUnsignedIntegerString</name>
      <anchor>3bccd0c02785695f4398264af3764d84</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <name>readDigits</name>
      <anchor>358e925a83795e1fd5131a3cbccde540</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <name>readHexDigits</name>
      <anchor>b5240cab86dd76f573c626fd0c9c66c8</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <name>readChar</name>
      <anchor>2db70a69bd37b3ecfabdcbfe2415f962</anchor>
      <arglist>(char *str, char charToRead)</arglist>
    </member>
    <member kind="function">
      <name>makeRoomInBuf</name>
      <anchor>711dd686d1310b6c9c83b6812bb1bacd</anchor>
      <arglist>(size_t nBytes)</arglist>
    </member>
    <member kind="function">
      <name>convertShort</name>
      <anchor>35ad479e386e0349bd7b95ca365db523</anchor>
      <arglist>(char *from, short *s)</arglist>
    </member>
    <member kind="function">
      <name>convertInt32</name>
      <anchor>3f85a5dd4636f5f6884997c81bb1255f</anchor>
      <arglist>(char *from, int32_t *l)</arglist>
    </member>
    <member kind="function">
      <name>convertFloat</name>
      <anchor>993edbf51f25c038a9ab12b5e1d1a8df</anchor>
      <arglist>(char *from, float *f)</arglist>
    </member>
    <member kind="function">
      <name>convertDouble</name>
      <anchor>12c7f06ddcd60090e1465810dabbfefe</anchor>
      <arglist>(char *from, double *d)</arglist>
    </member>
    <member kind="function">
      <name>convertShortArray</name>
      <anchor>f242d22b935e532793b644e59b9d38cb</anchor>
      <arglist>(char *from, short *to, int len)</arglist>
    </member>
    <member kind="function">
      <name>convertInt32Array</name>
      <anchor>71f898e1e1926f781e5d705444e999f4</anchor>
      <arglist>(char *from, int32_t *to, int len)</arglist>
    </member>
    <member kind="function">
      <name>convertFloatArray</name>
      <anchor>99fdf3aa13fdd31cb34a2dc1e6759091</anchor>
      <arglist>(char *from, float *to, int len)</arglist>
    </member>
    <member kind="function">
      <name>convertDoubleArray</name>
      <anchor>fc1fcf22e4561b47fb2b3c03886cebd4</anchor>
      <arglist>(char *from, double *to, int len)</arglist>
    </member>
    <member kind="function">
      <name>isFileURL</name>
      <anchor>40f74151ef9b1a11cd8989e223f8d607</anchor>
      <arglist>(const char *url)</arglist>
    </member>
    <member kind="function">
      <name>URLToFile</name>
      <anchor>d0133eb4aa2ea9620989607d949de3e7</anchor>
      <arglist>(char *out_buf, const char *in_buf)</arglist>
    </member>
    <member kind="function">
      <name>IsURL</name>
      <anchor>cbea495763e468a62626067cf7363bfa</anchor>
      <arglist>(const char *c_strng)</arglist>
    </member>
    <member kind="function">
      <name>setDirectories</name>
      <anchor>90471ef7420a90b0e94abdd84ae1cb44</anchor>
      <arglist>(SbStringList *dirs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoInt32Element</name>
    <base>SoElement</base>
    <filename>classSoInt32Element.html</filename>
    <member kind="function">
      <name>init</name>
      <anchor>595990f7cc4e2281e0192863abf2c915</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>setElt</name>
      <anchor>8c2dc883660896b2aff89f72de7dacf9</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>056c775d819917b4d3f3e695ebeaa68e</anchor>
      <arglist>(const int index, SoState *const state, SoNode *const node, const int32_t value)</arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>616f8407ec7222158c6d73b039ef8e45</anchor>
      <arglist>(const int index, SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5b14332fa030bd06b773e019414529b2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>a4120c08bb7b405a76e8ec6198837f2c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>2c98df55df68faf1bcdadf89db062ce5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>matches</name>
      <anchor>0213652995df022b9e07c93736fd0890</anchor>
      <arglist>(const SoElement *element) const </arglist>
    </member>
    <member kind="function">
      <name>copyMatchInfo</name>
      <anchor>575ffc5133d689bbc0075c5e60199a3d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>4df0485c1d02d4835b73fe7b430f01ae</anchor>
      <arglist>(FILE *file) const </arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>02d87fb2e27bd17355ffbb05ef106d29</anchor>
      <arglist>(const int index, SoState *const state, const int32_t value)</arglist>
    </member>
    <member kind="function">
      <name>data</name>
      <anchor>d2adf8868e417739697ee385ced135e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoInteraction</name>
    <filename>classSoInteraction.html</filename>
    <member kind="function">
      <name>init</name>
      <anchor>42c9aff2309ba6835c5a7a2171870a86</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoInteractionKit</name>
    <base>SoBaseKit</base>
    <filename>classSoInteractionKit.html</filename>
    <member kind="function">
      <name>geomSeparator</name>
      <anchor>d389a2a3c85e38fe10d5208609341509</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>topSeparator</name>
      <anchor>86771e7adf58574393af13e285af79df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoInteractionKitP</name>
      <anchor>06a47937feecc837dcc4f6be0307daf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>CacheEnabled</name>
      <anchor>6e3b312f001982687c6ead6f70e505b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoInteractionKit</name>
      <anchor>89f2357a132e87e78e0c469eb4b659ea</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoInteractionKit</name>
      <anchor>fa91e31fbc7622aeb2195b5a1d80b865</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>6d4544a296effc848d9ae3cecd581e40</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>b5e20b7d7f7cd62a3b33b0440736dd4d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>0d8afb57de057d6267bd8fa711625452</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>623f7718c9b5894b96257bc791dd98c5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>32fa48aabafa30ada0f4def9360f2542</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>da55d684841bf610d4c5b78efad4800a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>44370edac5674ebe9a01a9eddd24effc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0c6acebe258a443db400482a71203fb8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setPartAsPath</name>
      <anchor>f86aa8628f3966b61997c5a404d1efa2</anchor>
      <arglist>(const SbName &amp;partname, SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>setPartAsDefault</name>
      <anchor>c107e4dffd85665d648bd2d80bb74b11</anchor>
      <arglist>(const SbName &amp;partname, SoNode *node, SbBool onlyifdefault=1)</arglist>
    </member>
    <member kind="function">
      <name>setPartAsDefault</name>
      <anchor>5157e2953d8cf41e7f55bb558872084e</anchor>
      <arglist>(const SbName &amp;partname, const SbName &amp;nodename, SbBool onlyifdefault=1)</arglist>
    </member>
    <member kind="function">
      <name>isPathSurrogateInMySubgraph</name>
      <anchor>c9b4333f22720ae0c2720c8406d8d004</anchor>
      <arglist>(const SoPath *path, SoPath *&amp;pathToOwner, SbName &amp;surrogatename, SoPath *&amp;surrogatepath, SbBool fillargs=1)</arglist>
    </member>
    <member kind="function">
      <name>isPathSurrogateInMySubgraph</name>
      <anchor>e48169cf808f6c01a4d7fbbc44efa955</anchor>
      <arglist>(const SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>setSwitchValue</name>
      <anchor>f522e6bc4f5ec32a6b40a0edf22f954f</anchor>
      <arglist>(SoNode *node, const int newVal)</arglist>
    </member>
    <member kind="function">
      <name>setPart</name>
      <anchor>f09e99ef2289df877b95e4b7f4fe177d</anchor>
      <arglist>(const SbName &amp;partname, SoNode *from)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>6b198096ba44831447dbf3b5bda9c702</anchor>
      <arglist>(const SoFieldContainer *fromFC, SbBool copyConnections)</arglist>
    </member>
    <member kind="function">
      <name>setPart</name>
      <anchor>4e363d704bf0caf9cbfa1ebd36d7818a</anchor>
      <arglist>(const int partNum, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>652933434f6384c41475cc80de6c893f</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>readDefaultParts</name>
      <anchor>9ae7ec2912714a3606285cdcba5ff37b</anchor>
      <arglist>(const char *fileName, const char defaultBuffer[], int defBufSize)</arglist>
    </member>
    <member kind="function">
      <name>setAnyPartAsDefault</name>
      <anchor>a2a10fec829c2ac33c2149822f38f415</anchor>
      <arglist>(const SbName &amp;partname, SoNode *node, SbBool anypart=1, SbBool onlyifdefault=1)</arglist>
    </member>
    <member kind="function">
      <name>setAnyPartAsDefault</name>
      <anchor>0344ba595aaefadb093519f09ef0ca65</anchor>
      <arglist>(const SbName &amp;partname, const SbName &amp;nodename, SbBool anypart=1, SbBool onlyifdefault=1)</arglist>
    </member>
    <member kind="function">
      <name>setAnySurrogatePath</name>
      <anchor>96bd7445318f7a71d5e43dcb9bb90faf</anchor>
      <arglist>(const SbName &amp;name, SoPath *path, SbBool leafcheck=0, SbBool publiccheck=0)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>17be3143d8a5bdc0b0345fb18f993119</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>62921f96d071bbb0a66d1266d34f0ef5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>b50592dc32eb0e91b65fb7cc3e558ed2</anchor>
      <arglist>(void *, SoSensor *)</arglist>
    </member>
    <member kind="function">
      <name>connectSeparatorFields</name>
      <anchor>38e43e95f0f95dc42e5437ffc413328d</anchor>
      <arglist>(SoSeparator *dest, SbBool onOff)</arglist>
    </member>
    <member kind="function">
      <name>renderCaching</name>
      <anchor>0721d44115e135e704899180f9dd1ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>boundingBoxCaching</name>
      <anchor>8003282ce3a8bd37a1642472fcc81135</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>renderCulling</name>
      <anchor>88e5e2140949e46cc6a82aad104a779d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>pickCulling</name>
      <anchor>a630983b94260156b2e8e3d7be5f633a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fieldSensor</name>
      <anchor>0b07989dbb5ee24fef77500fb1248dab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>oldTopSep</name>
      <anchor>27b4f1a6b40cdfd9c5ea94a7d59f8fc8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoInterpolate</name>
    <base>SoEngine</base>
    <filename>classSoInterpolate.html</filename>
    <member kind="function">
      <name>SoInterpolate</name>
      <anchor>d726b3e1a0549ab99ff4beb5aea608c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>~SoInterpolate</name>
      <anchor>4e420749be21671a732698e0f08ba9ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>3d5f3e1e828a15111014e00d4dd00664</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>6652f97664d901bce521c6a342f64aed</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>6d48ee14479e71ccbe4554fa53154b79</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>bdd146fa8a62c8386a98589add552d98</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>58e6c5b79f1958f1a4706f2e434bc606</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>eb63478134ed33b517dadbd7669625ac</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>adbea5691f15be05ff07437b5c81eb30</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClasses</name>
      <anchor>584d9129a85d3fbc3732f5015ca97920</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>alpha</name>
      <anchor>64d875addb45655774a2f3d374644c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>output</name>
      <anchor>2a04c43bd50f973ef36e3a08f0b8887f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoInterpolateFloat</name>
    <base>SoInterpolate</base>
    <filename>classSoInterpolateFloat.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>0946545f9084febce494e3ea59dd07dd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>a3b6ec8be6695a521bea364351c41eee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>8c4522e980f6ef0b543cddd967bf75c8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>7bb8575909f46ad2f34066da23c0f1e9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>bf7366f44d7dfa9505b9cb71ff80c4d6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>0a6a15d499b453e0158725ccb7b57169</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>361480bac363fd2ee66d81caf15755d2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>b26e02e49de5b6c367ca50d01253100d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>input0</name>
      <anchor>f628f78a2234211ac9a75c4552e5f800</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input1</name>
      <anchor>a6feb93d679c1dc9de17af6012fa5039</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoInterpolateRotation</name>
    <base>SoInterpolate</base>
    <filename>classSoInterpolateRotation.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>002d91758f79ab4b92424fd9b513141e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>cceddf128b1127e72391c542e5b32b32</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>847e109a80000b64cb8eb4b7d0f15b24</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>3c28587e81a7d26913a5af8a5129fc88</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>5ec50c66f36c5588ed84960e65ddf1ec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>51b6c2463f3cb17e4c3abc7b3f37827b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>5a7ea8e22f1c9cc9589b8670a70af93c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>fe44ad19f777608bda517d2d0cc6bcc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>input0</name>
      <anchor>b002ae48b7ae593e112a725a52622a3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input1</name>
      <anchor>89966726215c5632020581cfa1ebfa00</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoInterpolateVec2f</name>
    <base>SoInterpolate</base>
    <filename>classSoInterpolateVec2f.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>ec098eb323092f3605a188fc517e65f6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5b275a76998e245b15ab288674903229</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>04f8aa1bc5d32decc66f93c2d433bad5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>a43b55e8208095e773b74428c5c47c77</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>01cebb5f68bf7340b1dc5407cbc6c1c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>9a3d1081bc15390f9a9b75961c564888</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>246fd8aeedf7e6ace4cac2f5c876a84d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d1e58562c0b2021b077271cc83ff11f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>input0</name>
      <anchor>ff7d71f05944eae85edab47ac0263de3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input1</name>
      <anchor>a16b9e7728370631b98f3f3b5e360abe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoInterpolateVec3f</name>
    <base>SoInterpolate</base>
    <filename>classSoInterpolateVec3f.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>140aa01e711272858ff526ecf7cb413a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>b381f1e4736362bc950561557076b1ae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f7e39a93c63a336e64b2bfafd01fc944</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>e9a115c6f630059518025eb82f1a6614</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>623010f35a6c75d44a171aa092b95054</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>2dbdfb8bf0e4d8d82f74980ecd67b1b9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>8392948fb83940ea0cf91db968a8c8fa</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>c5c02ce9354031a29fb42c575a390be4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>input0</name>
      <anchor>9cf5865c8ca8208ecde080182be03326</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input1</name>
      <anchor>c8738d3973ee4680f8b0c4358dab17bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoInterpolateVec4f</name>
    <base>SoInterpolate</base>
    <filename>classSoInterpolateVec4f.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>797309c1325bacb03a1a2889d87f0546</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e36ee50fd6dfa20ce0bf177dc1c7eedc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>bb571ae4688d5cb157b7ee42f16a8da7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>fabf78b27935e40f581bb8a3e190e123</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>b047bdf44c11a4cac2cbe5a406f0e254</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>fcb9df71a9b9b1ae1aaf2ab775697a62</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>a8a9b25becf4aa7fbeb38ca782339bf6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6b28cd9d24a2b908acaa4cf5a6926dea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>input0</name>
      <anchor>09a936ea0f77af64740af6327405729a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input1</name>
      <anchor>2bf9d0754ea505ebbb53602f6d5a6127</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoIntersectionDetectionAction</name>
    <base>SoAction</base>
    <filename>classSoIntersectionDetectionAction.html</filename>
    <member kind="function">
      <name>SoIntersectionVisitationCB</name>
      <anchor>1504121602e5d2c28e14a26ac827cdab</anchor>
      <arglist>(void *closure, const SoPath *where)</arglist>
    </member>
    <member kind="function">
      <name>SoIntersectionFilterCB</name>
      <anchor>60251dc5fc72922cb8f1f277003ed006</anchor>
      <arglist>(void *closure, const SoPath *p1, const SoPath *p2)</arglist>
    </member>
    <member kind="function">
      <name>SoIntersectionCB</name>
      <anchor>ca768354eb5c93a4f672303761fcf27e</anchor>
      <arglist>(void *closure, const SoIntersectingPrimitive *p1, const SoIntersectingPrimitive *p2)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>dfd6193aaa5a820eb06c5f86ebe2c919</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>365b701fcd7ac2b7c1f728c0efa03dfa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>eaacf05db0930feadd36ff98b0048e9d</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>e1fa904640ce674a654d3cc9537ecc3c</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>71770f53fdc854cd6862d40bfa97e13e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>95fd50ca50a4a3c6349bd32eaae7affe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>5249a6fc9593271fd139c670bc2ba2a1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>97eaf13baf13671698519d5efbe61c7b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setIntersectionDetectionEpsilon</name>
      <anchor>5d5dcab038e35d68ef492709e61d3eb2</anchor>
      <arglist>(float epsilon)</arglist>
    </member>
    <member kind="function">
      <name>getIntersectionDetectionEpsilon</name>
      <anchor>9455aaa28bb41f2ffb827d24721d9ce9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setIntersectionEpsilon</name>
      <anchor>326524c74662879ccead63e582c02f00</anchor>
      <arglist>(float epsilon)</arglist>
    </member>
    <member kind="function">
      <name>getIntersectionEpsilon</name>
      <anchor>3e2232327976c6a1c20c6b511bda8365</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setTypeEnabled</name>
      <anchor>aff4034df4e40919e495f8b68271fed2</anchor>
      <arglist>(SoType type, SbBool enable)</arglist>
    </member>
    <member kind="function">
      <name>isTypeEnabled</name>
      <anchor>2232fd80ab5a2cd7dbd2a060000cf319</anchor>
      <arglist>(SoType type, SbBool checkgroups=0) const </arglist>
    </member>
    <member kind="function">
      <name>setManipsEnabled</name>
      <anchor>d7d5f02e7a2b2a444624dafbe8712a60</anchor>
      <arglist>(SbBool enable)</arglist>
    </member>
    <member kind="function">
      <name>isManipsEnabled</name>
      <anchor>64ea2e5380b991c6c70f64c1a09035e4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setDraggersEnabled</name>
      <anchor>dd5f5aa4660bef116803849540787c3d</anchor>
      <arglist>(SbBool enable)</arglist>
    </member>
    <member kind="function">
      <name>isDraggersEnabled</name>
      <anchor>132e2f4fc975737b2f039986c585a961</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setShapeInternalsEnabled</name>
      <anchor>49363d4b06e7c8e4ea05bbf32822696e</anchor>
      <arglist>(SbBool enable)</arglist>
    </member>
    <member kind="function">
      <name>isShapeInternalsEnabled</name>
      <anchor>48b91be5a9f5680be4008717f1cd4d62</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>addVisitationCallback</name>
      <anchor>4a4f8140fb45f7a3fea7c8f105afce21</anchor>
      <arglist>(SoType type, SoIntersectionVisitationCB *cb, void *closure)</arglist>
    </member>
    <member kind="function">
      <name>removeVisitationCallback</name>
      <anchor>9bcb8e8621853c5ae7ced047d1d79442</anchor>
      <arglist>(SoType type, SoIntersectionVisitationCB *cb, void *closure)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>81fa441e145866d7eaa81ddb7d1ebdad</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>789ee88aa501678c6183150e3db487f9</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>b3bdd445e4f5d537605c986c5ed8dd72</anchor>
      <arglist>(const SoPathList &amp;paths, SbBool obeysRules=0)</arglist>
    </member>
    <member kind="function">
      <name>setFilterCallback</name>
      <anchor>d439ca8d2c8d52b1a6df147e016831fd</anchor>
      <arglist>(SoIntersectionFilterCB *cb, void *closure=NULL)</arglist>
    </member>
    <member kind="function">
      <name>addIntersectionCallback</name>
      <anchor>ef6643fd98e970744e6b7d19ede887d6</anchor>
      <arglist>(SoIntersectionCB *cb, void *closure=NULL)</arglist>
    </member>
    <member kind="function">
      <name>removeIntersectionCallback</name>
      <anchor>d8e66f4845cf44d8ef784939b83248d1</anchor>
      <arglist>(SoIntersectionCB *cb, void *closure=NULL)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoJackDragger</name>
    <base>SoDragger</base>
    <filename>classSoJackDragger.html</filename>
    <member kind="function">
      <name>antiSquish</name>
      <anchor>a12908b29a6e7bf9895324da1bf5a4c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator</name>
      <anchor>106ff7beba4cc527e6a31b70821edc2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaler</name>
      <anchor>533a2d3008f3f45d32930dae7011e03a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>surroundScale</name>
      <anchor>dd4aab507d267553f93a210e72c40769</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator</name>
      <anchor>55d06dbf84126b5f98eaee2dfc5a7230</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoJackDragger</name>
      <anchor>40a0af1bbfb5dd6bc322a8573a71ecf9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoJackDragger</name>
      <anchor>433784e9ada3706798ff346144b709cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>89643f04ca5dcd6f8848849d0e619d35</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>79145a548d3f7cefba6eaa1b246e9e9a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>1594664dbd0260ecf61531629001f77e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>14d8fb85cd1f6255ad229390bceedd77</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>f0fa0c98eb890579120bb28d08f7b1aa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>b34fc0280294142050803f670c4c8cef</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>8bf847548f95a90d5b5232fb4f7f359e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>3bcb505610590f9f54a77cbe12765888</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>e00ad0e4a2af40a2a10281e0b69012af</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>47e0499c154a2a2ee59239d00d205c74</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>invalidateSurroundScaleCB</name>
      <anchor>97e16b24546b928d5bdceba6b9da1f01</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>0ff3b7e6201d3801414863ee26ad1b7f</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>b5ac1e2545219ca133686d1a551d3f4f</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>1cede44aeb4e1023918668f8fca296cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>3cb5d256e584c4127ab5dd651e111317</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>cf5f30ef501ef4fe820d804f1eb78759</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotFieldSensor</name>
      <anchor>22bba552f296761dbfaeee8afc417a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translFieldSensor</name>
      <anchor>4ba8328e5cc1a756a4e2d74a169e76b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFieldSensor</name>
      <anchor>8205fe00016ed6187ca174c6e2f3f0a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoJackManip</name>
    <base>SoTransformManip</base>
    <filename>classSoJackManip.html</filename>
    <member kind="function">
      <name>SoJackManip</name>
      <anchor>03410418991c0a1dce034656556f7f1f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoJackManip</name>
      <anchor>5bf49ef73a764c1a5c1a61dfdcdc18eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>16f061deee0b25d7041588bf4920d7a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>9d91e6f12cb4d00ce0c3f8f7a6b6f7c3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>3314f31de7af46faff882fd440ccde36</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f263b6747fa5e3e2fd11a14fdb3ab661</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d524bab68a86239ece4fd451ee472a71</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoKeyboardEvent</name>
    <base>SoButtonEvent</base>
    <filename>classSoKeyboardEvent.html</filename>
    <member kind="function">
      <name>Key</name>
      <anchor>cfea547b82afb8a5963f599d002fd004</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoKeyboardEvent</name>
      <anchor>0342020dc1f7b170d15d813bef5117c1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoKeyboardEvent</name>
      <anchor>dab72607ed498df93552773b24dc0847</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>345b6d775f976f8415d00b42efc853ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>5f4effa54c4f8392a6bb8422329c17ad</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setKey</name>
      <anchor>2606fc66fa41aad673a5ccc2c3b6f213</anchor>
      <arglist>(SoKeyboardEvent::Key key)</arglist>
    </member>
    <member kind="function">
      <name>getKey</name>
      <anchor>8de8e885d61d530420cea6bea6f3c7f6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setPrintableCharacter</name>
      <anchor>6f6fa7ab12631619ca0817df57af066c</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function">
      <name>getPrintableCharacter</name>
      <anchor>6107bfd146adedd464906cf9ab947a85</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isKeyPressEvent</name>
      <anchor>a9a0b33949624db802a43a2914256ed8</anchor>
      <arglist>(const SoEvent *e, SoKeyboardEvent::Key whichKey)</arglist>
    </member>
    <member kind="function">
      <name>isKeyReleaseEvent</name>
      <anchor>cde6cb410a6542b43b12bf951c4599a9</anchor>
      <arglist>(const SoEvent *e, SoKeyboardEvent::Key whichKey)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>11a82a5b8af5ecfc8f803d5fd057883f</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoLabel</name>
    <base>SoNode</base>
    <filename>classSoLabel.html</filename>
    <member kind="function">
      <name>SoLabel</name>
      <anchor>6f34b5a312257aa85a607528d2951f2e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoLabel</name>
      <anchor>187c9fe843d80e2f6b4d60f732f6d323</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>46519e7a1256680e7c19d1a7a377bda7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>ff29e233dba5b0b4c74237f5fcc6a42b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>21120f298f9f968add72e3ee3480b0cc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>b7f2f751b4206cafa6afd09962d15798</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>fee24eeb199b6f4ed7c634a63e9f138a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>label</name>
      <anchor>f863e4baf5a826b22798f29769ccb180</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoLevelOfDetail</name>
    <base>SoGroup</base>
    <filename>classSoLevelOfDetail.html</filename>
    <member kind="function">
      <name>SoLevelOfDetailP</name>
      <anchor>e7db1d73ac9767a74082742b77cbf400</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoLevelOfDetail</name>
      <anchor>cf8248ed4824f5b929ed0d8707fb6f03</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoLevelOfDetail</name>
      <anchor>6f59e3e3dfd96fa8747fc7e95b30bfe8</anchor>
      <arglist>(int numchildren)</arglist>
    </member>
    <member kind="function">
      <name>~SoLevelOfDetail</name>
      <anchor>70ee21eaa2362c87b7deab0ab4605d93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>f7b29ce69a3b71493bcf84a2419d56ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>969fd8b430fc093de38534376517d4ae</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>01566a4a5acf567fbbc5c00b7f9886c7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>5b645f3e33e3bf0afcbc296ea6665346</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7444f860070bf794571d4de45d7ce1bd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>a3418515ebe373a2ee9ba1bdb3d030bb</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>cd9654973ed5f0e4977d6ea3560b129c</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>76c83c04f62677b682d5016f2196bc9f</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>9528c37da71e3e4d43a46ca40906076a</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>5551d24ff11afc1cf38461ac6095ffce</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>d8ac2d8dc905c99db12fe05d1213a993</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>ea5651a9e68d3a2c8b55971da82d1d58</anchor>
      <arglist>(SoNotList *nl)</arglist>
    </member>
    <member kind="function">
      <name>screenArea</name>
      <anchor>e7a8efe0f06472d5ebcfb307475fa836</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoLight</name>
    <base>SoNode</base>
    <filename>classSoLight.html</filename>
    <member kind="function">
      <name>SoLight</name>
      <anchor>966891c619160fd6d40bb8309341630f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoLight</name>
      <anchor>ed349e5268db4c662c368c836210b16b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>4316160f6d1d122c5f8d9d681ac66d26</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>bf2adb02ae2b2ae7e53e05b55d408677</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>43f902236082ff0b08aada4468da2856</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>7db3c0c1b80f96c37b8f2ee7f2a377a4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d05ca127c384f3b95a687d250a6c48ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>dc1d9b76d02f79bff5fc48f67de62746</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>on</name>
      <anchor>a54c2cc474667387a3ef81ebf87e1ad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>intensity</name>
      <anchor>5f50fb5351d88c8166fbf4255636b048</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>color</name>
      <anchor>162dac4d38c438c13ada04fb0a4aac1f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoLightKit</name>
    <base>SoBaseKit</base>
    <filename>classSoLightKit.html</filename>
    <member kind="function">
      <name>icon</name>
      <anchor>b3f618bcee09155ffba149dc53bfc0d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>iconSeparator</name>
      <anchor>c70d43cbbf57fe7ac5aa9430af636594</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>light</name>
      <anchor>54aa8de8f74430c273b878c32baac668</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>transform</name>
      <anchor>bf4d73ced9c382720f516c81710af3de</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>transformGroup</name>
      <anchor>029ceb7f4cc270c6f1113297290d9b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoLightKit</name>
      <anchor>63016b6c7080090276b8acb46380d552</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoLightKit</name>
      <anchor>0cdc221baeb4f8b66be4ac241cad0a27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>3608f85717ce0f1670fdd1ae741d1691</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>cd8e1680ede61cfd24769de96ec9ddbe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>42a275047c0dd5c18590317f2cadec2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>29d25d40fa58a07c651fa184b1db88be</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>e542264f86ed3df729d51d78bba99f57</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>478a769764f2ebc08106bd02ad52fd21</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>0759eaa304efafc716caf6ac84c605cb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>232aaa23ecb2a701b9fff7225ecac48b</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoLightModel</name>
    <base>SoNode</base>
    <filename>classSoLightModel.html</filename>
    <member kind="function">
      <name>Model</name>
      <anchor>50177588212c998d7a37deed8d1321ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ASE_COLOR</name>
      <anchor>50177588212c998d7a37deed8d1321cededbd26dc80d695f4123bae991f0615f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>HONG</name>
      <anchor>50177588212c998d7a37deed8d1321ced8d5b79c998c02dab21af02d9e1ff8af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoLightModel</name>
      <anchor>2d81ca7b2a8b90d5e2761fc3c0bea480</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoLightModel</name>
      <anchor>0b4754ad5dc44f6df678aa72c788edaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>fbe76f2df713659eefbff8275ba9da31</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f99848ca2c26ecd3448c3fb4b42f2245</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>7b693c7e647a59976f9c0cc1251cd371</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>921f30f5c3f62e754df8111489d7b3f1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>4f602971e336d036cb6e77b474aff2d2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>c874a9f52b8bff2750a58cd0580a61ad</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>a5b4cfc96eac8982a974b0f49b9a2e1b</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>5ab42d0a22574c40fca78a05fb8d463e</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>model</name>
      <anchor>6fa4ebe215e5b9aa11757c2aeda6e3bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoLinearProfile</name>
    <base>SoProfile</base>
    <filename>classSoLinearProfile.html</filename>
    <member kind="function">
      <name>SoLinearProfile</name>
      <anchor>4ce4221d272a9fcb7363bb513107ca1e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoLinearProfile</name>
      <anchor>bea63c1a79de045ec248065918cc9dc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>25c952429dfce8dddcbd92b5673a1893</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>0755a7d97f2159a8b4bfeabc78fce91d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>baad97f71ae770b181ffdaa74a11d336</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>6971e3d6ddf40a2bcae45b1f6fbf1753</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>4832274537aca2d380dddaefd3b4a825</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTrimCurve</name>
      <anchor>375370c64d7c72954050c17c870f78f5</anchor>
      <arglist>(SoState *state, int32_t &amp;numpoints, float *&amp;points, int &amp;floatspervec, int32_t &amp;numknots, float *&amp;knotvector)</arglist>
    </member>
    <member kind="function">
      <name>getVertices</name>
      <anchor>623d940677e8d7ebee6b3e9f70913121</anchor>
      <arglist>(SoState *state, int32_t &amp;numvertices, SbVec2f *&amp;vertices)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoLineDetail</name>
    <base>SoDetail</base>
    <filename>classSoLineDetail.html</filename>
    <member kind="function">
      <name>SoLineDetail</name>
      <anchor>c6c1be2107bb0f5c23c563b05135d9bc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoLineDetail</name>
      <anchor>8ea9db2e1e64efd1067bbac55ee8c3a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>b45647b1aeaed19ad17199635dcb79e7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>f5dd4a9f89b65249f789f08dd7610f61</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>b33ff40c4a9c88606878217b3e09b930</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>e80d0217e65c55b967bdac270a4ff679</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPoint0</name>
      <anchor>08e1bb55620b14748035d6ab0722ac6a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPoint1</name>
      <anchor>62aff41d7d952bf7e83a25794d00b9dd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getLineIndex</name>
      <anchor>624baadc961b24fa21b4f021d431308b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPartIndex</name>
      <anchor>d4bfefeeb0d0332384d94c1de544d8ab</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setPoint0</name>
      <anchor>3e8ffd91604b08c62fac9a414337d283</anchor>
      <arglist>(const SoPointDetail *const detail)</arglist>
    </member>
    <member kind="function">
      <name>setPoint1</name>
      <anchor>7f55218a890e8c5cf5756d74bfb5d4c4</anchor>
      <arglist>(const SoPointDetail *const detail)</arglist>
    </member>
    <member kind="function">
      <name>setLineIndex</name>
      <anchor>5806ee856e283ab78977023007ae62b3</anchor>
      <arglist>(const int idx)</arglist>
    </member>
    <member kind="function">
      <name>setPartIndex</name>
      <anchor>f4180975a63e7258ed8146eae7759a0c</anchor>
      <arglist>(const int idx)</arglist>
    </member>
    <member kind="function">
      <name>incLineIndex</name>
      <anchor>965e12055b4a5e3b5d3fdf6769fd8b58</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>incPartIndex</name>
      <anchor>a150217d02157d2a82e2ae00b7450c16</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoLineHighlightRenderAction</name>
    <base>SoGLRenderAction</base>
    <filename>classSoLineHighlightRenderAction.html</filename>
    <member kind="function">
      <name>SoLineHighlightRenderActionP</name>
      <anchor>4c5e2f22da171f62bb039ecd277f0b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoLineHighlightRenderAction</name>
      <anchor>07ae908be3e8dd3387c5e957f4deff90</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoLineHighlightRenderAction</name>
      <anchor>f1bd8ea409f8708bbc8c63bb152cfba2</anchor>
      <arglist>(const SbViewportRegion &amp;viewportregion)</arglist>
    </member>
    <member kind="function">
      <name>~SoLineHighlightRenderAction</name>
      <anchor>c90267d2306ea9534d872473b472d343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>916678f2bba09d6f03566bb9f31a723d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>a7156a2c3acde2033e9bce45132cc28f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>d5f6b24b1a225ffbc5ff3b3ffe9396f0</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>0ca1db02c9b1b3354623d28b1eb687b2</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>6b8ca8fd45a0639ce373170a87ca4883</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>24d88c575fe29310eee0dfcc30dad938</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>f98d6770d534c6b16493e449433f745d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7480987d061d594c3673b67fa9c46573</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>bd49363878b23b1e7b87d81143205970</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>c7d936a233be399ab587b27cabc92e75</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>6d04b2c2cdaa173ba6df52320320ce74</anchor>
      <arglist>(const SoPathList &amp;pathlist, SbBool obeysrules=0)</arglist>
    </member>
    <member kind="function">
      <name>setVisible</name>
      <anchor>68c59c32b168c54d054a884db1ee7c86</anchor>
      <arglist>(const SbBool visible)</arglist>
    </member>
    <member kind="function">
      <name>isVisible</name>
      <anchor>6a8474bbe3ca6996b1c289e84b305644</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setColor</name>
      <anchor>aa1eb076b9855cc41b441956ae16e420</anchor>
      <arglist>(const SbColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <name>getColor</name>
      <anchor>9cb825e25ab24a6318ac39bf87223a80</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setLinePattern</name>
      <anchor>25d5652991ad66b6376e4f57ea3e418e</anchor>
      <arglist>(uint16_t pattern)</arglist>
    </member>
    <member kind="function">
      <name>getLinePattern</name>
      <anchor>02e1a0140bb93f961c3aac83c847cdf1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setLineWidth</name>
      <anchor>002740ae0aa5062e5982825d241121ec</anchor>
      <arglist>(const float width)</arglist>
    </member>
    <member kind="function">
      <name>getLineWidth</name>
      <anchor>d7b97be39b853d654b30182259c9586e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>hlVisible</name>
      <anchor>8a54d4a40f5f2b8c5f9fdf30900d0610</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoLineSet</name>
    <base>SoNonIndexedShape</base>
    <filename>classSoLineSet.html</filename>
    <member kind="function">
      <name>SoLineSet</name>
      <anchor>fef7e42695da00dba3fa75629ae696af</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoLineSet</name>
      <anchor>fda2cff9379ebef592df61c8ae2d7307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>308b6f7c89a2565b307326b008d9f79a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>017e14473e5d17e615318c71c6dc1af9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>374138a484798c328fd57ad75f9a9a18</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>8aa1c1d96f0b3bbe93f9ca137265be7c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>c1c2bec0b2329ac424ba74cc131aef1f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>05acfe6524e1023da77e5f5050495763</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>f16ea2c4f2961cda871f3b0696fd658e</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>460889565e3047a99663d5d5bc847f6e</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>4703d69b9a2cc44584fb2b3b56d3f873</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>88687f5bc294a336143701c5989675ec</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>numVertices</name>
      <anchor>4e1f67ce4fdf86d531659827d089e93d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoLineWidthElement</name>
    <base>SoFloatElement</base>
    <filename>classSoLineWidthElement.html</filename>
    <member kind="function">
      <name>~SoLineWidthElement</name>
      <anchor>53a952cbc57106ceea551ebabc7746db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>cc8cdac90a7204177d32bbb6337a474a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>b70c9b68377af9a84406a0bb2b51478d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>7e9d78e0c5ea39ca479ee0d9cfe5a98a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>76dba0c2f6d87f7347d74baaae374bcb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>046e144d552f1df3ef463b849dde1040</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>15be72431bd91b4fc8f569ff27ad1e5c</anchor>
      <arglist>(SoState *const state, SoNode *const node, const float lineWidth)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>d3233903c73c9799752819cc96305bbf</anchor>
      <arglist>(SoState *const state, const float lineWidth)</arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>833ca083d47eb2bafaf0c4986aa8e67d</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getDefault</name>
      <anchor>5441460299f8b0c39028c47ca3fd7da5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoListener</name>
    <base>SoNode</base>
    <filename>classSoListener.html</filename>
    <member kind="function">
      <name>SoAudioRenderAction</name>
      <anchor>9c4b20586e0209b10b5873853085d751</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoListenerP</name>
      <anchor>e28742cc08b3cfde4b4693e24632070d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoListener</name>
      <anchor>eef624948f01b2988180cb5f6124f3e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>~SoListener</name>
      <anchor>3cb2ffbe56e26f91af5f9e7975ff8be3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>39af89e331d681cb9a4b07e49669955c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>bfc261cbca3b37eb38134b6f0e91d54f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>427149969d16392cc692ddad24fe633d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>07be720bb52c97ae27fab573f6a756d4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>c6f4c1458cbe0ee2af5ef2da4b6497fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>9e633d78de2a744fb83893b31723d22b</anchor>
      <arglist>(class SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>position</name>
      <anchor>f7813178adfb8c270ea677baef414235</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>orientation</name>
      <anchor>1d4be0d33c45cbafba6e64e6caaf7b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>gain</name>
      <anchor>5d306e0699c5517b11d9ec7867b26aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>dopplerVelocity</name>
      <anchor>cfd3d11207598713cb1a74395256aa17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>dopplerFactor</name>
      <anchor>77676bd080ed6eb7a999e1fae2c5ae03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoListenerDopplerElement</name>
    <base>SoReplacedElement</base>
    <filename>classSoListenerDopplerElement.html</filename>
    <member kind="function">
      <name>print</name>
      <anchor>5e6c3da7f240efe80b672e08dedf91d5</anchor>
      <arglist>(FILE *file) const </arglist>
    </member>
    <member kind="function">
      <name>getDopplerVelocity</name>
      <anchor>8ab4c47ab68163f30a4e536daf71fb19</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getDopplerFactor</name>
      <anchor>a3aff9ce8fe64912da4be3e7ca276178</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>~SoListenerDopplerElement</name>
      <anchor>e3a8d75b74ab1afaf219247ff8839023</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>be45c9494173c482bc82b44cec9f0af1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>85d5545bd8f19acd9e3be2bd01c6c13d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>d715d2898af7a1974ea2e92fd82038da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>5fb837bd58441b488dac5abf8a19d0cf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>a2c6c3ddb84770b4fb0eb329b1e66b3a</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>setDopplerVelocity</name>
      <anchor>d04c3de0e656f0e62cb5bab9bda3cad9</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbVec3f &amp;velocity)</arglist>
    </member>
    <member kind="function">
      <name>setDopplerFactor</name>
      <anchor>e710de034f61fcb678463cc73f3e5c7a</anchor>
      <arglist>(SoState *const state, SoNode *const node, float factor)</arglist>
    </member>
    <member kind="function">
      <name>dopplerVelocity</name>
      <anchor>747edb6610a74fae73ae13d2817e9d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>dopplerFactor</name>
      <anchor>e4a3ec82f5a74f1a7264ef8af173ef6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoListenerGainElement</name>
    <base>SoFloatElement</base>
    <filename>classSoListenerGainElement.html</filename>
    <member kind="function">
      <name>~SoListenerGainElement</name>
      <anchor>1e185b2a866be7ad07defe4225f426cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>83ce264f368a53aa8df157181825188f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>d19cf24d111afd40d6e954882a1a1eee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>69751696b65ad2bbca4c1df2a4b89560</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>1f44882b21136a856b59e6006a4c0930</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>c5225f138f579ee5dd6be3ed0de15ab5</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>91871618fb96734edbc6a8fe89c212a2</anchor>
      <arglist>(SoState *const state, SoNode *const node, const float gain)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>d75d153a15e42a5c64f3137cc1f6876f</anchor>
      <arglist>(SoState *const state, const float gain)</arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>519b99e89c5249911988b3e563bd61c8</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoListenerOrientationElement</name>
    <base>SoReplacedElement</base>
    <filename>classSoListenerOrientationElement.html</filename>
    <member kind="function">
      <name>print</name>
      <anchor>5f7b2c99faa21ccc83a00a8ca250a3fd</anchor>
      <arglist>(FILE *file) const </arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>a642ad2099ddd7bd63ac9050f8ec4687</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>setbylistener</name>
      <anchor>56ee35b1bed9a96a2c094524b9cec1e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>~SoListenerOrientationElement</name>
      <anchor>51aa6dc01861044269c52ed901bb11b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>c9d948104c5690e12c0682745e8705fc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>f13fc9a19be2890d4a8e7763d97eb62a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>304dee425056a2e0c9c58760310de03d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7fcaf12f9f18db3611a47f26dd0efd20</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>59660317a73abe3412a84ead70f81684</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>1e46b4ee28109ed5bbda41c96dc1225c</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbRotation &amp;orientation, SbBool setbylistener)</arglist>
    </member>
    <member kind="function">
      <name>isSetByListener</name>
      <anchor>2617c1c137f29c9f6df3234a58230d28</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>orientation</name>
      <anchor>597b8d0652f9bb1b2fdda4371066ccbe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoListenerPositionElement</name>
    <base>SoReplacedElement</base>
    <filename>classSoListenerPositionElement.html</filename>
    <member kind="function">
      <name>print</name>
      <anchor>8ffcd76a34786ba7c3cd4b0731eed770</anchor>
      <arglist>(FILE *file) const </arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>817722b24f86e059cd953b2b3d238be8</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>setbylistener</name>
      <anchor>e05b73c4f797efd615aa31152163ca2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>~SoListenerPositionElement</name>
      <anchor>5e123f32aed622b03fbd89edd1b8cdcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>98d4fc6aac42290bd56d3002c4262bcc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>0e91bc0f5078e5903e4c4d39e3a90dc9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>43bcb142da398bc6bb5801fbe75c4d6d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>ffde3b2e866c262cd7a060f8c9d8d760</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>1cef6932a8651769fea7e149f14ccb10</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>173c5c7a7296ab2a30ce1eea6a7ccd64</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbVec3f &amp;position, SbBool setbylistener)</arglist>
    </member>
    <member kind="function">
      <name>isSetByListener</name>
      <anchor>7ffb04d3e111311978f0efd8e0ef406e</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>position</name>
      <anchor>d9f181282a56bff1b5f3a09074c33118</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoLocateHighlight</name>
    <base>SoSeparator</base>
    <filename>classSoLocateHighlight.html</filename>
    <member kind="function">
      <name>Modes</name>
      <anchor>07d7fc34bdde291be3d47e0ff21786e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>UTO</name>
      <anchor>07d7fc34bdde291be3d47e0ff21786e7c770a44cad3d23b14e7e5242a31ed1a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>N</name>
      <anchor>07d7fc34bdde291be3d47e0ff21786e70bb610d4d6d38faa02bc5aa07c1ff545</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>FF</name>
      <anchor>07d7fc34bdde291be3d47e0ff21786e702ae0f2345e4f2d1a3ff3906318ddd99</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Styles</name>
      <anchor>f07c2e0d9cb1d88f6a025f573a858ee1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>MISSIVE</name>
      <anchor>f07c2e0d9cb1d88f6a025f573a858ee190c934c0202d5351b45725f0e2ac484c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>MISSIVE_DIFFUSE</name>
      <anchor>f07c2e0d9cb1d88f6a025f573a858ee152e67e528e74d278caed68e51b700c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoLocateHighlight</name>
      <anchor>7561749edcd400972b6d67b66a35771e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoLocateHighlight</name>
      <anchor>abe3974684e90c55512a90266855e9ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>91942e0324399405d12ed5f862f31778</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>186eb473e971d1cfd689fa7accd71dd0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>a7d498ff55d1c91882391319eda4d58e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>26b8b8aa338d7f72daa960311c576a1e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>15e81e772bce5f79bed2332fd1b130fa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>da9b05509db135e6059edfee89c3fcda</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderBelowPath</name>
      <anchor>ec147e6d80af69318499840d15740042</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderInPath</name>
      <anchor>bcc6c3834a1a55e733703dd1d1e8b4c4</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>turnOffCurrentHighlight</name>
      <anchor>dfbadf7a2fa35d60c62ed19b2d2dbc99</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>redrawHighlighted</name>
      <anchor>8bb907be65bd427904e3a1085a3f4fae</anchor>
      <arglist>(SoAction *act, SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>color</name>
      <anchor>06f66b7ed507803f15323352f455b871</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>style</name>
      <anchor>4847fc17a7ab36b3044068c2ab4c912b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>mode</name>
      <anchor>b78e6b1f61534b86464e10688db7402a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoLocation2Event</name>
    <base>SoEvent</base>
    <filename>classSoLocation2Event.html</filename>
    <member kind="function">
      <name>~SoLocation2Event</name>
      <anchor>c86547016b7b44cc1e18170225adec6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>be421a205532f7de89b4ee9e240da1dc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>c59e9e64954ddc70b392e9926f8a7e8b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>84c09d98415e1feefa84ff773c080e7f</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoLockManager</name>
    <filename>classSoLockManager.html</filename>
    <member kind="function">
      <name>SetUnlockString</name>
      <anchor>6e4c722c471a8c75d7914f7aa7db5587</anchor>
      <arglist>(char *unlockstr)</arglist>
    </member>
    <member kind="function">
      <name>GetUnlockString</name>
      <anchor>40acc4edc9bfa6c361216dc831c63ad5</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoLOD</name>
    <base>SoGroup</base>
    <filename>classSoLOD.html</filename>
    <member kind="function">
      <name>SoLODP</name>
      <anchor>530ae15e843c7860383592a1d2f5eb5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoLOD</name>
      <anchor>7f4e8a39cb52053fcd2bb6832be1d0f0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoLOD</name>
      <anchor>787c6ff4952c4ff4748f22c9523db3e6</anchor>
      <arglist>(int numchildren)</arglist>
    </member>
    <member kind="function">
      <name>~SoLOD</name>
      <anchor>71c3f37e40b8719d3befc047bfb5a0b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>80ff5f47519a632558994e29b439e4b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>964a239e7798702ec62dd5b768bda310</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>e738093a07c451d1c95961fbcb7b3762</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>d8f7d10d4e4dd2d686fdbe9466067632</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>2f6d865bfab0b6ca0256f13bfd0a16c9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>35ec3a6c4e45fa134612e7e18ba70192</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>b305821f8c4881c2725f848360cf5379</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>8f17f992e60232be0781655c64ed3da5</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderBelowPath</name>
      <anchor>d50b9f1b7a6f756c63aa127f8f9f4da9</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderInPath</name>
      <anchor>8b611718cdb4174bfa53186676f5294c</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderOffPath</name>
      <anchor>4fdaa044ac94669dbdaf5a4b56aae85a</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>5a73fedec6154c5005c81f4205933e85</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>161a68356ed2480d680c4cc794eb9175</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>141bfe227d07641f877cbcf983ef3403</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>6418136457b91c70d5eef5af9599476f</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>c491d2c0249cd26d60eed7b425d116b7</anchor>
      <arglist>(SoNotList *nl)</arglist>
    </member>
    <member kind="function">
      <name>whichToTraverse</name>
      <anchor>73207dffcfd21f9c8985f83916950009</anchor>
      <arglist>(SoAction *)</arglist>
    </member>
    <member kind="function">
      <name>range</name>
      <anchor>a3764dcfeb89e251d1e1b3dde7744253</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>center</name>
      <anchor>8008ee2c4b4bc78499c72df39e711012</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMarkerSet</name>
    <base>SoPointSet</base>
    <filename>classSoMarkerSet.html</filename>
    <member kind="function">
      <name>MarkerType</name>
      <anchor>c86150a74fbb60927ccc5658fed5bfce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoMarkerSet</name>
      <anchor>a5ca5009d19621342afdb23b2b217630</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoMarkerSet</name>
      <anchor>122932a0dc975a71e855c2ccc89c4511</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>43723be9b7ab521a0192f27dc250b789</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>be4fec3f52ec6989b8aba094fad8160b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>fff6c0972e048811b45fcf30a2891e0d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>582dbd3276ff951943064137a49bc798</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>5d399fe220ffc4312822a3724938f0b2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>41e8663ed44c1913ec1171118849eea9</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>e21a7a81ca2852807ffbfc33f86c06c7</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getNumDefinedMarkers</name>
      <anchor>02a350989d0f366a6757f708d6c233a4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMarker</name>
      <anchor>ec72ce8e09f78f83a8c3880620417bf9</anchor>
      <arglist>(int idx, const SbVec2s &amp;size, const unsigned char *bytes, SbBool isLSBFirst=1, SbBool isUpToDown=1)</arglist>
    </member>
    <member kind="function">
      <name>getMarker</name>
      <anchor>a50f939c2f4b71f80aaec48c8b874f75</anchor>
      <arglist>(int idx, SbVec2s &amp;size, const unsigned char *&amp;bytes, SbBool &amp;isLSBFirst)</arglist>
    </member>
    <member kind="function">
      <name>removeMarker</name>
      <anchor>096193bfb95288fb1bf3dadb2651a21c</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <name>isMarkerBitSet</name>
      <anchor>b7b4c9fb49461016c0cd479ba2eaf62b</anchor>
      <arglist>(int idx, int bitNumber)</arglist>
    </member>
    <member kind="function">
      <name>markerIndex</name>
      <anchor>c2865f080490e7b89984a49b61628a43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMaterial</name>
    <base>SoNode</base>
    <filename>classSoMaterial.html</filename>
    <member kind="function">
      <name>SoMaterial</name>
      <anchor>7a6aa33ecf28564f2a87185433432fb7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoMaterial</name>
      <anchor>3b3d8faada9d7d5c407e80b8ad63b49c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>c81e56fa11987f61d832c692d1efe72a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>d8db410e9e255610c70ffa0e68d7b750</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>cb34dd57bad6944abf57d3be73722d27</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>96270753f705710ff7c9e5bfe815751c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>b6acec94aaa2b7869a9d14f526de1c6f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>1cf3b5f81a1c00ed5397b831f4642810</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>9456f2fd23af7e5bb33c4c38bd27025d</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>3931bf40d4162339f639723ccd1b7ede</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>6e432496706c7733b048c3106a669f52</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>ambientColor</name>
      <anchor>929e0e85da6d18cf913b7b43fb466484</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>diffuseColor</name>
      <anchor>acf72121a57569188bca484289bac69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>specularColor</name>
      <anchor>7ce33fb8e13f6f41fa130c30908280e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>emissiveColor</name>
      <anchor>d6bfbb0005031395237fb06e805d3be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>shininess</name>
      <anchor>41b78cf9944b2c332021247b31de830b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>transparency</name>
      <anchor>ac495dffe6ceb9e35103d8f82746164f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMaterialBinding</name>
    <base>SoNode</base>
    <filename>classSoMaterialBinding.html</filename>
    <member kind="function">
      <name>Binding</name>
      <anchor>4baca14ebba9410624ee304b633375cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>VERALL</name>
      <anchor>4baca14ebba9410624ee304b633375cbbe652f14992c8e44e453bccacaba4b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ER_PART</name>
      <anchor>4baca14ebba9410624ee304b633375cb289310fc808d820f99c572ea83b670dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ER_PART_INDEXED</name>
      <anchor>4baca14ebba9410624ee304b633375cbeaa06e2bd45e3aef50c9586b252b6e98</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ER_FACE</name>
      <anchor>4baca14ebba9410624ee304b633375cb0bc18189ef28ac4a4d800d1e142694dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ER_FACE_INDEXED</name>
      <anchor>4baca14ebba9410624ee304b633375cb4de2959fe4a6ca10c563e029939fc598</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ER_VERTEX</name>
      <anchor>4baca14ebba9410624ee304b633375cbf0a28a0664325baf9fdd40925bb3441c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ER_VERTEX_INDEXED</name>
      <anchor>4baca14ebba9410624ee304b633375cb886d81551ae3514ee93d26834e78f789</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EFAULT</name>
      <anchor>4baca14ebba9410624ee304b633375cb3e612cea36c9e8dbf8f0a4f0607bae10</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ONE</name>
      <anchor>4baca14ebba9410624ee304b633375cbac7a25d3f0a04251efc8ffe01632a8e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoMaterialBinding</name>
      <anchor>bf4013195d54ffe89b8fbf7950ef1dba</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoMaterialBinding</name>
      <anchor>1d7962c71412c5a5d13695a7c81717e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>1e56cc6aada9eb320eb2f97e8ec73497</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>5433e926c88d8c03021efff16a8d8b7f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>a72329e2efb52ad969310b52d0aaae19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>cbe1b18906ef5805f64d4ff32f273a56</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>64ca42aef7836372a390bef440650dc4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>a6f3aa1b69641e3f2790f84508554a94</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>2b449fbca03683a1c3b43178296f190f</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>2f59c32c55eebbe7fcd64b9a00c4ad18</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>49075f8514814206834725bc2d248f1e</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>d18887d4a29fdc92a109d6be73d37979</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>254c01f6755298773b85bfacfd433de4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMatrixTransform</name>
    <base>SoTransformation</base>
    <filename>classSoMatrixTransform.html</filename>
    <member kind="function">
      <name>SoMatrixTransform</name>
      <anchor>65f9382ef6ebe7e199056b28b7626730</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoMatrixTransform</name>
      <anchor>5d77725ad9247a7360438aba523b9e16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>82f4956620d8329e49ece349d64cd6f8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>10e05a60f6cc540d7f04f15bf2fb018f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>1db23f92950e62886096ff8a23b5d10b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>0577345481a329720715e7f160e6934f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>84ec1521d3d61be4c6a984675e388fb2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>ad34a9376bbcbb046224f79b4a4d8e88</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>8ffecb35e560f23a44effea3fe1e76d8</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>ae2ab59d1a411437fc7188db56f67402</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>251df83369e0bb83262cd891393c17f3</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>4eeea148677647351c4a38594c307c3f</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>d6920838a25af849c026b0412539190c</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>70f3a2af96bae7df53497a3dc49fbabe</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>matrix</name>
      <anchor>528414bdae6cee21514fc642ce8a2783</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMemoryError</name>
    <base>SoError</base>
    <filename>classSoMemoryError.html</filename>
    <member kind="function">
      <name>setHandlerCallback</name>
      <anchor>eefd500ea0109dbb8bd9383771153686</anchor>
      <arglist>(SoErrorCB *const callback, void *const data)</arglist>
    </member>
    <member kind="function">
      <name>getHandlerCallback</name>
      <anchor>2891945871cab19cfc04bb1d1bb65491</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getHandlerData</name>
      <anchor>6d161a472546b5f714f768205c76d156</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>db79d30a2ed1d42504fe78863f2ca8d7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>8d27cbd0ba4a0fe86c94ff651eef0dbe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>post</name>
      <anchor>6c7cce40d6bc13961b97e230468cbe6f</anchor>
      <arglist>(const char *const whatWasAllocated)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>afe0cd2882530925f36fb8c62a7cfd53</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getHandler</name>
      <anchor>a3c6e03dfd7c6b933053cd4c52b149ba</anchor>
      <arglist>(void *&amp;data) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFBitMask</name>
    <base>SoMFEnum</base>
    <filename>classSoMFBitMask.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>0c374d2ff8946519950c49dbf94767a5</anchor>
      <arglist>(const SoMFBitMask &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>d0a6ecd0a437a1c32fff324b70dc12e6</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>ff422b89eacc6f401c211adce797c768</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5ebaeaa5501124b9a9a74a79eff8ff4d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>34b288f4f2c034759f2040e9c5fe3901</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>2e893d968ae686292d39204f7b92c000</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>dc8a2db509d42f48ab86a6de9338a00c</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>3d7b857296a7617e71fcfed54a8a11b1</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFBool</name>
    <base>SoMField</base>
    <filename>classSoMFBool.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>80e8345313625a0ff3980c633feecfd5</anchor>
      <arglist>(const SoMFBool &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>5ed110db5e7c3fae194885d101bd6349</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>369bb054c9d2e96226166d8a5a84de0e</anchor>
      <arglist>(SbBool value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>c1d8a6fdac09afdabcda825ed3273a2a</anchor>
      <arglist>(const int start, const int num, const SbBool *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>0d17990807cf3d06bf2a63315f7adc0f</anchor>
      <arglist>(const int idx, SbBool value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>7a26e58503256eaa0eb8e715345fbc07</anchor>
      <arglist>(SbBool value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>aab8c613ce16efaa5cf0f3a1bd04bae5</anchor>
      <arglist>(SbBool val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>52e93c23993c6039b68f6dd0b77af0c7</anchor>
      <arglist>(const SoMFBool &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>527e781480ba1fd15bc6f9b78348e4c8</anchor>
      <arglist>(const SoMFBool &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>254d3ec5df7309f9a4d124e051196316</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>d18bdefab438f7424b43c46195c497a5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>42629cd7cf00f020f5b0af3a6d89b50b</anchor>
      <arglist>(const int num, const SbBool *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>103826e0ed93f14ab76c0fd2ee73d050</anchor>
      <arglist>(const int num, SbBool *userdata)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>66068ab91863f8d0edc244f1fe03d065</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>317a5c1a485f920f35a6bd8c0359f08b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>fab6fc93310ca0e370d894fea26feac8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>af0a3b22cb9efb506dc8c8865c01ff56</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>3807f62a06db8bf727dbbf3b1c0dac3c</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>c41d09102750bfeaefe49e5aaeb2d44e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e2e7b2390ec58236c75772f48388a671</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>6b000d18c156593d1a2d3e84dcd9a9e1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>873c4e1e1a2003f90a84881b3dc9edbe</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>bc331465fe91de3e5d8fd1692c93ea1f</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>2bd724dd79d75399bf5fd28e27524782</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>c60a1672458d8c5383d66b6d0c91f617</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>c8e332695ec2fb61646099dcedecd563</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>2ceee04c5cf31e9dba38763d0ad55c98</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFColor</name>
    <base>SoMField</base>
    <filename>classSoMFColor.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>3c5d7bafe924ec63d4c9cf377f772a21</anchor>
      <arglist>(const SoMFColor &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>00a7469d8debbeca8969d4b0981f4555</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>25e48fa52cd9b6260eaafe81997b167c</anchor>
      <arglist>(const SbColor &amp;value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>93eed039720f28cf20c48e73bf00135d</anchor>
      <arglist>(const int start, const int num, const SbColor *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>06663ef84666b41ace6a5f98ed9b6437</anchor>
      <arglist>(const int idx, const SbColor &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>f6bcdf19b6dfa30cc90b318cc28a2027</anchor>
      <arglist>(const SbColor &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>e33f8150f9bc6612dcc270843ec18792</anchor>
      <arglist>(const SbColor &amp;val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>c76afdcc085d6c75e45fa7ff0a062381</anchor>
      <arglist>(const SoMFColor &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>033125a465350d207f7cc6af807a0cad</anchor>
      <arglist>(const SoMFColor &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>35d2169ed10b1a82c5f3f51c45c474ec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>2896e91cd6892f39c8b10664c9b6a211</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>7e1a4b50c8edb1dfc00210eb988964bd</anchor>
      <arglist>(const int num, const float *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>b4f8207d1a297cd0f48e46495b104299</anchor>
      <arglist>(const int num, float *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>0126245eea7bd501d4f6d7e5e486684c</anchor>
      <arglist>(const int num, const SbColor *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>79e3017e746d6cc7416bea185d44a539</anchor>
      <arglist>(const int num, SbColor *userdata)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>8c16cd998d96d5531c3f6e63ce1c1d60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>403b165400e91ae852c25b531795f7ad</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>b5b5eff9190f5b0d8e130c6b3938e9dc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>e3add5faa3a73f80fa472e974a3ffd8f</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>84811e2e723e7ee8f26a9959b2a6b2b7</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>bd2e1c368e2f71fa92951fd47b955e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>c65ef9dfd47205090b7bb298f63d55f0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>784a132eb65b0d00f48db3b89dcf783d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>cd6fecaf27984f402c0f9ebdc85a9380</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>d5ca708bd2fd1480e2958984a1beb7f8</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>15da88b0e801784266b0053d223ac482</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>9b0b4744cac7678949fce2f20a55ba92</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>4e3424b71a6a0dff44eb522ae65f3ad9</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>ca3e8872fcd778070ade3bb35c92c60b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>fcdb18084e92c1476386dbf2a871714a</anchor>
      <arglist>(const int start, const int num, const float rgb[][3])</arglist>
    </member>
    <member kind="function">
      <name>setHSVValues</name>
      <anchor>766cdd48abfe54c32c1f7f1735cf362e</anchor>
      <arglist>(const int start, const int num, const float hsv[][3])</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>a1535424e276f7a74fd2762d7b399c0c</anchor>
      <arglist>(const SbVec3f &amp;vec)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>c16515b51f1240315e322d868663300a</anchor>
      <arglist>(const float r, const float g, const float b)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>a41dd824fdafc0181150c4547190327b</anchor>
      <arglist>(const float rgb[3])</arglist>
    </member>
    <member kind="function">
      <name>setHSVValue</name>
      <anchor>93d030044090df440e3bc02c7e2ffbed</anchor>
      <arglist>(const float h, const float s, const float v)</arglist>
    </member>
    <member kind="function">
      <name>setHSVValue</name>
      <anchor>9739da99fdf2c130bfbbd013103240cc</anchor>
      <arglist>(const float hsv[3])</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>678b0d1564f85fdd5021ce26da241737</anchor>
      <arglist>(const int idx, const SbVec3f &amp;vec)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>71f003d6b2cf56a83976fe7cc328f5a4</anchor>
      <arglist>(const int idx, const float r, const float g, const float b)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>53376500d2aabdf8ecf50f3ab522d341</anchor>
      <arglist>(const int idx, const float rgb[3])</arglist>
    </member>
    <member kind="function">
      <name>set1HSVValue</name>
      <anchor>a8b44a735c71c45b5f3d12755e8c5bf1</anchor>
      <arglist>(const int idx, const float h, const float s, const float v)</arglist>
    </member>
    <member kind="function">
      <name>set1HSVValue</name>
      <anchor>48acbed9c8a500d1762993da9ef3e99b</anchor>
      <arglist>(const int idx, const float hsv[3])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFEngine</name>
    <base>SoMField</base>
    <filename>classSoMFEngine.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>bc3b2b9750188102860216c89d919d22</anchor>
      <arglist>(const SoMFEngine &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>ed6d313e1158f26968acd5d1741b8c54</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>b3079aa80a5749339262ea8bbe08ea40</anchor>
      <arglist>(SoEngine *value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>0f2dd3ea215306dbd4085af5eadfae8b</anchor>
      <arglist>(const int start, const int num, const SoEngine **newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>7d172c184d667a2af128b136470d67db</anchor>
      <arglist>(const int idx, SoEngine *value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>587dad33f958912592be0035750db893</anchor>
      <arglist>(SoEngine *value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>c583796b14311fccca672661a4015568</anchor>
      <arglist>(SoEngine *val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>962e91ecdaa2cb375d92545c49c8e6b0</anchor>
      <arglist>(const SoMFEngine &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>7368af8126b9e151910c0189d6d1f49d</anchor>
      <arglist>(const SoMFEngine &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>c6f9570ff51eb776af4e99c95c6626d9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>d07c2c242cfd4c53aaca5b3763363a8e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>54cc440ea4e34d2684f9b741883aaa9f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>a02cea7754caf1c467d4f591a6f272d1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>7ffe138df8d3d1a73a93e285b780a918</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>40290c8628af8f4e21b0e0c2806245ab</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>67bb028c81eca312c74147bc05b24b32</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>8348a81d0a303868d45ab804fea8bffa</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>6f4e20e3da62b0b26e7ab038b5ef73d2</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>27d37d102aaff5a9aa23a2360d95e4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d72901b9cf4a8910b708970ed5086959</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>56a3685beb623108093f6d5c326ba277</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>d948d34dbe790b3fe88addde938c217b</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>894f51c99b98e632379d661c65812d73</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>3a0354522b6d50180c48f5df1308d8c5</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6b48709c3335d2847bc40a101299d0f1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fixCopy</name>
      <anchor>87f8286c967043661a9fa14301d15bb4</anchor>
      <arglist>(SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>referencesCopy</name>
      <anchor>955125565a225efcbc67eb58551e7dd7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>deleteValues</name>
      <anchor>75e6b106ba70f4408d595cfc7dfcb878</anchor>
      <arglist>(int start, int num=-1)</arglist>
    </member>
    <member kind="function">
      <name>insertSpace</name>
      <anchor>08f8d1ee8b4e04c6fdb242c433470bfd</anchor>
      <arglist>(int start, int num)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFEnum</name>
    <base>SoMField</base>
    <filename>classSoMFEnum.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>8032e90d13e3adb9b7758d0163d87bb8</anchor>
      <arglist>(const SoMFEnum &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>c15d877ccae2eb8897c6b5a4671c03bb</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>50002b8a33bd945b29012cce5d18ac2a</anchor>
      <arglist>(int value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>64015b4ded9ee57b108d6e50527ea586</anchor>
      <arglist>(const int start, const int num, const int *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>57da3c2c8a6b13b7778e90164f2fbdeb</anchor>
      <arglist>(const int idx, int value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>df5e0e4678544d50e0c2bde3e89f6250</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>b839093e979f845e906503b5df671999</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>384d325ffd1aa17e0db3b0f49841c628</anchor>
      <arglist>(const SoMFEnum &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>3b83577ba764f28f8e992ede71ed7207</anchor>
      <arglist>(const SoMFEnum &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>4aec0635a7c16ea1e3915f22d416d3aa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>2cc9e37c88e5e31e0b371a121a204e04</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>9f63fc2c651a5a07d45a08e25438445d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>5bf30f6e94b4c4befea328faccdd0ab0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>6f6b1225b01a0f29c14cf383eb9af30a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>fb39c663b096ff127d5c7ffc0b005aaa</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>6eec417daa4af0dff9e27cfff4518fc5</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>00c04c9b469a5ca2565466ea9fdf3862</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>c7ae3fd3e44c9b50ae7e7cee1fe0c3da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>51a46b986eb0656c1c2993a2fad2387b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>dc2887bc4244f16ee6257c9790820ad5</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>4f456943005be9eaba2228b33743d4b9</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>53c71cad00b22a5c049fe10253b528eb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>6cb259be3f4811babdb69c103f434de3</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>0f27437fe2f07a4ba4594fb5713ae257</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>8b7acccb5a02b340cde71b13d03c9c5a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>67922196ad9c47f2c13e67e311bb9965</anchor>
      <arglist>(const SbName name)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>312494fabb1a0367d22ecb2ad673dc47</anchor>
      <arglist>(const int idx, const SbName name)</arglist>
    </member>
    <member kind="function">
      <name>setEnums</name>
      <anchor>d200588ff41105dbb3d6fa103b13a8b3</anchor>
      <arglist>(const int num, const int *const values, const SbName *const names)</arglist>
    </member>
    <member kind="function">
      <name>getNumEnums</name>
      <anchor>88137a4cb37f5ee2de9e10c3b6420e06</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getEnum</name>
      <anchor>3189d9f946bcfd22699c09ab4eb44503</anchor>
      <arglist>(const int idx, SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>findEnumValue</name>
      <anchor>aea86eee80aae8df585cad9e07bd4935</anchor>
      <arglist>(const SbName &amp;name, int &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>findEnumName</name>
      <anchor>230c3c2866c5abed0375c031d5e54747</anchor>
      <arglist>(int value, const SbName *&amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>legalValuesSet</name>
      <anchor>122b8190d954e78386039ab423e06ca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>numEnums</name>
      <anchor>b94dff3d1e1844355dec114a778a219b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>enumValues</name>
      <anchor>6734f182556874b8aab24aa0626f1e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>enumNames</name>
      <anchor>8bee79790c148e0cdd2a30269bb8b2c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFFloat</name>
    <base>SoMField</base>
    <filename>classSoMFFloat.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>f0e5483de4cea8e3c1dd75d4941b4820</anchor>
      <arglist>(const SoMFFloat &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>e04ce73108e0186ab19fa716e79a7729</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>6672209cbe7be2673deb3070604ac8af</anchor>
      <arglist>(float value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>de226c9d703c9e29db9f8d33300af764</anchor>
      <arglist>(const int start, const int num, const float *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>9a1c73c9df40449fc0dd2dde6350f2c2</anchor>
      <arglist>(const int idx, float value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>eec1da4cdb3dfd28328c88f03374857d</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>e087b7a2462a382b87364f515095470d</anchor>
      <arglist>(float val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>3417cec9647baa0e200d2f958c3172d5</anchor>
      <arglist>(const SoMFFloat &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>e42a5b8c91b26f063a81ea30ca2231e1</anchor>
      <arglist>(const SoMFFloat &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>6b8ca20c43fc071ef014d0f79165a50f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>338594d2f58e85fb558ad6c87769d429</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>85e26c2df2db76e87eb19b9bd8fcb0ae</anchor>
      <arglist>(const int num, const float *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>a02794cc55548408b0aeb54b959351ba</anchor>
      <arglist>(const int num, float *userdata)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>8da15b8b37b752f6e4dd8322f192011c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>64a2b6157e54f952c463ce6396dd9601</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>b059f2fd5e01b4671f08009af7b298b3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>17357b950e9417c1322e05417cb83d0d</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>1d61d909ae805f2ec94ba0fc4eded90e</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>0ac3be740d81b10f102d92e3e74584b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>11a4e83cc28069864fd73dbcb5bcb8b3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>9c212a6954774214c14b1e3698781142</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>ff1552bf3800db8847d4b25924f8182a</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>cedba1460867654ad6a2d634c6732462</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>f923ff0e3576fef514bbef075d191d9c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>e7966e4d07dab65499495a55792094d7</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>a29f5b864e5b1d3ee04e404cf1030eed</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>1ebdff078c7bf582545db3a926c2eab4</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMField</name>
    <base>SoField</base>
    <filename>classSoMField.html</filename>
    <member kind="function">
      <name>setChangedIndex</name>
      <anchor>520519d1b3b5a8d566ba9907e4887ce4</anchor>
      <arglist>(const int changedIndex)</arglist>
    </member>
    <member kind="function">
      <name>setChangedIndices</name>
      <anchor>b2c0f16f46fa679f9b4bcc9d618c9155</anchor>
      <arglist>(const int changedIndex=-1, const int numChangedIndices=0)</arglist>
    </member>
    <member kind="function">
      <name>~SoMField</name>
      <anchor>f07d4320c3c4be08678e3b56a57f4c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>SoMField</name>
      <anchor>687eeb3ee47c6caa258694bb659678f9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e61508a50fe707cde44b812f5ab26bdb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNum</name>
      <anchor>d60b7da6d786926cea93c676ad623977</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setNum</name>
      <anchor>d41785f63d6cf99f4a8bc6fedd55d398</anchor>
      <arglist>(const int num)</arglist>
    </member>
    <member kind="function">
      <name>deleteValues</name>
      <anchor>00b7c3f249ed2333901bb73accc38ad8</anchor>
      <arglist>(int start, int num=-1)</arglist>
    </member>
    <member kind="function">
      <name>insertSpace</name>
      <anchor>b5ef85c5febe2f5faff55f0a29f96d6b</anchor>
      <arglist>(int start, int num)</arglist>
    </member>
    <member kind="function">
      <name>set1</name>
      <anchor>19232a6e205fd3d9088f0c30363cc830</anchor>
      <arglist>(const int index, const char *const valuestring)</arglist>
    </member>
    <member kind="function">
      <name>get1</name>
      <anchor>d0734eb8ec34ecbb633ccffce0f3fb83</anchor>
      <arglist>(const int index, SbString &amp;valuestring)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d0498ba26e061d8d6006a5684b430c88</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>enableDeleteValues</name>
      <anchor>62ce03063996d39fdee9ef36658db21b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isDeleteValuesEnabled</name>
      <anchor>45e64db81b773fe991f5cb5e7be6054f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>makeRoom</name>
      <anchor>c07f6388c27eba3c4be8437e035adc4a</anchor>
      <arglist>(int newnum)</arglist>
    </member>
    <member kind="function">
      <name>createNotRec</name>
      <anchor>66c71f07e8204ba2ee7d7aa8e9cb739b</anchor>
      <arglist>(SoBase *container)</arglist>
    </member>
    <member kind="function">
      <name>num</name>
      <anchor>e7b3a61bcc18b20c5bdf971db5942fad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>maxNum</name>
      <anchor>b9c4ae077d62a4e8a51dc5113d96a869</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>userDataIsUsed</name>
      <anchor>8301aed1f6d683c54e74237b08855e63</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFInt32</name>
    <base>SoMField</base>
    <filename>classSoMFInt32.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>06bfda05d598c6346af8eef1a8fb5158</anchor>
      <arglist>(const SoMFInt32 &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>0a0b4ef92ff2cff6d4245ce1c5785b59</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>b231390a06bf504fbb979618825610d2</anchor>
      <arglist>(int32_t value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>d2897341d688e0de45191bbb83f561ae</anchor>
      <arglist>(const int start, const int num, const int32_t *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>7754a5e29a0d2174a84919c87da52004</anchor>
      <arglist>(const int idx, int32_t value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>61ed18b702aafa5a1a6cde9b8bedffdf</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>f15d67b92a5ef9364d096d88a9cfa24c</anchor>
      <arglist>(int32_t val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>796c97b02b35063c39708cad0112a9f0</anchor>
      <arglist>(const SoMFInt32 &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>e484d6db266d4ac21c54f7ad0fdf7992</anchor>
      <arglist>(const SoMFInt32 &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>994d597b19af492580a8ce408d51c8d4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>d940fb88eff6d582eb1da0a76ee6631c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>d55c4fc82c19c78be1c2e7aca25df3e6</anchor>
      <arglist>(const int num, const int32_t *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>837dba6d7fcd4c1d54812a0ee3d6fa4f</anchor>
      <arglist>(const int num, int32_t *userdata)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>4cde33d85433d0eac274e1c677bceef4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>855dabf47bc7f0635a91ef0a925e936f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>30033f1ff3c9ec0e1a89d085cd618bd2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>5213aeda0ebb107e24eecbad9c90f3e6</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>33b48342bc68f43d9d1dbce7c0f4bdc1</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>130cb19049fd128db06e6c7379207e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ca045eae7dc28207a093150eee1bea78</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>8d24088c157678a2d0bef7c4edc2b133</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>147f9a5ad50e4f779305b33dd84c2236</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>7ca756ea04ac3c7e1babf0ccd1a733e9</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>f8144f90ca9112e782723f32357e45da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>0b712bf8ef3d9cdb99422cb837593a8d</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>54b068aaf0e121edd062f8d78e88c601</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>5e01b8dd53e8b022171aa46ead2dec04</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFMatrix</name>
    <base>SoMField</base>
    <filename>classSoMFMatrix.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>9e1acabe3d7167a0fbc4e5e85f342c19</anchor>
      <arglist>(const SoMFMatrix &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>83f8880a4d36b16827326ad32fe7393e</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>2133651c73940222c9379d1d1b81bcf2</anchor>
      <arglist>(const SbMatrix &amp;value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>6614a06555ce4bdddf86c6adbce027ee</anchor>
      <arglist>(const int start, const int num, const SbMatrix *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>a7d23017c490961cd51ee61f1c6b288c</anchor>
      <arglist>(const int idx, const SbMatrix &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>0438d93c021adac77e874f4fc5dc833b</anchor>
      <arglist>(const SbMatrix &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>e0be3b9e6c8467b06e11be4b664b74b0</anchor>
      <arglist>(const SbMatrix &amp;val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>03aa4a4e1f58c2e702f7a1bb8010a2db</anchor>
      <arglist>(const SoMFMatrix &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>ef63ee750c45cd5cd37cbeae136d5fd1</anchor>
      <arglist>(const SoMFMatrix &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>696ca641e50f2261a6f81ee883b66e2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>2a55ba38e239e5029899fe2df0797360</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>6e5a362afeb5cf28a39bdc53630b0798</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>2c64b2c23374a8d3dfc1f960026cd0bf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>96cd87284292ff1d2e14d3de13783ad2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>23c2d1144d05a3fb11d7483e026acfb4</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>7dda669d63f332fdf2e06226c464b745</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>4eed0033b41fc20a03a78e54f8fd35ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d1294c3c036f0616a1d817e25e27510b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>35d7c4ea89438284c8dacba622c37782</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>5270a64c201a10092ddb0cfe7dfe86f4</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>3126d61bf7f25a7dc2c080213200575e</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>ccdb4f897af56021ffe4a89d63c44289</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>0617ac385fbf74a3c224c91dc9f73358</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>02447c4ca6d03a174b1fa08278301dbd</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>940998340cdac440e5f9e086ac7a5791</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>1c01e374a092ea76203c37daea12e4f7</anchor>
      <arglist>(const float a11, const float a12, const float a13, const float a14, const float a21, const float a22, const float a23, const float a24, const float a31, const float a32, const float a33, const float a34, const float a41, const float a42, const float a43, const float a44)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFName</name>
    <base>SoMField</base>
    <filename>classSoMFName.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>63e6311c42673ddcc5e7cce2f120ef71</anchor>
      <arglist>(const SoMFName &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>e87c90368a468936b5e8502bdb70af28</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>cb46b598f7930b596b8dd398d75540ed</anchor>
      <arglist>(const SbName &amp;value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>69e7de59cbde349ad3ae66d435b3be2e</anchor>
      <arglist>(const int start, const int num, const SbName *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>82744ae2d0afc0cec5dda523c3f347e8</anchor>
      <arglist>(const int idx, const SbName &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>4e3fd71ee22044c6a53b2c835d4834f2</anchor>
      <arglist>(const SbName &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>984c24ea1bacac98d46bc4235187038a</anchor>
      <arglist>(const SbName &amp;val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>27823c002058320c350db99322d82f76</anchor>
      <arglist>(const SoMFName &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>dca046e1c8fab452dcd49453d8114a15</anchor>
      <arglist>(const SoMFName &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>2ce0e86ee72e73471591f443cf111e57</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>bbfcd36ef1093ff2ac12d765fe357fb2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>e3f42cac2c4b9043dc662bd238ff7a87</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>586ef7d5bb69845804232e6dad4529fa</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>f2681ae98af9f4dcb43c857bdb82b71c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>453f35987d47fb25e3ff8b5bcd7a2de9</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>40f87880f28c311af8c31cb12d9a7047</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>be922c42b889116d1092f074b4b966bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>bfb7f5d1ffbe5c6036d7d762c23725c7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>25e5ae83cbe133b65a8d5cbe1ff16eae</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>4774469f3a2b007ac91877f50b133534</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>e6d8e53fa35e0ee8e370279e06af30a6</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>3ff341f6afad02c1ce9bfc0223c7e458</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>8655695c5fe0d59e2c1da8aff5928cbf</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>1c0d921b4a4ad162df624192810bab09</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f8776f7313e927743e20c8c98daeed90</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>cfce262e4c8bd0547f5e4f1fc7a1e014</anchor>
      <arglist>(const int start, const int num, const char *strings[])</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>ab308a625f14a25cc8d1681a47cf7501</anchor>
      <arglist>(const char *str)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFNode</name>
    <base>SoMField</base>
    <filename>classSoMFNode.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>22ae59cd8c0f3d93c0fae6be25e02de2</anchor>
      <arglist>(const SoMFNode &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>5d8a3a959a95cd34716b5b66fcd2fa14</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>e2278a59cca03a4d1053122807e66ebb</anchor>
      <arglist>(SoNode *value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>059aa9b2a2b4fa38558264824620853e</anchor>
      <arglist>(const int start, const int num, const SoNode **newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>4380ae605954695edb8605074bcffa1f</anchor>
      <arglist>(const int idx, SoNode *value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>d376668b78cbc70594691ca54d0aca3a</anchor>
      <arglist>(SoNode *value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>858615c28feb4302ce38c039b63f18b0</anchor>
      <arglist>(SoNode *val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>666efefcb9068aad541716a46b66bf32</anchor>
      <arglist>(const SoMFNode &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>22c65a7bfb874fdec634c22dfaaca32c</anchor>
      <arglist>(const SoMFNode &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>283206117a76e195c36495ed41a935a6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>51e29f576230ea0c6babff50aff4af81</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>0be1065b68effef8c3eb0ca0453612c8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>ea2cd8bd784120fd56f6b11657a175f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>f8df540b151388aac8939362abe34d71</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>63634fe77d9bec51a87eab54ff6469af</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>d49df1927737398452f096886883db2d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>39bc32248568a409f778fbe4dd897f67</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>473f65702d4e8df5df31042f13e46f2d</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>4324861c5024a513bf923017d54f36bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>014d70adedceee9e032b438863f2df02</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>0274529d80e6bde29dac69b2978a045d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>f224f399e0105d4714d17b621013ec94</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>4251e45fd67dfc688758904db9ec5c70</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>d912640910492045232f21b8d1a63cbc</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>29f5a071c37063faf520e6e6ffc5834e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fixCopy</name>
      <anchor>a6e774457d4f3319eb9d21e10721d45e</anchor>
      <arglist>(SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>referencesCopy</name>
      <anchor>e4e230012f02405bcede66a912cc8cec</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>addNode</name>
      <anchor>c6c2b304ac32207a68eaad65e49c2072</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>insertNode</name>
      <anchor>1b59464136a4d213e28f0d632b2358b8</anchor>
      <arglist>(SoNode *node, int idx)</arglist>
    </member>
    <member kind="function">
      <name>getNode</name>
      <anchor>ca0912a9a7df9d50a9f98621938c7ebc</anchor>
      <arglist>(int idx) const </arglist>
    </member>
    <member kind="function">
      <name>findNode</name>
      <anchor>6a3867aa416470c928b1bf40a8f208e0</anchor>
      <arglist>(const SoNode *node) const </arglist>
    </member>
    <member kind="function">
      <name>getNumNodes</name>
      <anchor>ee70ba9d0e7636b1a5da9db21d1ce351</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>removeNode</name>
      <anchor>8bbaaf2392ce500e2fbb67c8591c1691</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <name>removeNode</name>
      <anchor>097e65231abce5a86c10ba0a94571306</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>removeAllNodes</name>
      <anchor>dd346c87741ebbadd0fa7c84997735e6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>replaceNode</name>
      <anchor>a714f0501f11c9dafac9a2bc181d21e8</anchor>
      <arglist>(int idx, SoNode *newnode)</arglist>
    </member>
    <member kind="function">
      <name>replaceNode</name>
      <anchor>ca35cfd957e6592ac6ae942f59770104</anchor>
      <arglist>(SoNode *oldnode, SoNode *newnode)</arglist>
    </member>
    <member kind="function">
      <name>deleteValues</name>
      <anchor>e84bef6b8dfaf807ba08710ad3329842</anchor>
      <arglist>(int start, int num=-1)</arglist>
    </member>
    <member kind="function">
      <name>insertSpace</name>
      <anchor>dac23e1714ca11172daaecc55214a31d</anchor>
      <arglist>(int start, int num)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFPath</name>
    <base>SoMField</base>
    <filename>classSoMFPath.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>2f016895a89e10f1ce1d32f4d79b653c</anchor>
      <arglist>(const SoMFPath &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>3887f6c99f09e5d0fcf1b9e20a6d123c</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>84197dd98e7790f77b6e5904ac08273d</anchor>
      <arglist>(SoPath *value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>e12127529ca66e284632c1be1c102498</anchor>
      <arglist>(const int start, const int num, const SoPath **newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>364021acb8c66f74d7d582cdb286a0de</anchor>
      <arglist>(const int idx, SoPath *value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>10a4a39e8a16f5eb4b342435cc4da214</anchor>
      <arglist>(SoPath *value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>3c688066d1db498aa05b8438f38e5a01</anchor>
      <arglist>(SoPath *val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>16df82641532032848b7157eb3688511</anchor>
      <arglist>(const SoMFPath &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>a4f9b475b8aa33ccf647c01561d323eb</anchor>
      <arglist>(const SoMFPath &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>1cd7a67143f71bc37e92acaf297ba479</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>ca46911da7a60b71e05d83bc25f6c941</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>e8430843bc4631e3279e9fe01efc22aa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>cf40d645e2bbf203bf1c38c49dad8bd3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>4df83c2cccf0413a0ba956694ec4fe6f</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>d5ba3ac1064a33fb2e1aeee17539419b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>b77c040928143300acc69fbb3224587c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>399eb9cad23712911c5d57313e1b8500</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>d4c69d69a1512274133523525a8dacd1</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>70c2736094a04db5fea5cfb6171152df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>7b0a1f6955574c95663e2e4d07b31d5b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>416bacbf017a19f90451dafd0176cc78</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>aa999bb8fbdd5fe71e0038238c3d9187</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>fbe001067e5d52fdf92c1cf56bdcb5da</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>c37df7623fd4045e44d7af595efc48ec</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>001d1757333ea96a7b6ff679a1445dd3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>13ac392429032424273d0e31a165da38</anchor>
      <arglist>(SoNotList *l)</arglist>
    </member>
    <member kind="function">
      <name>fixCopy</name>
      <anchor>1e02d5cb1b7c669a66e6935f15dc5ad9</anchor>
      <arglist>(SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>referencesCopy</name>
      <anchor>c35cfbaea665a398bf678b60b73139f6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>deleteValues</name>
      <anchor>116b84beb9f733a318a47f627e642393</anchor>
      <arglist>(int start, int num=-1)</arglist>
    </member>
    <member kind="function">
      <name>insertSpace</name>
      <anchor>efe9513cb523b93c3f41b9a371ca0ab3</anchor>
      <arglist>(int start, int num)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFPlane</name>
    <base>SoMField</base>
    <filename>classSoMFPlane.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>58ff08ee097f0adef70a13b92bf706a2</anchor>
      <arglist>(const SoMFPlane &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>db29b0ce009f7c28e5375d07ab372ef3</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>5fbd8f1ca56e795d37863b2f86daa9e6</anchor>
      <arglist>(const SbPlane &amp;value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>7be447fa1f09ab729fe5563f0a51a207</anchor>
      <arglist>(const int start, const int num, const SbPlane *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>a12488d9fb6a5ee7e66b13541255bb73</anchor>
      <arglist>(const int idx, const SbPlane &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>cb3a1d727a8a86b49e2fa24e239270fc</anchor>
      <arglist>(const SbPlane &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>ece0f8a62aa0ae158aee113ce309b272</anchor>
      <arglist>(const SbPlane &amp;val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>7d5f48e08905098d1d4a3ad1b51b8733</anchor>
      <arglist>(const SoMFPlane &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>f87b70c17c1b60483f16a9c9ad3c2fc7</anchor>
      <arglist>(const SoMFPlane &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>76b06ddea841741690fbf3399617a9b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>6fd0f94559a44a1a73e5f081fa0a955f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>b68621b652c63091264be27166243e55</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>cfa519d907fd33a3fe3c6a82499ee2a2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>ade769bec67355f530d20a272b908bdd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>5dab09b812a94f2620e18ce747943399</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>079e71990999f58cc1974f68751565b0</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>275fb0c2aec1fbafa8319dec2b35a73a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e2ffa06a6357b6691a62822793a24b7d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>9cf51647aada8130f1994ec3a73a2992</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>9d03dbf56dccd551501b77779a9401f8</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>c029ca09cfa6710e56cd5da733d39e28</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>73a84012fae484681777ce857383ae7b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>62bfe0ed0f52c052a3dee6fe2828af23</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>eeeb60963c0cd0256b5033e30cfdc1b6</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>484bf0ce36240c0328d09ffab063a300</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFRotation</name>
    <base>SoMField</base>
    <filename>classSoMFRotation.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>22171e1c70b9a18a22e0894ee8925ecf</anchor>
      <arglist>(const SoMFRotation &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>46e5085bc433dd8d38df6232e66c994a</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>d239b92e735bf7030de960dad25fa287</anchor>
      <arglist>(const SbRotation &amp;value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>be2d27799e0f86e51e605f12d6ee96dd</anchor>
      <arglist>(const int start, const int num, const SbRotation *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>dd8b2493c5ee8860119f53add9b58f25</anchor>
      <arglist>(const int idx, const SbRotation &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>9b412a2804f70e17415b478a85138c57</anchor>
      <arglist>(const SbRotation &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>a20093e5ae80c0ea34a26b83001a0ce7</anchor>
      <arglist>(const SbRotation &amp;val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>563f6d215e1bcc9759bab3014c183809</anchor>
      <arglist>(const SoMFRotation &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>37f7a34e895c614c54d9630694f56dd4</anchor>
      <arglist>(const SoMFRotation &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>b3dee9d25227936d181b51b00cecdad6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>33fc5fa4e32c435f68d3e86f707448b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>d93642c30b6ab55a49a50cc78ba739d7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>7bda86091f8790e22042f6efc16498b0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>6cc0120764b54eac4b918b093fcfd18f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>c2c9b0f335c8bb0c36df4b18ae82b399</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>76378eac16eb05640060868750944ccd</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>317a30ae9a8b638597ca632cc2b4238f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>91f331d2d6807aabaecd29e3b7359d1b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>59a427f06160e1befa8b1e8791c17878</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>285a92463a139b80a356b330a32ce15f</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>94cecfa626bdd55115a9f531a60c99f1</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>452c82ad69c79ced102db5161b864b60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>16e672367ea143f15db121930df0b80d</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>78761135352a5a23c420a778622d6715</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f3edf6fe3cc1e43163412081e701c2ad</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>71a7433d9ac9e5f99601a355adbece1f</anchor>
      <arglist>(const int start, const int num, const float q[][4])</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>622f28f8e25b79b58274e9bf91f19c90</anchor>
      <arglist>(const int idx, const float q0, const float q1, const float q2, const float q3)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>cc02204c540aadcb8fef65dd163084dd</anchor>
      <arglist>(const int idx, const float q[4])</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>006c0888c69ca41d95d080cd9c560cb4</anchor>
      <arglist>(const int idx, const SbVec3f &amp;axis, const float angle)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>7ffc93da0846d653d06e6aa8c70992a6</anchor>
      <arglist>(const float q0, const float q1, const float q2, const float q3)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>4149bb31f4aac82480fe10e8b600b75d</anchor>
      <arglist>(const float q[4])</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>165dd9bdd77ca53a4edeeba9fced9ef9</anchor>
      <arglist>(const SbVec3f &amp;axis, const float angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFShort</name>
    <base>SoMField</base>
    <filename>classSoMFShort.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>f741eadbd827c3abfbd20f6178a48039</anchor>
      <arglist>(const SoMFShort &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>bb5f613e05930b2b4e6555f75c7d1e6a</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>179d75755f7469071265336d93376896</anchor>
      <arglist>(short value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>f8e44a0b25d86ea0e3d00595e1406f04</anchor>
      <arglist>(const int start, const int num, const short *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>6295f824b9b051e5c1cd04e9f3bee6e9</anchor>
      <arglist>(const int idx, short value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>301c44e97c306008a172964f3dd7d79d</anchor>
      <arglist>(short value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>6cc6ef33b3ddd2ae3442c09708a94ade</anchor>
      <arglist>(short val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>f85d179653faae29d5d2ba413183ed43</anchor>
      <arglist>(const SoMFShort &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>78ce64927a4d80026d7534e990152d38</anchor>
      <arglist>(const SoMFShort &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>155c3a0d37ad04cd140e32fb3ccc689e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>068f5f7e868137f5ee9c17a331b9c54b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>edd7eef5bf25b004e6f78e335379c345</anchor>
      <arglist>(const int num, const short *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>5b7b5e1f0ee796b555014794c74f0dc7</anchor>
      <arglist>(const int num, short *userdata)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>4a84773e9c00b2133347edeed1f0d3f6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>24762175890cf9e4cffa896f6c3eec59</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>2a93a8f4ebe591d072b836dea204e507</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>01d2d4d376c18e2bf20a9eb55abab132</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>b6a2d28a73b0352d89c409f53f8f459d</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>cfba6b8e2f7fab886964ebdc9ad1f5fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>7e8f1a1c6f5ddf925378cdb55d1c78ae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f800a620cb36626eca86b9eb209349a7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>99ed026c34e38d0fa06a9497b06caa8f</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>a2e030facece2a41899a13cc29026f1b</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>95e805f53116c342fbfdf67d5f65a077</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>ec30aa2c92a42f1cbc14f144bffd94fd</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>6d33e8d1ec0e7d9f43fe31e94d1a91ec</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>154172d3e7d2e9c8a3b3109a6fdde780</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFString</name>
    <base>SoMField</base>
    <filename>classSoMFString.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>6393c951869056421e8c11e38610bb38</anchor>
      <arglist>(const SoMFString &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>c36577c8ea2aa6275bf4a09dda62b520</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>e1f44f6bee1fd731570dd1243d0cbb0f</anchor>
      <arglist>(const SbString &amp;value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>5c5a12c0318013cc4832aa5565eaa5b9</anchor>
      <arglist>(const int start, const int num, const SbString *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>479e132bc4f2be328551de5996690073</anchor>
      <arglist>(const int idx, const SbString &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>deb1e523d4db15886fc32db122c052dd</anchor>
      <arglist>(const SbString &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>a20d6a229e4f89668524184c66dddb9d</anchor>
      <arglist>(const SbString &amp;val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>fec59ee184c955521f96a17e0eb6f4f6</anchor>
      <arglist>(const SoMFString &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>48eb2d0f123ad3deb634d5234a2c1010</anchor>
      <arglist>(const SoMFString &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>4bf3c12c1697db733c5cf2a59cfe87a4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>8913f9a5483bc4604f9d2c59f5ba72c3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>d4b2b167967434b812dac652d466b61b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>aa7539c0e5b80b9c4a53a754ad82acfe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>ecfb501e5450fa45bbdcf48a246c180f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>4ec2fd9704bfba4d58a6d78a37eca088</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>e0d5dc58da6858022856a8c6b93f467c</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>c438a2ab89fc1ba413a37e6a6d9e5957</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>446da59527f6b1d96db5668bb733bceb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>543aaed8e33db1d2f431f43e13494f0a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>863bc0911645cd3bdf289f05165d2b45</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>db7bdd53ba08d21ab21550edcb4c90c0</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>41faabae057cb0bdb5ee4cf436ce73d8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>e5e8d8f400bd52b82995bbef96fa8765</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>7804da258d8f4b0c5cadd6d451a48f3a</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>75861635134b52c45e1daa3561b38793</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>6d6fe55ec59600c84574cfaddd232008</anchor>
      <arglist>(const int start, const int num, const char *strings[])</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>c091e85c9620e67cc1944a2e58e41ae1</anchor>
      <arglist>(const char *string)</arglist>
    </member>
    <member kind="function">
      <name>deleteText</name>
      <anchor>067411b95c97e16ebf0930a72f469a8b</anchor>
      <arglist>(const int fromline, const int fromchar, const int toline, const int tochar)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFTime</name>
    <base>SoMField</base>
    <filename>classSoMFTime.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>2ebaea2904a40a2f91a09359d00dd699</anchor>
      <arglist>(const SoMFTime &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>ca918948b8812d4b6ff1041f2842d01c</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>d9f9f10e427c319dcedecb8ab57b4ed3</anchor>
      <arglist>(const SbTime &amp;value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>1dd6a08d4853cae06fab719f160c5a16</anchor>
      <arglist>(const int start, const int num, const SbTime *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>3ef4442504330f51fc4223e2aece7e43</anchor>
      <arglist>(const int idx, const SbTime &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>481e60f36d4dd5acdc5523adfaae8eb9</anchor>
      <arglist>(const SbTime &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>70bca72e3e305dd26a5d47c8df2968fe</anchor>
      <arglist>(const SbTime &amp;val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>919ac410c3449a9849cc84827253f49f</anchor>
      <arglist>(const SoMFTime &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>c0babc661c68e38e6c1d05035dd89c36</anchor>
      <arglist>(const SoMFTime &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>5b64e25298170674bc4a5ebc71f6d692</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>639e0f5cd0b46f55792bf842956f2415</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>514e105e057844a24577d1fd11996850</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>bad5fb302a3f42cb43d81e1ff9e117e4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>6b9d46e347ab94e13ec23d0abf2d0a10</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>ac3bd80dc21a6861ae8765713d322e68</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>8fa9afb874a04592e57a729d0f8d8a6f</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>1579fcee94d8e73f93de348c4d2a707b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ea6650becb644b632cb6a17ac42daf67</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>266d6a49f0b7049f2cfb560b65ad1824</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>5680570e32f3f34b14e5dd91cfd58bd7</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>d864b1e911aa2d6227ee2d3d7cc29ac3</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>c3c765ea48f9710d6e0d7ca981cfdb0f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>662116168a83e9a0bca423b51d40fdc5</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>1639b0b1cace4cb7ff52dcf54d8978bf</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>04d8dc8eade14b6b8052aa3aa1fbdd19</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFUInt32</name>
    <base>SoMField</base>
    <filename>classSoMFUInt32.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>c6cc8fdd21613fe02136bdf919e332d0</anchor>
      <arglist>(const SoMFUInt32 &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>573e6707c900541d3b495380d9d1b1c3</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>87bc0a67408a7681deed3b445556d716</anchor>
      <arglist>(uint32_t value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>208b25739d0c122a78bda2275e739d0f</anchor>
      <arglist>(const int start, const int num, const uint32_t *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>c07931cedeebdb4bcaaf60d9181ff033</anchor>
      <arglist>(const int idx, uint32_t value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>24fb5206392573a957adcc3927ccecaf</anchor>
      <arglist>(uint32_t value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>8f891c57e157fb4b5632119ca397668d</anchor>
      <arglist>(uint32_t val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>380933f5b7ad34b45c9372f1597d632d</anchor>
      <arglist>(const SoMFUInt32 &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>bf6dd53e4d2e034ab402808bba9ad55b</anchor>
      <arglist>(const SoMFUInt32 &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>9205a727551b6259c6a7115f330c6c8f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>b15a10deeef2deda154a9158f06e9468</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>0ff01d0da54e964014bccdc855bee5fc</anchor>
      <arglist>(const int num, const uint32_t *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>95321cc9af70c699f5b261059737eea3</anchor>
      <arglist>(const int num, uint32_t *userdata)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>b3c1b0dd42a3fbaf4386ef4f600b07a2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>a4766d3e26fb1c7683c5bb9fd072aa58</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>7f81dcbea192826d95d125bb19e1cd68</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>ff87045b1eac11ffc964ed2e83d83789</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>9973e42d6bcb4b913cfb3db09ce0e899</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>2a033fd54ac217772e7cf503b3881c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d1c7fcab042227f7ca85b99b034cdd2b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>3b46754eaa833e503a8b1af0641f641f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>26382c1b7dbc9de0ff5b7a848edc0cd1</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>46f8caa057ea7e725916821d8110ca35</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>d242017fecd19338a6b0c36d5c4d9798</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>a1580b213a92438cd7e4b274bc33e0a1</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>df381f18b334c2bc5cfc6cda10a34f82</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0882684569ad6f0545bf426e903f578a</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFUShort</name>
    <base>SoMField</base>
    <filename>classSoMFUShort.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>ccb86fd6d38465dc51ca016899a291a9</anchor>
      <arglist>(const SoMFUShort &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>106e2e846d37da3f097f79f593b37e02</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>2739b967adc0c5d5f9b0d5324539c2fc</anchor>
      <arglist>(unsigned short value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>471607130e962eff839407e03d2cd232</anchor>
      <arglist>(const int start, const int num, const unsigned short *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>5b958c1fde57ffa5658266d79f28cde9</anchor>
      <arglist>(const int idx, unsigned short value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>e9a93aa824767dfccf3b32c96c4ad713</anchor>
      <arglist>(unsigned short value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>16d6214579339bf34064b1316b58f05f</anchor>
      <arglist>(unsigned short val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>abfc844b99d7ca3f2f5cccc9c28b36e6</anchor>
      <arglist>(const SoMFUShort &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>338d1b15a91d7d2dff924737bfd3e8ce</anchor>
      <arglist>(const SoMFUShort &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>09b6c9c8ff6c57342c9de87d46e35c6c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>3444460968da75bc3bd6c65d460758f6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>8a94bacdca5b8d62a1d823b68fdcf7d9</anchor>
      <arglist>(const int num, const unsigned short *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>e82b4a9442f0e52a8660c3110b2b26fd</anchor>
      <arglist>(const int num, unsigned short *userdata)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>301733aed0632dccaea712af0152e52d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>f4204cef012c25970d208b287bbb69ac</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>ba07b3f303e34a28502b165e3791dd06</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>698350b57957b9b6bd5f62176479f1bb</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>62167ec3c0348c0249ade002fb61ba07</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>139df70816362fa5d4a7ff587c65a43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e892ee2ef88293afcd080512aff7733c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>456a80a1b5b9761fe8b5d8a030f7116d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>119da38268c8ec333cc386f42e74e164</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>85f20eb4fcdc72c2a9d02211e4dc9f71</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>82eecb94fef514748449288b82db5a97</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>7358eb7f0e8e8bb6fb86c9708030b646</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>2f28e5145595ef1b9221015224b58b42</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>b02d6ae98d36e79a787ae7db5f4e2296</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFVec2f</name>
    <base>SoMField</base>
    <filename>classSoMFVec2f.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>f568b44b4a49531e65dc8b878df47c8d</anchor>
      <arglist>(const SoMFVec2f &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>b5d89b280c1b2e64ef886ed3c4324b30</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>3987a89dab131642edaee5427696e4c5</anchor>
      <arglist>(const SbVec2f &amp;value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>7744053665ba8cca6b1cd1f8583ad6a4</anchor>
      <arglist>(const int start, const int num, const SbVec2f *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>3d5e2a03111fbe5b38b9b0b3811891f9</anchor>
      <arglist>(const int idx, const SbVec2f &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>a6e82a738228701b9f9636a9dd895b7c</anchor>
      <arglist>(const SbVec2f &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>a4c25e231d42f3b182af531a34ad672f</anchor>
      <arglist>(const SbVec2f &amp;val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>b6102def805bc20670d8612a9d871f08</anchor>
      <arglist>(const SoMFVec2f &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>392c0a505eb64c68b60e64e3659358d6</anchor>
      <arglist>(const SoMFVec2f &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>8676badb629e2f5582c286f3a0ead985</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>8bec494e5acbb99c2f60b4b417843914</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>a96020fedcc288e5ba925f66a3295776</anchor>
      <arglist>(const int num, const SbVec2f *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>114bbc416a725c635b3a5c189556f13a</anchor>
      <arglist>(const int num, SbVec2f *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>7f104c79d972aa01ad7538a65be600bf</anchor>
      <arglist>(const int num, const float *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>05c29da59d7008d80a6881d61691cb42</anchor>
      <arglist>(const int num, float *userdata)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>f8692050f3ff2fa51d8f91fe0944370e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>f3586df597cf3cd2450bb2e54da6093e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>c6d18fa3974b245b2b0ca57cb8092098</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>7668f9add17c1a9c8105eaf4d358cf32</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>bb8adf632a64712a2463369e89f0274a</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>97854c9343be48277aec3fcb397c311b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>94ae42c614ed8b405180acab10efb13c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>e6ed8c4378823cd83d82b969a8218475</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>67fbdf3bc7153d1f0b82c9a8fc076811</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>8f22cd060236b8011a398a49eaeb658d</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>800078641f960e15d60704e1511f2668</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>11d353019e0f6e8b7ff26be15f93674f</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>bbdf4a957c9d92c741ee5c1e9a583207</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>4394a577f6b20425cb02a8e7c60d0802</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>61b3fe5de92417157215ce2469959689</anchor>
      <arglist>(const int start, const int num, const float xy[][2])</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>6d040836362a70663869ab0c77a54a03</anchor>
      <arglist>(const int idx, const float x, const float y)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>272f1f82fcf90ed88674139ac5d4256f</anchor>
      <arglist>(const int idx, const float xy[2])</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>7d917bd3d45d52a0c72822b2cebb76cb</anchor>
      <arglist>(const float x, const float y)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>93d452fcf77f56b645358401e586d25c</anchor>
      <arglist>(const float xy[2])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFVec3f</name>
    <base>SoMField</base>
    <filename>classSoMFVec3f.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>c94d6fd9c850c1c0684e849178585a90</anchor>
      <arglist>(const SoMFVec3f &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>b8fd6356d065f4f4068c988287189163</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>0d70bc1c717465465fff66c3cfad490b</anchor>
      <arglist>(const SbVec3f &amp;value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>bc04fc6ba019b098bf0cab18e6f52fe0</anchor>
      <arglist>(const int start, const int num, const SbVec3f *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>a0cf294531999b0afccd15b85a57312e</anchor>
      <arglist>(const int idx, const SbVec3f &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>969bda695f6624998eb6827d60a8dcf5</anchor>
      <arglist>(const SbVec3f &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>ac116c07b9561c2924ac22851cd6e5f4</anchor>
      <arglist>(const SbVec3f &amp;val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>b4f24074b1a10e059178e004442b5637</anchor>
      <arglist>(const SoMFVec3f &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>4579aac84620190fa4f57d64f9ef1e89</anchor>
      <arglist>(const SoMFVec3f &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>2a3344d6c385a15df1db76b1c04ef97b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>736f9c8ab79e956607405082cf4c1c18</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>4b764d63c99c97ad446a4616e7e1767f</anchor>
      <arglist>(const int num, const float *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>b1706ea186ea66883ca9ccf6b9b0c3d5</anchor>
      <arglist>(const int num, float *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>79f9921dfd9214a45642b3bb0e5c8a03</anchor>
      <arglist>(const int num, const SbVec3f *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>795bc000a628621fba521d03924651eb</anchor>
      <arglist>(const int num, SbVec3f *userdata)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>2bc06cb98d6bc977f156a54991392d60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>20e401c4d474d82b814637643afb1340</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>738d11442ec24404e56a375c3c801c92</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>5ab6f576d5c0a6dbb836a320129b8481</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>00197ca72f99c75e7b0cf93f44c1bce5</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>7f5b7a623e9e9d5615a56c2d5c5d2185</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e7c56a258ad512f9b3304439b1cc4f2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>7cd8de39e0db5888f5879fd1e7e0f795</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>8edba4c15768ffea02b76bde75ae97de</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>1619f1019098da0efd042747666f1207</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>cc92ce1307c4d3702719ceecdce1ba47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>5b88555633190cf119a54e64cc968686</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>bec5730a904b311531f494af743f2c61</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a30d4782a8fd460fdb7b2ade54fd634c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>48260b7205dfb71c52b0a257be7dbd15</anchor>
      <arglist>(const int start, const int num, const float xyz[][3])</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>1a896a3b0ee55fdf7e05e3ad45cc7f04</anchor>
      <arglist>(const int idx, const float x, const float y, const float z)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>4e7c78d0e2280d06697bc0fb5c8cbfcb</anchor>
      <arglist>(const int idx, const float xyz[3])</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>a8d25ebf3d79ab2d6ae292cc6615ae74</anchor>
      <arglist>(const float x, const float y, const float z)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>0a738ac52e1f0b7c527c5c531a549c74</anchor>
      <arglist>(const float xyz[3])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMFVec4f</name>
    <base>SoMField</base>
    <filename>classSoMFVec4f.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>dc9f313928814b4bc642f92b971b97a7</anchor>
      <arglist>(const SoMFVec4f &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>9974ed7d7e35794bf0d89a357580f63e</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>06edc2809c91490896f163949f70b559</anchor>
      <arglist>(const SbVec4f &amp;value, SbBool addifnotfound=0)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>052d8318cdd4436ca463343b2dafe5f6</anchor>
      <arglist>(const int start, const int num, const SbVec4f *newvals)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>92296be208bc514b719c2250ca8cdf80</anchor>
      <arglist>(const int idx, const SbVec4f &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>c7626afb78a0bed718acc5df0f92e3eb</anchor>
      <arglist>(const SbVec4f &amp;value)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>a9df5a2a8f1b4c4664ee334ab511e765</anchor>
      <arglist>(const SbVec4f &amp;val)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>59833aa446b86a416c7b7597eead794f</anchor>
      <arglist>(const SoMFVec4f &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>ad6fdfb72e8d0504f55ad4329a999eae</anchor>
      <arglist>(const SoMFVec4f &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>4e21f52adb1fe46cea84f51edb69f531</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>091bf15746f48839f4f0bc79655be37d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>4233bfba6460a3a9ac5294e9ce603ea2</anchor>
      <arglist>(const int num, const float *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>d7468c8294c60423d558ba3136844da6</anchor>
      <arglist>(const int num, float *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>41b04038e829f3f4a181793c4c027b2c</anchor>
      <arglist>(const int num, const SbVec4f *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPointer</name>
      <anchor>b4b8735886fed1d96d95eb0f5aef391b</anchor>
      <arglist>(const int num, SbVec4f *userdata)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>67f85ea2d557c87fe3da05abe42d2118</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSizeof</name>
      <anchor>d9f64e05a55b1b955e2d297516ba9ebb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>valuesPtr</name>
      <anchor>4fb0f450733993956c39895d60da6cf4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValuesPtr</name>
      <anchor>e8f5e0e24521cfb1cae6ba002fa826c4</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <name>allocValues</name>
      <anchor>f684a04c669d8d9299c0f5ec1b81fb72</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>values</name>
      <anchor>4b227facbbf43dedb9521afb8568ca0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d90ba6993945490fe3f8aeaf97d67aa0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>550d7043f83208cf568fcbff83a407a6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>5764906fdc39e715594b1eacb6d37201</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>7fea91256f800e1e0117498478f37fc0</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>deleteAllValues</name>
      <anchor>8a3e075d3e32296538fc9c07aaa7c1a4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyValue</name>
      <anchor>5133cd3b5d5ffcece274c7d30ccf7a69</anchor>
      <arglist>(int to, int from)</arglist>
    </member>
    <member kind="function">
      <name>getValues</name>
      <anchor>f386b3d99c0b2bb0d0d48935887973f9</anchor>
      <arglist>(const int start) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>4d8642f33ad885912ff553b8cb5f3388</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValues</name>
      <anchor>c67277227e3cf7d56a3d460fc86749c4</anchor>
      <arglist>(const int start, const int num, const float xyzw[][4])</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>0d5c4d0d643835cff06bb23c5e62b022</anchor>
      <arglist>(const int idx, const float x, const float y, const float z, const float w)</arglist>
    </member>
    <member kind="function">
      <name>set1Value</name>
      <anchor>1b595020afbdf73d6cb997c07c889b78</anchor>
      <arglist>(const int idx, const float xyzw[4])</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>29f16379c5b7a686585eb70ae22b880e</anchor>
      <arglist>(const float x, const float y, const float z, const float w)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>b28df8c0a98faaea72e53bc49802062a</anchor>
      <arglist>(const float xyzw[4])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMotion3Event</name>
    <base>SoEvent</base>
    <filename>classSoMotion3Event.html</filename>
    <member kind="function">
      <name>SoMotion3Event</name>
      <anchor>c9bed796981c0cc8aa35cee4c650ada9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoMotion3Event</name>
      <anchor>374a2d684e0d8fc75ae97a1f2081e763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>a56fb5f7ff744c961b3e7fe021a040de</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>214b9516175a0f717dcadb2e489452be</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setTranslation</name>
      <anchor>43af2b05b6cc203b65a33af89b0fe3c6</anchor>
      <arglist>(const SbVec3f &amp;t)</arglist>
    </member>
    <member kind="function">
      <name>getTranslation</name>
      <anchor>0b86bafd5b75c84c4714c17e734076bf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setRotation</name>
      <anchor>d8939e78c9bda17c6df6c58ce4af6bf5</anchor>
      <arglist>(const SbRotation &amp;r)</arglist>
    </member>
    <member kind="function">
      <name>getRotation</name>
      <anchor>0f86d42c648dd8932bf1d67602100e56</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7bb2b7b9366d8fdc327e89d2813ead27</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMouseButtonEvent</name>
    <base>SoButtonEvent</base>
    <filename>classSoMouseButtonEvent.html</filename>
    <member kind="function">
      <name>Button</name>
      <anchor>a573f2c74fcec1448935075c1db558d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NY</name>
      <anchor>a573f2c74fcec1448935075c1db558d159c71efa7703a1c339be504fc7ebaee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>UTTON1</name>
      <anchor>a573f2c74fcec1448935075c1db558d1f5d7769223dd6c689a7b2013a59b8e5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>UTTON2</name>
      <anchor>a573f2c74fcec1448935075c1db558d17d0b1f94abea9762f72c12629136d7e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>UTTON3</name>
      <anchor>a573f2c74fcec1448935075c1db558d10a02611c40652f11d0fd5020acdf80ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>UTTON4</name>
      <anchor>a573f2c74fcec1448935075c1db558d19798425c1259ece21027f5f85ad754ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>UTTON5</name>
      <anchor>a573f2c74fcec1448935075c1db558d1deef57ccd3569c84425e7b9d249b216f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoMouseButtonEvent</name>
      <anchor>a5b1a326508aff5a863143808b915d9c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoMouseButtonEvent</name>
      <anchor>0792710e85d19b8ef15f31ba71ebdf03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ffbd3cdd4e319aa057a0b5613994eff4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>094a35cc45a8ad21f279f9e8b7645a6e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setButton</name>
      <anchor>84e220659cf47dcfb1d0d9e60714806e</anchor>
      <arglist>(SoMouseButtonEvent::Button button)</arglist>
    </member>
    <member kind="function">
      <name>getButton</name>
      <anchor>e336365e6fc988fe24f58041249b6e40</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isButtonPressEvent</name>
      <anchor>dbd1c356a532bdbb69188332acf35811</anchor>
      <arglist>(const SoEvent *e, SoMouseButtonEvent::Button whichButton)</arglist>
    </member>
    <member kind="function">
      <name>isButtonReleaseEvent</name>
      <anchor>513639517e05625f052c1e58715c1044</anchor>
      <arglist>(const SoEvent *e, SoMouseButtonEvent::Button whichButton)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>598706e642897c9fc14672a62faaba18</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoMultipleCopy</name>
    <base>SoGroup</base>
    <filename>classSoMultipleCopy.html</filename>
    <member kind="function">
      <name>SoMultipleCopy</name>
      <anchor>34c646b72c9b8bff9242cf8673b7cb55</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoMultipleCopy</name>
      <anchor>e09770ff7de036dbaf36b6d598afbeaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>8965f17fc0595307469373d99837491c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>eb242880beb21b5a3be70e891a8c1271</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>bdc9d419f4415b45a36c3a8578b1bbfa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>4261013d39f4a0088239c49e682fc5dd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>5a1f7fca1a8c13bfc18b1d61762f1339</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>affectsState</name>
      <anchor>c8ac87e9943fc776bafb3a6ba37eaf11</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>f0f0cfca3dd19c8b4f91b6a792c05412</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>21b3da69d50aa73f909674933fa5fddb</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>1b4846370824f72ed186e3f2aa4f98e0</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>8575343bfb10e20bd7f8b489915b4095</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>c1a47cb6251eb5621e733c6465b0aa37</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>e69117b12321a93950f6ae5e4fe8ee5c</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>134ccc31773694c5b632bc8a838e6516</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>35a75d0e8a96fdc6591c4854be361a9c</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>d9eedea404fe589aa91e9c9aaa8f2e42</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>c9830df82d9d0f1e858a4283da5ac0c0</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>matrix</name>
      <anchor>6ef9f307573e60198d1cce4065bd5870</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNode</name>
    <base>SoFieldContainer</base>
    <filename>classSoNode.html</filename>
    <member kind="function">
      <name>NodeType</name>
      <anchor>faebe871158a88c800ded8c44f583b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NVENTOR</name>
      <anchor>faebe871158a88c800ded8c44f583b09c0831e453c51372e48be01ebf3f75d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>RML1</name>
      <anchor>faebe871158a88c800ded8c44f583b09f394e16a0b4d94ea3336b93f865b65a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>RML2</name>
      <anchor>faebe871158a88c800ded8c44f583b092c12262016b245952c410f20efd7a232</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NVENTOR_1</name>
      <anchor>faebe871158a88c800ded8c44f583b093dd4cd24b703ba3d27c03f27278020e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NVENTOR_2_0</name>
      <anchor>faebe871158a88c800ded8c44f583b097968ab0659fe9def9c8e5bfbb3af4a09</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NVENTOR_2_1</name>
      <anchor>faebe871158a88c800ded8c44f583b09ea47620acfc8e1c86c3913fe309b6710</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NVENTOR_2_5</name>
      <anchor>faebe871158a88c800ded8c44f583b09b07b87a88930896f6f3903544cd9df09</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NVENTOR_2_6</name>
      <anchor>faebe871158a88c800ded8c44f583b09deb3f37f9ac4d872643fab303ceca4bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OIN_1_0</name>
      <anchor>faebe871158a88c800ded8c44f583b09c72b86803610982c730cbba098b3676e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OIN_2_0</name>
      <anchor>faebe871158a88c800ded8c44f583b0937f44b5c6ca9907b4fd06f6fda7bb4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>XTENSION</name>
      <anchor>faebe871158a88c800ded8c44f583b093d8337c6cd271876193dfaad2578edab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoNode</name>
      <anchor>11b3f6d76929bcf86e8f8662e2f8249d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoNode</name>
      <anchor>d7cef6be5ac6b2b2715666e2ba60128d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>setOverride</name>
      <anchor>3c4f3e94bccef0da0f47bcdf64a3e915</anchor>
      <arglist>(const SbBool state)</arglist>
    </member>
    <member kind="function">
      <name>isOverride</name>
      <anchor>34d1d340b3a5e6ae9db5fa2cbb548b35</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getCompatibilityTypes</name>
      <anchor>e749600d30d3f68fab7ec45e43b309f0</anchor>
      <arglist>(const SoType &amp;nodetype)</arglist>
    </member>
    <member kind="function">
      <name>setNodeType</name>
      <anchor>54cb403721ece12f95be66a3baef48a4</anchor>
      <arglist>(const NodeType type)</arglist>
    </member>
    <member kind="function">
      <name>getNodeType</name>
      <anchor>2b4b7b6a405f10d8995bc08c212ab4cf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>aadc39f9964be615f521a09b839f8f75</anchor>
      <arglist>(SbBool copyconnections=0) const </arglist>
    </member>
    <member kind="function">
      <name>affectsState</name>
      <anchor>633c15b6ff9fc56491d686ebe26f96a0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>7f93b0ccc30d3d3283773c1b254b34ca</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>f6fa1a20527192bc6f9d18062322456c</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderBelowPath</name>
      <anchor>a921ef5b5420dfb2ee8a04cc54e4f896</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderInPath</name>
      <anchor>a26545310c0283245e7cab76fc92a5b5</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderOffPath</name>
      <anchor>8cbbfd0f5bcf3e30528ac0bbda826bf6</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>8a49410ba330a0763397753677a874cb</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>4fe80ee53bf8d7821b9b6e91ac20f5c4</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>8a590d9596435ff93fe37cea3aae62ca</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>1f198a845c3f8e8eb313762afd9cb7d5</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>d1acb723f774cdc90eb69f23ac191967</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>cbc15afe5dd825bfaa3c479b51fed98a</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>d45bab33f06902f1735fb05a82dec650</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>dd1c0182576fda3e51ccc9a38dd1b694</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>7c6cf297f3abf3a171fd7492d0fee0e5</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>1e33c6b6ea83d1982ecf2febb903d942</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>grabEventsSetup</name>
      <anchor>f9f97e3ffaeb4e50e1e1a647a1535e47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>grabEventsCleanup</name>
      <anchor>7afcbdc2e142bfa4be450e9124ac93a2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>startNotify</name>
      <anchor>b623a7a6404b31e171869f953113eba7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>19bd6f80f2151fd082ca774068aef239</anchor>
      <arglist>(SoNotList *l)</arglist>
    </member>
    <member kind="function">
      <name>getNodeId</name>
      <anchor>b52fe77c928a116a0f407c3a6c4462cb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>f2df4f667bda1276a0a37f142f227de8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>writeInstance</name>
      <anchor>2c1c9901261a3b02fa99e6b1f7223d3f</anchor>
      <arglist>(SoOutput *out)</arglist>
    </member>
    <member kind="function">
      <name>addToCopyDict</name>
      <anchor>8de5e3402ef14c3a833d59e92eb1b964</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>cf00f4c8151db47b00d508b2e7c2794a</anchor>
      <arglist>(const SoFieldContainer *from, SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>copyThroughConnection</name>
      <anchor>52532c42b16a2a480cf7ddf46d51b62f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>2df9281dab7d9f11bfa765c9ee6565f7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getByName</name>
      <anchor>d8312b743a45ae88013c788b7dd94717</anchor>
      <arglist>(const SbName &amp;name)</arglist>
    </member>
    <member kind="function">
      <name>getByName</name>
      <anchor>28ffc12aa508802ca4c22d4aa91a34dd</anchor>
      <arglist>(const SbName &amp;name, SoNodeList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f0ec1dad7052808e9c495a149a2641bd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClasses</name>
      <anchor>466efa129792e1b14437048a19cb073c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNextNodeId</name>
      <anchor>35e2a892910f5bc75d4ba573afe39ddb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getActionMethodIndex</name>
      <anchor>9e9bc3dd0763fffc3844ba072d8ac43f</anchor>
      <arglist>(const SoType type)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBoxS</name>
      <anchor>91ab391491a486f54f75335f54ad3116</anchor>
      <arglist>(SoAction *action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderS</name>
      <anchor>2c2f47db02ea2726e34c7edcadf72ca9</anchor>
      <arglist>(SoAction *action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>callbackS</name>
      <anchor>c45acbf1842b7b06465bc656b0c3e76d</anchor>
      <arglist>(SoAction *action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>getMatrixS</name>
      <anchor>5b49397f58a5ed03ff3d963725ee0307</anchor>
      <arglist>(SoAction *action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>handleEventS</name>
      <anchor>a08772cfe2d6780d8f35c652ee06bd0b</anchor>
      <arglist>(SoAction *action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>pickS</name>
      <anchor>d2a0c9f57f0520fcf27144783d06fb9d</anchor>
      <arglist>(SoAction *action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>rayPickS</name>
      <anchor>fafa6668c3cdb488ac4aea1175c995c2</anchor>
      <arglist>(SoAction *action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>searchS</name>
      <anchor>0ad7a52381f8278fc7d776bc7ce84877</anchor>
      <arglist>(SoAction *action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>writeS</name>
      <anchor>fdabeb342b514c04baca61377856c782</anchor>
      <arglist>(SoAction *action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>audioRenderS</name>
      <anchor>71c0b51745c06555f8e47ef881f90047</anchor>
      <arglist>(SoAction *action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCountS</name>
      <anchor>be0ca21e17894d0b42765c3925d80421</anchor>
      <arglist>(SoAction *action, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>9a126748a9bc691bc8cc49b8245e5855</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>8b4c4bf288ab4e253021238a188ab66f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setNextActionMethodIndex</name>
      <anchor>6fcaac360719b61121c378ae267ca461</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <name>getNextActionMethodIndex</name>
      <anchor>a9ec668431c27b092c790a728ab32646</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>incNextActionMethodIndex</name>
      <anchor>92fde0337a9037cc06dd084f6c644189</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setCompatibilityTypes</name>
      <anchor>52dab3d7a7ae89422c095a9c3a977e30</anchor>
      <arglist>(const SoType &amp;nodetype, const uint32_t bitmask)</arglist>
    </member>
    <member kind="function">
      <name>uniqueId</name>
      <anchor>11772c4de94b96f7bfe97062293804ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>nextUniqueId</name>
      <anchor>5c1d79535857c5bdede70e4be9227faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>nextActionMethodIndex</name>
      <anchor>9c90bc3168a1b09951ec86ffa6658b4c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNodeEngine</name>
    <base>SoNode</base>
    <filename>classSoNodeEngine.html</filename>
    <member kind="function">
      <name>SoNodeEngine</name>
      <anchor>dc20dc10d53e636f98add5e040008aae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoNodeEngine</name>
      <anchor>a34400d6fe4f3a1eec06201a2c00821b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>82b82312fdb1d4f248357c303e1ccddf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>8fec676615185a7456b90c0add81f9bd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>evaluateWrapper</name>
      <anchor>93cc3e9cbd86d6eaac05cac714d6617f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputs</name>
      <anchor>32f553d015208edea8dff8c9e913cf85</anchor>
      <arglist>(SoEngineOutputList &amp;l) const </arglist>
    </member>
    <member kind="function">
      <name>getOutput</name>
      <anchor>bd9dd32cf1b2449b08603828c77ebe77</anchor>
      <arglist>(const SbName &amp;outputname) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputName</name>
      <anchor>67e8549b5376a02fff985887b85674f7</anchor>
      <arglist>(const SoEngineOutput *output, SbName &amp;outputname) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>a7da66917b1806e0a9b19f7f990e72b5</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function">
      <name>isNotifying</name>
      <anchor>38f6278b40a72c4195556ba11493c3b0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>40413791c6f3f3421183a4e499db195a</anchor>
      <arglist>(SoNotList *nl)</arglist>
    </member>
    <member kind="function">
      <name>writeInstance</name>
      <anchor>37846b3b14d6cc800ed030b6401d7066</anchor>
      <arglist>(SoOutput *out)</arglist>
    </member>
    <member kind="function">
      <name>evaluate</name>
      <anchor>6544608ae91070d36dadeb27b96cc489</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>95569ab1ef2a6821a2277fb549342305</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>inputChanged</name>
      <anchor>3d7f09a6ee88f91a718ef692b47d25f9</anchor>
      <arglist>(SoField *which)</arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>2167067a23c2ee1b695ca07a6d8d88cd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>6c2bbc91b1dcddf720bfa2a286853bb9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>writeOutputTypes</name>
      <anchor>f30c4fefca9bafed14e9eca71390a413</anchor>
      <arglist>(SoOutput *out)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNodeKit</name>
    <filename>classSoNodeKit.html</filename>
    <member kind="function">
      <name>init</name>
      <anchor>008ec3602a4cc4127902c25b29cf55b4</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNodekitCatalog</name>
    <filename>classSoNodekitCatalog.html</filename>
    <member kind="function">
      <name>SoNodekitCatalog</name>
      <anchor>21c68eb07748783a244b0af93e14c1be</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoNodekitCatalog</name>
      <anchor>970382d3ef0253a691ae00e3db6345dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d32a1fe319c0a1e38dceea40f65cbab2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNumEntries</name>
      <anchor>83349d35f6e6647a20f0306727c946f9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPartNumber</name>
      <anchor>070c7f2285a5374ebb4faa4c1e2f7157</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>getName</name>
      <anchor>8ca071b6f6846a58237b4fdef03e2cb3</anchor>
      <arglist>(int part) const </arglist>
    </member>
    <member kind="function">
      <name>getType</name>
      <anchor>39a8eaf198df7c8cd5dc282a189df24b</anchor>
      <arglist>(int part) const </arglist>
    </member>
    <member kind="function">
      <name>getType</name>
      <anchor>644f88d54b0eef62f8949b81c5909cab</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>getDefaultType</name>
      <anchor>456de2da182ec81c6093239cdf3fbd76</anchor>
      <arglist>(int part) const </arglist>
    </member>
    <member kind="function">
      <name>getDefaultType</name>
      <anchor>6b3edee43931b91de43527c8fa745fba</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>isNullByDefault</name>
      <anchor>30b1e5facd296dcd9ef195db6b14da20</anchor>
      <arglist>(int part) const </arglist>
    </member>
    <member kind="function">
      <name>isNullByDefault</name>
      <anchor>3963d257a86d4a2254177f1fec078b34</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>isLeaf</name>
      <anchor>522b0531b1109aab0c1d2053f2a41ecf</anchor>
      <arglist>(int part) const </arglist>
    </member>
    <member kind="function">
      <name>isLeaf</name>
      <anchor>1c5a9ce6dd7c9aca2dca131147b039b0</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>getParentName</name>
      <anchor>7a8796f31734c905f90f38c6727b7bac</anchor>
      <arglist>(int part) const </arglist>
    </member>
    <member kind="function">
      <name>getParentName</name>
      <anchor>f76eee5631600dc0d4d70c66d015c85b</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>getParentPartNumber</name>
      <anchor>cab56d6ab8f82f812fcc9205995a0d42</anchor>
      <arglist>(int part) const </arglist>
    </member>
    <member kind="function">
      <name>getParentPartNumber</name>
      <anchor>76181ee3622cf7ae3f7508cd2785d087</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>getRightSiblingName</name>
      <anchor>1517474c18c79a1174f1540ea9a5d55c</anchor>
      <arglist>(int part) const </arglist>
    </member>
    <member kind="function">
      <name>getRightSiblingName</name>
      <anchor>97db17efd0ffab310ef16f687b6caf83</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>getRightSiblingPartNumber</name>
      <anchor>f147f9123b1fdbb330f883bb34b6ab38</anchor>
      <arglist>(int part) const </arglist>
    </member>
    <member kind="function">
      <name>getRightSiblingPartNumber</name>
      <anchor>3af9c8d0a0849539a1afb4d27125131c</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>isList</name>
      <anchor>dfb367a25a05dbf5b85fdf047bfe1868</anchor>
      <arglist>(int part) const </arglist>
    </member>
    <member kind="function">
      <name>isList</name>
      <anchor>c5ccd4f18152f7eae32105b613f3ca1d</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>getListContainerType</name>
      <anchor>23cf8051c852192920ca750b05902d42</anchor>
      <arglist>(int part) const </arglist>
    </member>
    <member kind="function">
      <name>getListContainerType</name>
      <anchor>c8034493eddcf5eb127a3b74aed5ade1</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>getListItemTypes</name>
      <anchor>26fae404cc31bc44da5138bf426953f7</anchor>
      <arglist>(int part) const </arglist>
    </member>
    <member kind="function">
      <name>getListItemTypes</name>
      <anchor>a60ce2e9f0552409222683614cd42c39</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>isPublic</name>
      <anchor>7a3c44408a3b1d16367c0720088f1045</anchor>
      <arglist>(int part) const </arglist>
    </member>
    <member kind="function">
      <name>isPublic</name>
      <anchor>64fda8180f53f5242b2c8fb3715f5a27</anchor>
      <arglist>(const SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>clone</name>
      <anchor>0a282970cfca5c4e6396a79c2f011fbd</anchor>
      <arglist>(SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>addEntry</name>
      <anchor>493028c3171b482d50ca3584bba9a8ba</anchor>
      <arglist>(const SbName &amp;name, SoType type, SoType defaulttype, SbBool isdefaultnull, const SbName &amp;parent, const SbName &amp;rightsibling, SbBool islist, SoType listcontainertype, SoType listitemtype, SbBool ispublic)</arglist>
    </member>
    <member kind="function">
      <name>addListItemType</name>
      <anchor>9fb2b11ca99ec73969da012b5cfe82be</anchor>
      <arglist>(int part, SoType type)</arglist>
    </member>
    <member kind="function">
      <name>addListItemType</name>
      <anchor>c2d98fbceba797420f2e63d9617e6085</anchor>
      <arglist>(const SbName &amp;name, SoType type)</arglist>
    </member>
    <member kind="function">
      <name>narrowTypes</name>
      <anchor>b6a65d84a8beabe1b65a5cf13ac91872</anchor>
      <arglist>(const SbName &amp;name, SoType newtype, SoType newdefaulttype)</arglist>
    </member>
    <member kind="function">
      <name>setNullByDefault</name>
      <anchor>d73c8908fe7f5b0de0bc9f71d42564aa</anchor>
      <arglist>(const SbName &amp;name, SbBool nullbydefault)</arglist>
    </member>
    <member kind="function">
      <name>recursiveSearch</name>
      <anchor>ce86fd62b00bde426e1d08c04e127922</anchor>
      <arglist>(int part, const SbName &amp;name, SoTypeList *checked) const </arglist>
    </member>
    <member kind="function">
      <name>printCheck</name>
      <anchor>482be783903441ede04cb75846bcb7b0</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNodeKitDetail</name>
    <base>SoDetail</base>
    <filename>classSoNodeKitDetail.html</filename>
    <member kind="function">
      <name>SoNodeKitDetail</name>
      <anchor>49132125e7e3dfa2d7fc26eb695682c3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoNodeKitDetail</name>
      <anchor>cf9d418177da275c3811ad2824005a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>63b36f121db008fcb42217350303337f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>fe378f8bdbbd48a09884786b93f2e11a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>66b6edd7e32993d730796cd6a12a89b5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>5710b998c8e8a4b0c2babbfea4e3ee64</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setNodeKit</name>
      <anchor>830758a446544062fcab1f99a1311ef2</anchor>
      <arglist>(SoBaseKit *kit)</arglist>
    </member>
    <member kind="function">
      <name>getNodeKit</name>
      <anchor>dea024fe1dbe7bc8790ac37b30594c20</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setPart</name>
      <anchor>4a2185278f05521b4c6df1d4211c98bd</anchor>
      <arglist>(SoNode *part)</arglist>
    </member>
    <member kind="function">
      <name>getPart</name>
      <anchor>1c0c242caa266f634a0ce7cd28f5bdf2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setPartName</name>
      <anchor>70114e163304ff318e0b39e20c2f35f4</anchor>
      <arglist>(const SbName &amp;name)</arglist>
    </member>
    <member kind="function">
      <name>getPartName</name>
      <anchor>b3e6915e5760813091be092c15e3439b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>myNodeKit</name>
      <anchor>051399a0a9872fb2b88911efab580ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>myPart</name>
      <anchor>72ccacfcc796d1f9c7114f545ca06c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>myPartName</name>
      <anchor>0b4edca9bdd6c91883b664126fbf8c7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNodeKitListPart</name>
    <base>SoNode</base>
    <filename>classSoNodeKitListPart.html</filename>
    <member kind="function">
      <name>SoBaseKit</name>
      <anchor>4a039ab151ab163a4cf64407685bb652</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoNodeKitListPart</name>
      <anchor>acbae6fc4f8b1b7955f09caffd70d926</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoNodeKitListPart</name>
      <anchor>b4eb32286233f77774a6fee952da3df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>2a08792cb5adf13a5702ad14f412f4b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>caa9d68c314e92d6297ff70ca5ea6b93</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>c1f49adaffba50c47d513d27c3f1be93</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>87683f4ff39264b8807f5113748d340b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0cd616cd4955ab9de69b465ae130a4d0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getContainerType</name>
      <anchor>0b42aa5f7f65aa04b55a4f48a2eff178</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setContainerType</name>
      <anchor>8de46164a424a023bbfb9d0a90bd92c2</anchor>
      <arglist>(SoType newContainerType)</arglist>
    </member>
    <member kind="function">
      <name>getChildTypes</name>
      <anchor>c6b3e7427a98afc138fe8a492daa72f9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>addChildType</name>
      <anchor>2c3732febfb0ff5925c6838ea692f970</anchor>
      <arglist>(SoType typeToAdd)</arglist>
    </member>
    <member kind="function">
      <name>isTypePermitted</name>
      <anchor>357620a0a06419f9d12837ed445f4a9c</anchor>
      <arglist>(SoType typeToCheck) const </arglist>
    </member>
    <member kind="function">
      <name>isChildPermitted</name>
      <anchor>f148c67db28fa255a08307a578761baa</anchor>
      <arglist>(const SoNode *child) const </arglist>
    </member>
    <member kind="function">
      <name>containerSet</name>
      <anchor>741334835fea98314e6f353110c18619</anchor>
      <arglist>(const char *fieldDataString)</arglist>
    </member>
    <member kind="function">
      <name>lockTypes</name>
      <anchor>9030b9bc899b21c18a22da8e3d9f62e1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isTypeLocked</name>
      <anchor>0ef89d7cbdd9e0b830e49aaf3ffa477b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>addChild</name>
      <anchor>36b268c13ffd50300622651f5244b670</anchor>
      <arglist>(SoNode *child)</arglist>
    </member>
    <member kind="function">
      <name>insertChild</name>
      <anchor>f1f0f063fec383b29d0c1242645fb3df</anchor>
      <arglist>(SoNode *child, int childIndex)</arglist>
    </member>
    <member kind="function">
      <name>getChild</name>
      <anchor>2c7f4ef03d2d27cdcf797e5582821df6</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <name>findChild</name>
      <anchor>6432e75bc0a84d43e49ce05d1a2ae8eb</anchor>
      <arglist>(SoNode *child) const </arglist>
    </member>
    <member kind="function">
      <name>getNumChildren</name>
      <anchor>eb130f374d6a5b02daabad2b03106661</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>removeChild</name>
      <anchor>84b4e5324bbccce6200b5b1c3f91d171</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <name>removeChild</name>
      <anchor>18f010bdb9d39c26e2202fe2bc92ff8f</anchor>
      <arglist>(SoNode *child)</arglist>
    </member>
    <member kind="function">
      <name>replaceChild</name>
      <anchor>a4a3602b1db8118470ce841c250bf454</anchor>
      <arglist>(int index, SoNode *newChild)</arglist>
    </member>
    <member kind="function">
      <name>replaceChild</name>
      <anchor>e4dba51f7db4d829bc6be7dfce106d75</anchor>
      <arglist>(SoNode *oldChild, SoNode *newChild)</arglist>
    </member>
    <member kind="function">
      <name>affectsState</name>
      <anchor>606b1d5c08c51722a5168e8c8507835a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>21bbd14f2a1b4f0f3d82fef87c783c15</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>12a8d1e89f0c085b5c759960821e99c2</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>8ebf8666820a3531f5c367cc38a3102a</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>4dfd89d3309e12de0fe8426139961ad6</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>0f320f0d1261b44e4887aec53d85d818</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>1919e9b426683c55803656956ea4d17f</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>a53ce751cc4b32a4ca6b6d128329baea</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>326afbd057ac629955e73cbe0a4296cc</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>802b0df26423d87f8fcf1ad25844d1cd</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>e09ad69fda1d8ab919b7fc46bb11ea21</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getContainerNode</name>
      <anchor>a3408947d50597027d39e21d0a565e63</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>a7272605375093b31d7751b4ca1029d9</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>3ced3ddfc281731f112d1e75e7aa894f</anchor>
      <arglist>(const SoFieldContainer *fromFC, SbBool copyConnections)</arglist>
    </member>
    <member kind="function">
      <name>children</name>
      <anchor>e8e7deb66408ebf7bf2c0169c709090d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNodeKitPath</name>
    <base>SoPath</base>
    <filename>classSoNodeKitPath.html</filename>
    <member kind="function">
      <name>SoNodeKitPath</name>
      <anchor>b1419322991dc95ed80ebada53ee6e76</anchor>
      <arglist>(const int approxLength)</arglist>
    </member>
    <member kind="function">
      <name>~SoNodeKitPath</name>
      <anchor>0f2b9d6aff34f7fec50b5aebe27fe554</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getLength</name>
      <anchor>624f01f0eb5dba0b226b51b42092818f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTail</name>
      <anchor>88d954807186707f08380257028bf59e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNode</name>
      <anchor>05a011e9f733636f81f58bd2d0c86116</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>getNodeFromTail</name>
      <anchor>86f2567ca9bde15d2b82d12dd8088848</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>truncate</name>
      <anchor>aa7b5e960e4c751a0e5a7c3c8f75c1fe</anchor>
      <arglist>(const int length)</arglist>
    </member>
    <member kind="function">
      <name>pop</name>
      <anchor>e3218e321593b0f509f91e9ca2d8de56</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>1c944ad83c395fb0cbb6c4248cbe663b</anchor>
      <arglist>(SoBaseKit *childKit)</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>0409937d795db96449e75dd65fb1647f</anchor>
      <arglist>(const SoNodeKitPath *fromPath)</arglist>
    </member>
    <member kind="function">
      <name>containsNode</name>
      <anchor>a4501d314bcab9d2e7faba127b0b646c</anchor>
      <arglist>(SoBaseKit *node) const </arglist>
    </member>
    <member kind="function">
      <name>findFork</name>
      <anchor>aacc3e802668f4772f39d20e646fc233</anchor>
      <arglist>(const SoNodeKitPath *path) const </arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>8067b1878ec9a4848bb132f84b37c66f</anchor>
      <arglist>(const SoNodeKitPath &amp;p1, const SoNodeKitPath &amp;p2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNodeList</name>
    <base>SoBaseList</base>
    <filename>classSoNodeList.html</filename>
    <member kind="function">
      <name>SoNodeList</name>
      <anchor>5f8cdd4e4ce2f1751e860e2198bc6fac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoNodeList</name>
      <anchor>6adf637a2512b3ddf507afc4bce993c9</anchor>
      <arglist>(const int size)</arglist>
    </member>
    <member kind="function">
      <name>SoNodeList</name>
      <anchor>44082be280e347a8d20e65f951ca8cb8</anchor>
      <arglist>(const SoNodeList &amp;nl)</arglist>
    </member>
    <member kind="function">
      <name>~SoNodeList</name>
      <anchor>23d4ce6d0bd24a1fc8cf1b76a2a5613b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>75c055cb0e44b6faad0f0fe01688a752</anchor>
      <arglist>(SoNode *const ptr)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>ff6941aea09bc6fc309f25e05b598b95</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>65ecde95f13d4bc0a7a8aaba759748ca</anchor>
      <arglist>(const SoNodeList &amp;nl)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNodeSensor</name>
    <base>SoDataSensor</base>
    <filename>classSoNodeSensor.html</filename>
    <member kind="function">
      <name>SoNodeSensor</name>
      <anchor>9d61b97e7ff67f105b99ddffe15ef6ff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoNodeSensor</name>
      <anchor>e6c56d5dff51e67fcabfa81f4abbf79a</anchor>
      <arglist>(SoSensorCB *func, void *data)</arglist>
    </member>
    <member kind="function">
      <name>~SoNodeSensor</name>
      <anchor>9caae5b30dc282640355b8abf38fe4f7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>attach</name>
      <anchor>cb9a4d413e1e2aa081ffaf3988e3f6bd</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>detach</name>
      <anchor>bb62ded137dcd724e2dec2364f65d7ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getAttachedNode</name>
      <anchor>7378a6f5d98d34dc6a90dbfb89f0399a</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNonIndexedShape</name>
    <base>SoVertexShape</base>
    <filename>classSoNonIndexedShape.html</filename>
    <member kind="function">
      <name>SoNonIndexedShape</name>
      <anchor>4df486dabe1f6b641aeb955929143bb8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoNonIndexedShape</name>
      <anchor>0a6515b77c92c712cd1946069afcc401</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e250ed0ee60bfd0c1e558c9d683e48e9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>60386064f3f1564bd9eb9fa52cd50a84</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>747c9287cc6324c33d206c8170292a5c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>fd1b0d0f9bf1140f3c0d6f2fbba63f30</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>b6a695e7372342fba7dc9092586b8ed5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>computeCoordBBox</name>
      <anchor>c0f5401db8637a471033a396d1c9b8ce</anchor>
      <arglist>(SoAction *action, int numVertices, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>fixNumVerticesPointers</name>
      <anchor>0da554ed3ce34c09a4bc8e9ae5eb5d3f</anchor>
      <arglist>(SoState *state, const int32_t *&amp;start, const int32_t *&amp;end, int32_t *dummyarray) const </arglist>
    </member>
    <member kind="function">
      <name>startIndex</name>
      <anchor>6275da4770ffe6cc94f590278c08eca4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNormal</name>
    <base>SoNode</base>
    <filename>classSoNormal.html</filename>
    <member kind="function">
      <name>SoNormal</name>
      <anchor>1fa1719b1d6cd9004af09733923c7cb0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoNormal</name>
      <anchor>a340cf2f69e722be4c5d5b1172ef027a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>7f541c0b5851526d20bf5e57a19bc68a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>cd5e5d38c5cd99e4ecb0be85c093cd1e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>3fe6a4c9bff8ef318164d3c00bcf8e8c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>cdc9270529d42bb2d54503f3b5f783ed</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>4ddb50f5e346f7f17c42ee6b3b50a2e9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>891f460ab012b5087ebb49f368aabf6d</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>49dc995bfe81720fb30040a5fbbfa72e</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>d5832fc6eb4a17282a9d02cc0eb0fb38</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>a31eeccc607846914e08261b2858f2f2</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>b06b674a8585b9d68614b9e665ef7f6f</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>vector</name>
      <anchor>12fc0a7b16402d6f0b15ad76a22d2ce0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNormalBinding</name>
    <base>SoNode</base>
    <filename>classSoNormalBinding.html</filename>
    <member kind="function">
      <name>Binding</name>
      <anchor>bac17246b7bc2d3be7f03d80556cba91</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoNormalBinding</name>
      <anchor>cce671ebf57f859f9db9d5c6ab41657a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoNormalBinding</name>
      <anchor>9abda22da81e8e173ecafecaa198782b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>41ab6a3ed210b19b307439eb368eee5e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>fc9b1c7df130f1e97ccefd95c6e7de86</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>3c39929e42fafc030b835a93a3c54a67</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>2ed6eadc16d06eea95f028d3915fcf61</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f97711cacd4e04fa1fb6c25d3c6ad565</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>02178113ee957f5ef763063fb5c2298b</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>f3a3ee4e7131230ffb61fe40d85fc95b</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>6cd99b236d196df8658f5de04bdec759</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>008c60dcc7a8ba84053c8afb9a4decd9</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>6d88dc3f5145224fc8b63da4a52d0bc4</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>32ab1c5b7435fbbfeb7789cd4d020c97</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>db4d71cf892697e6b4d308f55561e3b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNotList</name>
    <filename>classSoNotList.html</filename>
    <member kind="function">
      <name>SoNotList</name>
      <anchor>92b6e203e1252283476e266a91230a89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoNotList</name>
      <anchor>82f4a011075ee5183376392a315ae57f</anchor>
      <arglist>(const SoNotList *nl)</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>268385c91be6b0a91b06d2e82b6fca1c</anchor>
      <arglist>(SoNotRec *const rec)</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>bfe693b2c5574417ea58a7fdc16a3e84</anchor>
      <arglist>(SoNotRec *const rec, SoField *const field)</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>f0491f9aa4d32754bb75f38d2d10b310</anchor>
      <arglist>(SoNotRec *const rec, SoEngineOutput *const engineout)</arglist>
    </member>
    <member kind="function">
      <name>setLastType</name>
      <anchor>3ce00891aad5c25824fe4433db95a70d</anchor>
      <arglist>(const SoNotRec::Type type)</arglist>
    </member>
    <member kind="function">
      <name>getFirstRec</name>
      <anchor>0a3c2c0ecda9981eaca64d7761d102da</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getLastRec</name>
      <anchor>3b27698a942e817b0082f192c7d62b3a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFirstRecAtNode</name>
      <anchor>47f7b933ac71766a6df17bb73553e832</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getLastField</name>
      <anchor>918124d59ca16142eeb51352c7596af5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getLastEngineOutput</name>
      <anchor>53428710d92a1984bdacf4af1e64b1a5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTimeStamp</name>
      <anchor>f063297d2471cd597c589a3dd0d787c7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>03bb0f89adc157aa9c4ee286175c8b0e</anchor>
      <arglist>(FILE *const file=stdout) const </arglist>
    </member>
    <member kind="function">
      <name>getPreviousNodeRec</name>
      <anchor>ef9c0035068b5481db7410024e493248</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPreviousField</name>
      <anchor>f3b61729eb27afdaa21fe26c22e9d0d2</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNotRec</name>
    <filename>classSoNotRec.html</filename>
    <member kind="function">
      <name>getOperationType</name>
      <anchor>d35076f6fdf93e83e23f769c2e7e3e8b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getIndex</name>
      <anchor>44e9abc94f1dba94fc1191781b890565</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldNumIndices</name>
      <anchor>8cf6539a0aa632903fb45e733055f0fe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getGroupChild</name>
      <anchor>b6c9a75d5f4405e779a3afbbeb401300</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setOperationType</name>
      <anchor>d2d6a10ce1ac269686e6ae44962fa2bc</anchor>
      <arglist>(const SoNotRec::OperationType operationType)</arglist>
    </member>
    <member kind="function">
      <name>setIndex</name>
      <anchor>2bce1bc7e2e833ff082f7102e5b3ff34</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>setFieldNumIndices</name>
      <anchor>fc819a176de192baff71510a17491ee4</anchor>
      <arglist>(const int fieldNumIndices)</arglist>
    </member>
    <member kind="function">
      <name>setGroupChild</name>
      <anchor>edeaf66b48f6960bed9c1d600d708478</anchor>
      <arglist>(const SoBase *const)</arglist>
    </member>
    <member kind="function">
      <name>Type</name>
      <anchor>3dadebf7917d6722df3485e7971ca25c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoNotRec</name>
      <anchor>baaeeb7bd0ae0083307e5c81e7dfeef0</anchor>
      <arglist>(SoBase *const notifbase)</arglist>
    </member>
    <member kind="function">
      <name>setType</name>
      <anchor>eeb4a71b12daa304cf54adf2f140ab97</anchor>
      <arglist>(const SoNotRec::Type type)</arglist>
    </member>
    <member kind="function">
      <name>getBase</name>
      <anchor>0f71f7948adee96a719503e3953db80b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getType</name>
      <anchor>87ebe9e28fc97a58cec8bba6b71b6ec1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPrevious</name>
      <anchor>a15e07fd64b62411960e6df69a28d643</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setPrevious</name>
      <anchor>af269e73def30a2ee874d442f4510006</anchor>
      <arglist>(const SoNotRec *const prev)</arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>99efd001681ca211e7104c70a07d6e46</anchor>
      <arglist>(FILE *const file) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNurbsCurve</name>
    <base>SoShape</base>
    <filename>classSoNurbsCurve.html</filename>
    <member kind="function">
      <name>SoNurbsCurveP</name>
      <anchor>bd6a2d0b7a8916f0945489fcbde511d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoNurbsCurve</name>
      <anchor>707a7407ccfa95a9218c0886f309314f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoNurbsCurve</name>
      <anchor>77f9603cb196b4e25df65fa5827c24b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ad82256a3e7459452a30532064316b06</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>8af6b8d9c8edf4323beef5086960aed7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>3f92a932716c8daab04c36a77c8d3990</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>fada574a05d5804e97637b24152f1af9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d365d23995f932a1aa5a1ea87e1fd58e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>773d2d1e2bdd31cc85c8517712f55484</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>6658f84a649650ae5e0cc09f04b719d8</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>00ad5547d179320656cdc8ea180f9a51</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>1cecea20fd238b26d9663dd3ee072637</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>sendPrimitive</name>
      <anchor>39b034fa1f0868a1a861c58f7d55b1a8</anchor>
      <arglist>(SoAction *, SoPrimitiveVertex *)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>810f685acd09413fb856e36ba2a81f9c</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>1a3c902f86997bb9cf320366140eba13</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>createLineSegmentDetail</name>
      <anchor>e4288e967530d715321e144be343b528</anchor>
      <arglist>(SoRayPickAction *action, const SoPrimitiveVertex *v1, const SoPrimitiveVertex *v2, SoPickedPoint *pp)</arglist>
    </member>
    <member kind="function">
      <name>numControlPoints</name>
      <anchor>91469a8ac2ae7fab28ad6669e92b0dcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>knotVector</name>
      <anchor>ba42bb016762b862804d5ba3df5eb7c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNurbsProfile</name>
    <base>SoProfile</base>
    <filename>classSoNurbsProfile.html</filename>
    <member kind="function">
      <name>SoNurbsProfile</name>
      <anchor>e72ccd03030cfc36dfe8f51443a39267</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoNurbsProfile</name>
      <anchor>1e5cb855e47b5428b5dcc80068048756</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e869142a45ac7b6cbbc8b6b2f190de10</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>bcc9ef35346fe624761d12fddd759a2b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>9ef0aff125e6a1033c1b927263efec54</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>9f6fa2426ed3c3f9ccd711bc36d122f2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7ff90af06c742ff3aad2703abfb75280</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTrimCurve</name>
      <anchor>b4d79b0dae4accddc7181c6dd7624e58</anchor>
      <arglist>(SoState *state, int32_t &amp;numpoints, float *&amp;points, int &amp;floatspervec, int32_t &amp;numknots, float *&amp;knotvector)</arglist>
    </member>
    <member kind="function">
      <name>getVertices</name>
      <anchor>55ebbb02b9a31fc70a5c5427db8cb4fb</anchor>
      <arglist>(SoState *state, int32_t &amp;numvertices, SbVec2f *&amp;vertices)</arglist>
    </member>
    <member kind="function">
      <name>knotVector</name>
      <anchor>50428ab26e0d898331492ed34faf0d32</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoNurbsSurface</name>
    <base>SoShape</base>
    <filename>classSoNurbsSurface.html</filename>
    <member kind="function">
      <name>SoNurbsSurfaceP</name>
      <anchor>8b2fa7b1ac5104eca576e736d2e1b351</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoNurbsSurface</name>
      <anchor>021fc183fe9351d26a3f3a50444267ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoNurbsSurface</name>
      <anchor>9aa3ad64326b6c3de093e1e9bc44e723</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>1044ef083fe559cec202f8cb895e5e59</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>efafd4e7996fd247d3038209307a75f3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>3701e7c678f2c16b8f8cf9a35d08a4c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>52668983b01ec1f12d7b46fd24fb9616</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0a5539881c407f4818040bc7d64c5e0c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>b3a2c4796906a1b55047c1885888aa87</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>15e692f7a59fa12e89e4dca22ea0a4c7</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>aec204eb1b27b630ae589a7fa902d2f9</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>sendPrimitive</name>
      <anchor>3b81b3723118cca4b254d6a4cc2d66f5</anchor>
      <arglist>(SoAction *, SoPrimitiveVertex *)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>506313fbd812567918fbc7d44317dfe1</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>cf0a98d57b8122f2c3ce8b9188c77b8d</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>createTriangleDetail</name>
      <anchor>1b6da551d2e6548baff48343e2840594</anchor>
      <arglist>(SoRayPickAction *action, const SoPrimitiveVertex *v1, const SoPrimitiveVertex *v2, const SoPrimitiveVertex *v3, SoPickedPoint *pp)</arglist>
    </member>
    <member kind="function">
      <name>numUControlPoints</name>
      <anchor>fa7908b93542130032620e3c29d78370</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>numVControlPoints</name>
      <anchor>cdf7111479729258a4103c9df16bb4a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>numSControlPoints</name>
      <anchor>9cfd3e94de4ecc0b8766effca8577a06</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>numTControlPoints</name>
      <anchor>83e266e1b116e8f6fb4a0b8fb364f18e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>uKnotVector</name>
      <anchor>d1d39130138f869f47acbfda3879e72a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>vKnotVector</name>
      <anchor>d029ec34de725d2b7b6ad77d0d17493c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>sKnotVector</name>
      <anchor>360f3db13ba21273f9dd72f7691428c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tKnotVector</name>
      <anchor>e21f99c3146dc2a9a2ec0d897aa4ded2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoOffscreenRenderer</name>
    <filename>classSoOffscreenRenderer.html</filename>
    <member kind="function">
      <name>SoOffscreenRendererP</name>
      <anchor>b64d890a75132e13c070a4436ca1e0f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Components</name>
      <anchor>cd70da14761ef3b54c07d0e6f642a338</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoOffscreenRenderer</name>
      <anchor>77b05979638e69baa4b8df817f5c2b6f</anchor>
      <arglist>(const SbViewportRegion &amp;viewportregion)</arglist>
    </member>
    <member kind="function">
      <name>SoOffscreenRenderer</name>
      <anchor>68bd02d137b6f8edc298b6099ab15c6b</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>~SoOffscreenRenderer</name>
      <anchor>dff1873304cf86867b06a4b146c1f764</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getScreenPixelsPerInch</name>
      <anchor>83ce4f862d4bc99aaa72368a638c587b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getMaximumResolution</name>
      <anchor>e16cf2d7ac5a87dae6a6888e0ec9bc94</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setComponents</name>
      <anchor>009e27700869d11686d47d61c5e53a72</anchor>
      <arglist>(const Components components)</arglist>
    </member>
    <member kind="function">
      <name>getComponents</name>
      <anchor>9cdc6fa3f664102cd419596f7b14407f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setViewportRegion</name>
      <anchor>afc12ce58b3ac94b37b0cbf79f548214</anchor>
      <arglist>(const SbViewportRegion &amp;region)</arglist>
    </member>
    <member kind="function">
      <name>getViewportRegion</name>
      <anchor>770b8bd8a6f21cdd91e06a8ce52a6317</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setBackgroundColor</name>
      <anchor>c59934bffc73bbfa8242ab16e9a0000f</anchor>
      <arglist>(const SbColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <name>getBackgroundColor</name>
      <anchor>c70e76193eb78c01365fd975586f9995</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setGLRenderAction</name>
      <anchor>9e0d9ddb3466b29d38f9873a30530d8d</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getGLRenderAction</name>
      <anchor>a7e4f0a784a45bf51a6ab3dcd040b35c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>render</name>
      <anchor>e2ae3abd666f819002798abad9385638</anchor>
      <arglist>(SoNode *scene)</arglist>
    </member>
    <member kind="function">
      <name>render</name>
      <anchor>baa113ccb637bf0d213d64883ec01123</anchor>
      <arglist>(SoPath *scene)</arglist>
    </member>
    <member kind="function">
      <name>getBuffer</name>
      <anchor>af272a90179a0bbb3540f0811d6cadbd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>writeToRGB</name>
      <anchor>13fe56cc8079f22d3d768adda9b7e0f6</anchor>
      <arglist>(FILE *fp) const </arglist>
    </member>
    <member kind="function">
      <name>writeToPostScript</name>
      <anchor>6c8e92ed57feb4b7ae18ffccf1b59ca3</anchor>
      <arglist>(FILE *fp) const </arglist>
    </member>
    <member kind="function">
      <name>writeToPostScript</name>
      <anchor>367300d1931d1e5e6f6d9e708a7956a8</anchor>
      <arglist>(FILE *fp, const SbVec2f &amp;printsize) const </arglist>
    </member>
    <member kind="function">
      <name>writeToRGB</name>
      <anchor>2a15945cad934827d459af3f4f22bc33</anchor>
      <arglist>(const char *filename) const </arglist>
    </member>
    <member kind="function">
      <name>writeToPostScript</name>
      <anchor>6c3530a99129996f36edd34bdc9c29ed</anchor>
      <arglist>(const char *filename) const </arglist>
    </member>
    <member kind="function">
      <name>writeToPostScript</name>
      <anchor>f6f2372e7cd95af42c2d36b8ad7cab71</anchor>
      <arglist>(const char *filename, const SbVec2f &amp;printsize) const </arglist>
    </member>
    <member kind="function">
      <name>isWriteSupported</name>
      <anchor>0c561291489f9a892eb6d0c89835b625</anchor>
      <arglist>(const SbName &amp;filetypeextension) const </arglist>
    </member>
    <member kind="function">
      <name>getNumWriteFiletypes</name>
      <anchor>81d48f9b548a4bdaa9097aeda79e7058</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getWriteFiletypeInfo</name>
      <anchor>3d6757d586bdaaa32e19cb9db161756d</anchor>
      <arglist>(const int idx, SbPList &amp;extlist, SbString &amp;fullname, SbString &amp;description)</arglist>
    </member>
    <member kind="function">
      <name>writeToFile</name>
      <anchor>c5d05306b2e7ff55482cd8f24319f544</anchor>
      <arglist>(const SbString &amp;filename, const SbName &amp;filetypeextension) const </arglist>
    </member>
    <member kind="function">
      <name>getWriteFiletypeInfo</name>
      <anchor>c9214bdad23f0f4a1307890ce1df5bcb</anchor>
      <arglist>(const int idx, SbList&lt; SbName &gt; &amp;extlist, SbString &amp;fullname, SbString &amp;description)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoOneShot</name>
    <base>SoEngine</base>
    <filename>classSoOneShot.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>1970888cf8b9448dcad4ba88bc6cc82b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>Flags</name>
      <anchor>fc3baac087b8c4478e49448e5a66284d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoOneShot</name>
      <anchor>fe76b1224b4a444946eb5959ae6c7024</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoOneShot</name>
      <anchor>9b8461d6a4ebea81bcb929e62133009c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d5ebc6e50a16d757b98e95adbeb83845</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>4d38c0f265c9e9b19f9aa6275034accb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>0358ae5a9da3e9ea6e0d11f849e3ee4d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>bcc20f162cfde138fd286e787a246bce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f7e35d2a21744ba67cc56dd4bed4bf69</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>884864cb56e91a86174976e080c1bcb5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>3c8f4223073a2697435c4a57a233aabf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>timeIn</name>
      <anchor>523667f0cf215af1aa0ebdf6453efee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>duration</name>
      <anchor>5402f0539f89087915ae9ce39b83c9d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>trigger</name>
      <anchor>9ac64496a4b06c4563d6c5918f3247d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>flags</name>
      <anchor>40d1a6edce296a08b043c019d1f1a76d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>disable</name>
      <anchor>d10b5ea160e8415ac604c8babfa9881d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>timeOut</name>
      <anchor>1d64e33e3adb42e11fe53c65fcfd54c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>isActive</name>
      <anchor>b8f275e7d87075c9910ce3861b726294</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ramp</name>
      <anchor>965fa27c10f46fd0026fa50dcb77fd4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoOneShotSensor</name>
    <base>SoDelayQueueSensor</base>
    <filename>classSoOneShotSensor.html</filename>
    <member kind="function">
      <name>SoOneShotSensor</name>
      <anchor>224e5711152cd08e4779ed0d991526d8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoOneShotSensor</name>
      <anchor>7dfa67adceb3518378aa6ca78cfc5d2e</anchor>
      <arglist>(SoSensorCB *func, void *data)</arglist>
    </member>
    <member kind="function">
      <name>~SoOneShotSensor</name>
      <anchor>c41a2d7885758bc62f8783cd50b3b5a3</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoOnOff</name>
    <base>SoEngine</base>
    <filename>classSoOnOff.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>b0e644628249d262c18371b78175ed6e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoOnOff</name>
      <anchor>205592b8ed646c55edf02b080ee58e62</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoOnOff</name>
      <anchor>ca61c4347f9bf38cce6aacfd4b18ee4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5848c394bdb68a67f4395d142fde471a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>bd44b0da4cc0161623c339b3f3394bd8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>3ed01f3d8374fe896c2c1f75250ca3b2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>7663d2be496d04180cb07193256b39df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>a7a5855b2b9b4873016ff362cd03ed8f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>c7d7fc4cb4ad18367fae10b181547989</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>c23de0731a75133e093aff252ea50166</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>on</name>
      <anchor>a07267d61496b90f093bf0c8b8105d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>off</name>
      <anchor>767801c6d7525f407337a1dcddbbc0c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>toggle</name>
      <anchor>d77a578627c17733b24827677a0da4ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>isOn</name>
      <anchor>20a312cefc57afe39efaf44de5d0fc4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>isOff</name>
      <anchor>4c6ec5c2c21dc0a24928d385b2ad383b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoOrthographicCamera</name>
    <base>SoCamera</base>
    <filename>classSoOrthographicCamera.html</filename>
    <member kind="function">
      <name>SoOrthographicCamera</name>
      <anchor>3ac5e89efffdb019d0b20005ac204692</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoOrthographicCamera</name>
      <anchor>c36552953c97da2e4b494b672ae30493</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>7e1533c3bdd77bdb8e4cf883493ddc29</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>32c888a60ab33e0e7b7261ce9e10c9db</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>cb952e2207fc44f7b28a952cc53eb1fd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>64959c96ebe70e0a1fd242644ab8c97a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7cc90a3f6d72de873cbc85c640d4f192</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>scaleHeight</name>
      <anchor>cb614f185ad090062266cfbcb9a03267</anchor>
      <arglist>(float scalefactor)</arglist>
    </member>
    <member kind="function">
      <name>getViewVolume</name>
      <anchor>97b3f199148d18644872585443d70938</anchor>
      <arglist>(float useaspectratio=0.0f) const </arglist>
    </member>
    <member kind="function">
      <name>viewBoundingBox</name>
      <anchor>16be61ad5950ab52c3809854c67efa24</anchor>
      <arglist>(const SbBox3f &amp;box, float aspect, float slack)</arglist>
    </member>
    <member kind="function">
      <name>height</name>
      <anchor>fa9dc163f3356dee50e46ca66f31c2da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoOutput</name>
    <filename>classSoOutput.html</filename>
    <member kind="function">
      <name>SoBase</name>
      <anchor>c4f08cbb885125ab9afff986a01fc57d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoWriterefCounter</name>
      <anchor>3987d06181ed6901e199b7814abf6131</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Stage</name>
      <anchor>f5f67f92434acc6d7c7619d3ef1dfb7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Annotations</name>
      <anchor>6557a37a92efd9a0dc80f717f832f65c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoOutput</name>
      <anchor>f6b0a04ee8bfd49d99fe40d691dc2564</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoOutput</name>
      <anchor>bb7cc39477298359896a2d542a8996c4</anchor>
      <arglist>(SoOutput *dictOut)</arglist>
    </member>
    <member kind="function">
      <name>~SoOutput</name>
      <anchor>670ea6c80f55d25c7b0021c3e86b883a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>setFilePointer</name>
      <anchor>23b6ff34263ce8bbe6e6a354b8e24382</anchor>
      <arglist>(FILE *newFP)</arglist>
    </member>
    <member kind="function">
      <name>getFilePointer</name>
      <anchor>1ac7eb115c441a430f2389fbcc9fa6ec</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>openFile</name>
      <anchor>15bd93d4388bcbd7415c85241b2e9d3b</anchor>
      <arglist>(const char *const fileName)</arglist>
    </member>
    <member kind="function">
      <name>closeFile</name>
      <anchor>731b0fb2e9d1bc7022072c731a016e80</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setCompression</name>
      <anchor>a6e3cda480c9a958e43d49e937925911</anchor>
      <arglist>(const SbName &amp;compmethod, const float level=0.5f)</arglist>
    </member>
    <member kind="function">
      <name>getAvailableCompressionMethods</name>
      <anchor>902c5214a8a02777bca40f69f37a817a</anchor>
      <arglist>(unsigned int &amp;num)</arglist>
    </member>
    <member kind="function">
      <name>setBuffer</name>
      <anchor>09e03f4b73073ca6e120029581774bc7</anchor>
      <arglist>(void *bufPointer, size_t initSize, SoOutputReallocCB *reallocFunc, int32_t offset=0)</arglist>
    </member>
    <member kind="function">
      <name>getBuffer</name>
      <anchor>693680cac7bfcffbb201447dfed7aee5</anchor>
      <arglist>(void *&amp;bufPointer, size_t &amp;nBytes) const </arglist>
    </member>
    <member kind="function">
      <name>getBufferSize</name>
      <anchor>30f9c9a4ac7a7f27e969381b75de4edd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>resetBuffer</name>
      <anchor>fa8509851087905c9952fa03a68e489e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setBinary</name>
      <anchor>e475769e022ccd316ad1125bbda7b3d3</anchor>
      <arglist>(const SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isBinary</name>
      <anchor>f5bf91370930a0fbee260f35d5afd554</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setHeaderString</name>
      <anchor>d993f2c040c1b39d7dc560784188847c</anchor>
      <arglist>(const SbString &amp;str)</arglist>
    </member>
    <member kind="function">
      <name>resetHeaderString</name>
      <anchor>6a029142b4b708bb2f4ca4662a21fa2a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setFloatPrecision</name>
      <anchor>499be4cd2d30a68ef86849b924a1300b</anchor>
      <arglist>(const int precision)</arglist>
    </member>
    <member kind="function">
      <name>setStage</name>
      <anchor>d6b89daf5481cda8842a32d1731a919f</anchor>
      <arglist>(Stage stage)</arglist>
    </member>
    <member kind="function">
      <name>getStage</name>
      <anchor>f3a93c097677d41546afea7c0805fd92</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>incrementIndent</name>
      <anchor>8625a0963e65ae38cf211979b0ea0c7c</anchor>
      <arglist>(const int levels=1)</arglist>
    </member>
    <member kind="function">
      <name>decrementIndent</name>
      <anchor>164e1c3bc35933add8a2651905a3735a</anchor>
      <arglist>(const int levels=1)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>b175e8569a99c5b78a02fc4210a50d5d</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>d0fdc3bb8f3dd2c69f771f8d7c892e96</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>ea09a032e44d59688fe1855be110c4a4</anchor>
      <arglist>(const SbString &amp;s)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>7f2835386710c5744793bac2fdfb3038</anchor>
      <arglist>(const SbName &amp;n)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>1835bb7abf99a29d19650be36e51ee9f</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>1673aac3831873bcfa7e257175447a6b</anchor>
      <arglist>(const unsigned int i)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>9a6434dfbac3a2baf7ef766083eb7875</anchor>
      <arglist>(const short s)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>24b9e65b5c83d3bf70bde83ffb55efdc</anchor>
      <arglist>(const unsigned short s)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>762585e6856d8e234ae358a1e5de4c91</anchor>
      <arglist>(const float f)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>a46f450533be763ccd3f45484ed3f139</anchor>
      <arglist>(const double d)</arglist>
    </member>
    <member kind="function">
      <name>writeBinaryArray</name>
      <anchor>1d1cce06bcb3e36cefb419da32cf70e9</anchor>
      <arglist>(const unsigned char *c, const int length)</arglist>
    </member>
    <member kind="function">
      <name>writeBinaryArray</name>
      <anchor>7d676b7c5e16473572bf1c7925615600</anchor>
      <arglist>(const int32_t *const l, const int length)</arglist>
    </member>
    <member kind="function">
      <name>writeBinaryArray</name>
      <anchor>93c825150ca0a1b3bef4d41c38bda5ef</anchor>
      <arglist>(const float *const f, const int length)</arglist>
    </member>
    <member kind="function">
      <name>writeBinaryArray</name>
      <anchor>943723970330050a9d23c97a89e089e2</anchor>
      <arglist>(const double *const d, const int length)</arglist>
    </member>
    <member kind="function">
      <name>indent</name>
      <anchor>80e9261a4563b7441d2fe7cdca92471c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>reset</name>
      <anchor>00035cbc43d148976dc9dfef26f13932</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setCompact</name>
      <anchor>9ff4168e5475effe76369d9095f86ef7</anchor>
      <arglist>(SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isCompact</name>
      <anchor>37347a8f9b7f7e5dff4f2b7e44ca9e54</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setAnnotation</name>
      <anchor>7edfea0bd68a9b59100464883534f64e</anchor>
      <arglist>(uint32_t bits)</arglist>
    </member>
    <member kind="function">
      <name>getAnnotation</name>
      <anchor>93a2381046d761beeaa7f76145bc02fd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getDefaultASCIIHeader</name>
      <anchor>b28e992d4158657626b1dfcca79d2ae6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getDefaultBinaryHeader</name>
      <anchor>f494abf9f4e052c86c9e53910fe0fc81</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addReference</name>
      <anchor>3a62c959a6b070ca51af5ca64af63360</anchor>
      <arglist>(const SoBase *base)</arglist>
    </member>
    <member kind="function">
      <name>findReference</name>
      <anchor>e95dee389bfbbf82c8b848a5f9e79690</anchor>
      <arglist>(const SoBase *base) const </arglist>
    </member>
    <member kind="function">
      <name>setReference</name>
      <anchor>85ba02856c3f3e90753700fa51a837a8</anchor>
      <arglist>(const SoBase *base, int refid)</arglist>
    </member>
    <member kind="function">
      <name>addDEFNode</name>
      <anchor>3af119503db875683d18470c5dec34d1</anchor>
      <arglist>(SbName name)</arglist>
    </member>
    <member kind="function">
      <name>lookupDEFNode</name>
      <anchor>0106943506a2ed550af5897069a80c32</anchor>
      <arglist>(SbName name)</arglist>
    </member>
    <member kind="function">
      <name>removeDEFNode</name>
      <anchor>7555f4de703a968d5b00f5b044df801e</anchor>
      <arglist>(SbName name)</arglist>
    </member>
    <member kind="function">
      <name>pushProto</name>
      <anchor>5ff364eb3e0d6b21817684503414f252</anchor>
      <arglist>(SoProto *proto)</arglist>
    </member>
    <member kind="function">
      <name>getCurrentProto</name>
      <anchor>d593c653fd3ba9a690ee70de40ad06b0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>popProto</name>
      <anchor>59dc3572204939c84da139f4ddc441e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addRoute</name>
      <anchor>13040af220e1a609e2402c7b4b6a3b3d</anchor>
      <arglist>(SoFieldContainer *from, const SbName &amp;fromfield, SoFieldContainer *to, const SbName &amp;tofield)</arglist>
    </member>
    <member kind="function">
      <name>resolveRoutes</name>
      <anchor>8a4d22c3ae245f50060e2e6ab5272012</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isToBuffer</name>
      <anchor>07b0d89b1e74854627f28ec3a8323a87</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>bytesInBuf</name>
      <anchor>0536ad85df0d6660aa3d0b9208764fd8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>makeRoomInBuf</name>
      <anchor>c0e2ef06c15f73d0b50cfa899df46d9b</anchor>
      <arglist>(size_t nBytes)</arglist>
    </member>
    <member kind="function">
      <name>convertShort</name>
      <anchor>e722ef6508d77fec90d3842d426782cc</anchor>
      <arglist>(short s, char *to)</arglist>
    </member>
    <member kind="function">
      <name>convertInt32</name>
      <anchor>f03ec3e531799b0ab872dbd6f2feefd6</anchor>
      <arglist>(int32_t l, char *to)</arglist>
    </member>
    <member kind="function">
      <name>convertFloat</name>
      <anchor>e2a6d2389dbb3a6fb43df619588243f1</anchor>
      <arglist>(float f, char *to)</arglist>
    </member>
    <member kind="function">
      <name>convertDouble</name>
      <anchor>a735b7f04b8175020d674bfb3f7841e5</anchor>
      <arglist>(double d, char *to)</arglist>
    </member>
    <member kind="function">
      <name>convertShortArray</name>
      <anchor>0b4067438e84b6ab7b32a22cb7b5f746</anchor>
      <arglist>(short *from, char *to, int len)</arglist>
    </member>
    <member kind="function">
      <name>convertInt32Array</name>
      <anchor>a5d1259c90e3f9d45680511216befca8</anchor>
      <arglist>(int32_t *from, char *to, int len)</arglist>
    </member>
    <member kind="function">
      <name>convertFloatArray</name>
      <anchor>1c28b4db51c1e81e4edc7078c43a054e</anchor>
      <arglist>(float *from, char *to, int len)</arglist>
    </member>
    <member kind="function">
      <name>convertDoubleArray</name>
      <anchor>7fb0aac2bae9ef5fabdf6dcfec9bff3b</anchor>
      <arglist>(double *from, char *to, int len)</arglist>
    </member>
    <member kind="function">
      <name>padHeader</name>
      <anchor>998d4708239ebb78dc26d23a3e452794</anchor>
      <arglist>(const SbString &amp;inString)</arglist>
    </member>
    <member kind="function">
      <name>wroteHeader</name>
      <anchor>115045b8a4e57f8936223a75c991e8e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoOverrideElement</name>
    <base>SoElement</base>
    <filename>classSoOverrideElement.html</filename>
    <member kind="function">
      <name>init</name>
      <anchor>3966fba44730dcf3c99ec5e906e1b470</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>push</name>
      <anchor>cc982f58f20b8fae6917204722646cdc</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>matches</name>
      <anchor>cb4e5ad0be0383557b027c7130486bc3</anchor>
      <arglist>(const SoElement *element) const </arglist>
    </member>
    <member kind="function">
      <name>copyMatchInfo</name>
      <anchor>3bb2427e459a281e15c4a6fa16b7a44a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>0419c2b86d2326f403e64cda7cf595ad</anchor>
      <arglist>(FILE *file) const </arglist>
    </member>
    <member kind="function">
      <name>getFlags</name>
      <anchor>60ddf3050c5b2ebff7f3ec1528ac3d9f</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>setMaterialBindingOverride</name>
      <anchor>1d10f0d2b682675edc6db98f92faa6ea</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>FlagBits</name>
      <anchor>86547021386028749c51e7cd3cad38c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>~SoOverrideElement</name>
      <anchor>b723abe1857ad98350f4a0fa70be2a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>8dd968a4f9816a4fa6d1b7b54654b0dd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>dc4e24253b7cdc35e38de9a676168ed9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>38056a87f7f3a2f6a9b2801eaa89a899</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>35d8907e2a8f14b1781df6f111de2667</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getAmbientColorOverride</name>
      <anchor>a7423f8388266902f532c513423e4418</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getColorIndexOverride</name>
      <anchor>2170cf7503eb4a761eb66f89a3805b94</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getComplexityOverride</name>
      <anchor>dbd75fa8e24a2ea1bd7b7a518e7b0880</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getComplexityTypeOverride</name>
      <anchor>1fba4d8693689e02fccceadfbba011c4</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getCreaseAngleOverride</name>
      <anchor>ea21a4f721c72193385fdb0094f2607b</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getDiffuseColorOverride</name>
      <anchor>0d75746dc3a609cbe9a5cec222ff157c</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getDrawStyleOverride</name>
      <anchor>443a55aaa202eaef0409ce937e7731ed</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getEmissiveColorOverride</name>
      <anchor>0ba637cdc533c0afbea5fef6b5be2fe7</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getFontNameOverride</name>
      <anchor>76e43dd079c0ce5b4a19294f5e7f971e</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getFontSizeOverride</name>
      <anchor>4c06db1e667973c827c058e7fc92d8cb</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getLightModelOverride</name>
      <anchor>61d970749935f30c8eb68a38714cddaf</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getLinePatternOverride</name>
      <anchor>0bdda781e2dab64df9cebefa27631ebd</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getLineWidthOverride</name>
      <anchor>d6bfb7a86523f40006f53f830eb76ea9</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getMaterialBindingOverride</name>
      <anchor>8296c5e587f07d9c900c1cbcd39cf15b</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getPickStyleOverride</name>
      <anchor>d2279584837a90fbea47afba15c21f73</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getPointSizeOverride</name>
      <anchor>1acb64026d3e557ee9faf8a7016955e5</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getPolygonOffsetOverride</name>
      <anchor>fbdfaac2fec0e6f54301e0bcb5f8b852</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getShapeHintsOverride</name>
      <anchor>39b36e49178c07f13d4ac02e5c92c483</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getShininessOverride</name>
      <anchor>339d656a5247b4f99ff00e0c66f31881</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getSpecularColorOverride</name>
      <anchor>72baa9c2a1eab5b7b3d696b4264afe24</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getTransparencyOverride</name>
      <anchor>8e382690e7068d0535ae9711fc899217</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getTransparencyTypeOverride</name>
      <anchor>a1b3c741562cca807a96b9ae74af25ae</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getNormalVectorOverride</name>
      <anchor>f01ea9c65d78ea6f76ce27820c50e392</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getNormalBindingOverride</name>
      <anchor>f6ab846e87b5a4e50117809b6a30fafa</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>setAmbientColorOverride</name>
      <anchor>55367ef42426a1044d700c7fe5432056</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setColorIndexOverride</name>
      <anchor>f2f9bdb3878f46956d159ebaef0e95c4</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setComplexityOverride</name>
      <anchor>277c3ce2ccf69daa2c8605448265c9ab</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setComplexityTypeOverride</name>
      <anchor>8c5be3b4996d960bb38a7177e50aa460</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setCreaseAngleOverride</name>
      <anchor>0f742dbfe32609ee1476977857b95678</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setDiffuseColorOverride</name>
      <anchor>9c4fd3e3522f1a1871f7cec4d9d3bbd0</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setDrawStyleOverride</name>
      <anchor>a90d7cd63aa89a7de8935d34c0f2fb66</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setEmissiveColorOverride</name>
      <anchor>7a30f1cfccd9fbdfeffba855be867dfe</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setFontNameOverride</name>
      <anchor>b08e89ebed7fe03d09467b0023587bcf</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setFontSizeOverride</name>
      <anchor>7f8b47f0b35b3599184804b7c931208f</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setLightModelOverride</name>
      <anchor>0dc4aa6f9efb2d9be354003cbf52d114</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setLinePatternOverride</name>
      <anchor>8be305cab6066b2c91a27bcc4ca70568</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setLineWidthOverride</name>
      <anchor>98b3d8add28f587c2b43e49775eb5038</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setPickStyleOverride</name>
      <anchor>ff3ad061fff9865c6f49e88ffa790b2b</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setPointSizeOverride</name>
      <anchor>7844dde3bc3f8c98172ffad3b3de5c77</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setPolygonOffsetOverride</name>
      <anchor>14d7370e00f01ea2b25de2afa4f9027d</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setShapeHintsOverride</name>
      <anchor>0d46ac2e54ba716168351add7056baf6</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setShininessOverride</name>
      <anchor>9a1c8507402ac031efa50d5449e10b6c</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setSpecularColorOverride</name>
      <anchor>ae88cc42e33ab4719383f6026c88f91a</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setTransparencyOverride</name>
      <anchor>79c936621656ff5e68c7b5ad47d1d474</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setTransparencyTypeOverride</name>
      <anchor>bef2367e1db9b5d904f15a4287dac2f5</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setNormalVectorOverride</name>
      <anchor>8c350422b3076a479e06f250fd9d17c2</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
    <member kind="function">
      <name>setNormalBindingOverride</name>
      <anchor>fed2ccbdfecbf2f76fe558c2ad41caf3</anchor>
      <arglist>(SoState *const state, SoNode *const node, const SbBool override)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPackedColor</name>
    <base>SoNode</base>
    <filename>classSoPackedColor.html</filename>
    <member kind="function">
      <name>SoPackedColor</name>
      <anchor>e6f17502ef2f9ea9457a200e559684f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoPackedColor</name>
      <anchor>6ca8bc5d6b13284e14f319772b216d84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ae6fbce347ea4f626ebeb406bb5a27f5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>3baaee978b6514fb42efbc8b2086438f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>d838bf0532a825bfae04a0b629f940b6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>3194cb4a087d3e55c4fc5b386ecfa414</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>07417933137e06543cdac4e61fdc50f1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>a2e79b246c5e27927cd1689d068d067c</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>665c14d88bc3e532cca9a0d852c07bf5</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>580299fe736f852776115f02fe522ef9</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>isTransparent</name>
      <anchor>8b4be408dbf6dbda6dca287a2c5f83e4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>78644a7fbbaaba4f7304842c13c2e961</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>orderedRGBA</name>
      <anchor>6c1556f83e403fa64e7323666a98e017</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPath</name>
    <base>SoBase</base>
    <filename>classSoPath.html</filename>
    <member kind="function">
      <name>SoFullPath</name>
      <anchor>ca994c680b72a0c55bff0c85c2ea77d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoNodeKitPath</name>
      <anchor>e325411ea95965d472b1ca45f5a774a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoAction</name>
      <anchor>5d7c7e1f89fb05dde739c50211b70788</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTempPath</name>
      <anchor>3db738d22a6a471b912582e2d878cc2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoPath</name>
      <anchor>358fb5c0804a2326dbe9a0365dee0eee</anchor>
      <arglist>(const int approxlength=4)</arglist>
    </member>
    <member kind="function">
      <name>SoPath</name>
      <anchor>cca61df3c242a3330b500841a8dc5bc6</anchor>
      <arglist>(SoNode *const head)</arglist>
    </member>
    <member kind="function">
      <name>SoPath</name>
      <anchor>02da31c9ae679ded222a73138f1b266f</anchor>
      <arglist>(const SoPath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <name>~SoPath</name>
      <anchor>5143b3c9f47ecd2e1e2b263e197a04b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>c422dcfbc1ca4c7fa8d935db25009cce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>0098c2fc11f7d2e50e22937d414cb3d1</anchor>
      <arglist>(const SoPath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>6e7d6e994679ee36ead52df9c9625033</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>711735eb906e2e6ad10b613fad82d359</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setHead</name>
      <anchor>91a6cec060019cd9321479eacc2638c1</anchor>
      <arglist>(SoNode *const head)</arglist>
    </member>
    <member kind="function">
      <name>getHead</name>
      <anchor>5ae670ee064c38811a5ae156a8d5274a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>a32c4df6c4fe63cf31b09727f6ad0bd7</anchor>
      <arglist>(const int childindex)</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>f5eb808c245d5d6f95b6a1ea8e0729d9</anchor>
      <arglist>(SoNode *const node)</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>ce80066f1f54af55a265c0d980c13975</anchor>
      <arglist>(const SoPath *const frompath)</arglist>
    </member>
    <member kind="function">
      <name>push</name>
      <anchor>4df0becc437e8052b47b526b0c1b802c</anchor>
      <arglist>(const int childindex)</arglist>
    </member>
    <member kind="function">
      <name>pop</name>
      <anchor>a82bbd8566a5cddf2139d85402858b77</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTail</name>
      <anchor>790d9bb9c6cdb41320dd114eb299c405</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNode</name>
      <anchor>961c72a9ac71401a07c4c744a430588f</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getNodeFromTail</name>
      <anchor>71eee84bbfda27d9da1e13ce2e90a5dd</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getIndex</name>
      <anchor>178632030261c047046ca612d9b1672a</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getIndexFromTail</name>
      <anchor>8ffd4d262084df9aa6a251df5ca40c38</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>getLength</name>
      <anchor>c8e049429d6d9c33cfabee62714f8d93</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>truncate</name>
      <anchor>d6078a33f2838005f98cf488d18930e8</anchor>
      <arglist>(const int length)</arglist>
    </member>
    <member kind="function">
      <name>findFork</name>
      <anchor>2e67692f5c126d4e54646d4b8c227add</anchor>
      <arglist>(const SoPath *const path) const </arglist>
    </member>
    <member kind="function">
      <name>findNode</name>
      <anchor>d6a5ba8f63de2c5d0c4187a7db2c1dcf</anchor>
      <arglist>(const SoNode *const node) const </arglist>
    </member>
    <member kind="function">
      <name>containsNode</name>
      <anchor>1fd172539c22f3e5f43574385d0b3f66</anchor>
      <arglist>(const SoNode *const node) const </arglist>
    </member>
    <member kind="function">
      <name>containsPath</name>
      <anchor>40946ad30477f1fa41276cb012a56040</anchor>
      <arglist>(const SoPath *const path) const </arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>741990616d6f379b02e1ab98ac92f474</anchor>
      <arglist>(const int startfromnodeindex=0, int numnodes=0) const </arglist>
    </member>
    <member kind="function">
      <name>getByName</name>
      <anchor>4fc80e2d0e9330731b5c51ecd9f4e590</anchor>
      <arglist>(const SbName name)</arglist>
    </member>
    <member kind="function">
      <name>getByName</name>
      <anchor>e03891fefc14fe234ac170ede8657214</anchor>
      <arglist>(const SbName name, SoPathList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>insertIndex</name>
      <anchor>c2c8ab31aaece572afc70082e52f81cd</anchor>
      <arglist>(SoNode *const parent, const int newindex)</arglist>
    </member>
    <member kind="function">
      <name>removeIndex</name>
      <anchor>51180fc82d5385b88b662e0f1a136568</anchor>
      <arglist>(SoNode *const parent, const int oldindex)</arglist>
    </member>
    <member kind="function">
      <name>replaceIndex</name>
      <anchor>8ab459c9766169e3c7e58f0cfd6fc446</anchor>
      <arglist>(SoNode *const parent, const int index, SoNode *const newchild)</arglist>
    </member>
    <member kind="function">
      <name>isRelevantNotification</name>
      <anchor>4ca7591a34980e837a3f48857508c4d6</anchor>
      <arglist>(SoNotList *const l) const </arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>3b45195e0e17b98f437de45223c97a20</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>auditPath</name>
      <anchor>4c024bb9e34aa9db13c80413ebab6d3b</anchor>
      <arglist>(const SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>b4848beb2243ec5b8166c38835a1583a</anchor>
      <arglist>(const SoPath &amp;lhs, const SoPath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>fb925263baf09f7c209443e06bf9e528</anchor>
      <arglist>(const SoPath &amp;lhs, const SoPath &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPathList</name>
    <base>SoBaseList</base>
    <filename>classSoPathList.html</filename>
    <member kind="function">
      <name>SoPathList</name>
      <anchor>5ce3a1a16f9d446fde9adbc709343c80</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoPathList</name>
      <anchor>9c025184ffe3e06f23ee0ac688a9abe6</anchor>
      <arglist>(const int size)</arglist>
    </member>
    <member kind="function">
      <name>SoPathList</name>
      <anchor>766e53ea91953ed447ef94a4a64edfc4</anchor>
      <arglist>(const SoPathList &amp;pl)</arglist>
    </member>
    <member kind="function">
      <name>~SoPathList</name>
      <anchor>d2e58a99ae5a73a8c110315acc81ce83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>c41fb316c367ddb3a0b536a19347035f</anchor>
      <arglist>(SoPath *const path)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>808474a2fbca3616e47c5568563308be</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>a1c2b469e374756a65a836c7727a9029</anchor>
      <arglist>(const SoPathList &amp;pl)</arglist>
    </member>
    <member kind="function">
      <name>findPath</name>
      <anchor>875843c0f99cc6186cd535e5af75ff81</anchor>
      <arglist>(const SoPath &amp;path) const </arglist>
    </member>
    <member kind="function">
      <name>sort</name>
      <anchor>61cc92b1b79e4387a2dead9352d1017d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>uniquify</name>
      <anchor>0a7da1bdcc904d018b69ed4fb1edaca8</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPathSensor</name>
    <base>SoDataSensor</base>
    <filename>classSoPathSensor.html</filename>
    <member kind="function">
      <name>TriggerFilter</name>
      <anchor>f13a360f1b0240372aa25b796253c00c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ATH</name>
      <anchor>f13a360f1b0240372aa25b796253c00c3e071abe57169a91f8ca4435ded46e6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ODES</name>
      <anchor>f13a360f1b0240372aa25b796253c00c8553f30f599f632e588f7b24f54ac16d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ATH_AND_NODES</name>
      <anchor>f13a360f1b0240372aa25b796253c00c8797a96f28abcfa252605892a2447257</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoPathSensor</name>
      <anchor>50c0df3f741d8f01bcc742af5f0e4838</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoPathSensor</name>
      <anchor>42419b1bb7c69c47ddc6d0f8ab5e822f</anchor>
      <arglist>(SoSensorCB *func, void *data)</arglist>
    </member>
    <member kind="function">
      <name>~SoPathSensor</name>
      <anchor>a16ce9bd3d9772af21a1ab463c86a08e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setTriggerFilter</name>
      <anchor>b158a94ca8c31d52afa579d2232ade31</anchor>
      <arglist>(const TriggerFilter type)</arglist>
    </member>
    <member kind="function">
      <name>getTriggerFilter</name>
      <anchor>18a992f1cb63423696519172586201a6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>attach</name>
      <anchor>e96bfde8b84277455c6b8e63f65477fa</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>detach</name>
      <anchor>a22f4e63a909c16ab4a1083d55abd718</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getAttachedPath</name>
      <anchor>c5a327d01458a5c610260226914ae882</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>7ef4a67b977aba476b25c44d839099af</anchor>
      <arglist>(SoNotList *l)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPathSwitch</name>
    <base>SoGroup</base>
    <filename>classSoPathSwitch.html</filename>
    <member kind="function">
      <name>SoPathSwitch</name>
      <anchor>71b1074745fc0c4545a6795eb089d50a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoPathSwitch</name>
      <anchor>702f2b79a88fb2805f5aa57349442271</anchor>
      <arglist>(int numchildren)</arglist>
    </member>
    <member kind="function">
      <name>~SoPathSwitch</name>
      <anchor>e3ed5031e8ddba1c792630ed61231339</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>f5ae4f9f025a0e1dffb6dec565a12b10</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>5478f3c3f124306dc7c71d827f5f74ef</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>414f8b9f06a246ae4da6e6d5513da46a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>cf38cb9efc7d0f4c764d8d9b18171f3d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>c999e8fa4a36f112149954eb78725a5a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>952bdb39d0b83ee2c86b41f39af636c2</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>e7aa9b89138b90ad28f8a769fcaf576a</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>03e2386a8f0ee814cf7adecb0bc276f8</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>b5023bc95c6934d95b6a045e3305d1ac</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>a154e44199df1c8ab4e7e4808cf771b8</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>594c091f21ab64d3cebb0d5c91d5f51c</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>0a1943cee725b3eeff7911cda4ad9c1e</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>46e3c95398c5b8c569154b6671fc66ee</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>91096708071d93cc1c6f8ce37531b76c</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>path</name>
      <anchor>f4bcec211ad950591c11071828bf4e7e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPendulum</name>
    <base>SoRotation</base>
    <filename>classSoPendulum.html</filename>
    <member kind="function">
      <name>SoPendulum</name>
      <anchor>6f7fc6042015eeee927af1272e523758</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoPendulum</name>
      <anchor>167d38d39eb074f0ca88da2d3205265f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>79ea43473276841e2b2dbdd7bf4ffd33</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>98c68ecbb9e75d938133647f1b8c78de</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>789c75606cee7519168ffc7fa23719fb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>d485e00f79616ce4802adf06f137b1ff</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>730f4825f6c20f2b47468572eef60c61</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>3e35a5e2cb0834178d5637038567ea1e</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rotation0</name>
      <anchor>28028aa61a2bdfb67317134494c06a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotation1</name>
      <anchor>8871d12aecbed29e419ffb24783a2d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>speed</name>
      <anchor>25a1b9dd870728ca6b94eb42dc59884d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>on</name>
      <anchor>a358f359bd1b735dc6a4a55f270cc47f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPerspectiveCamera</name>
    <base>SoCamera</base>
    <filename>classSoPerspectiveCamera.html</filename>
    <member kind="function">
      <name>SoPerspectiveCamera</name>
      <anchor>e9c95ccbe347e52096e647d1dc29d631</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoPerspectiveCamera</name>
      <anchor>c270d84b11e56917c2cf5042658dbe4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>04f2355347cbcae032e3b7e46bd291e7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>839ff00f39a495140824f7dc8bb59ba4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>e5d12291155905ce8f98c2af26bb0b11</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>858e79fb2e2983921259eedd23a44508</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>aa77f632d6d2497dced5d0b533472c42</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>scaleHeight</name>
      <anchor>d8d86d60668c2ac204c2797e9769552e</anchor>
      <arglist>(float scalefactor)</arglist>
    </member>
    <member kind="function">
      <name>getViewVolume</name>
      <anchor>b9e0fc50886b30aebeba93bfdb584d09</anchor>
      <arglist>(float useaspectratio=0.0f) const </arglist>
    </member>
    <member kind="function">
      <name>viewBoundingBox</name>
      <anchor>bb3b80a6d65257800cd35649aa663f29</anchor>
      <arglist>(const SbBox3f &amp;box, float aspect, float slack)</arglist>
    </member>
    <member kind="function">
      <name>heightAngle</name>
      <anchor>93f52a6de7d2a5d6c1c7e423ca161a60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPickAction</name>
    <base>SoAction</base>
    <filename>classSoPickAction.html</filename>
    <member kind="function">
      <name>SoPickAction</name>
      <anchor>6ed6d76ab6b1a4a22f2b8faf42615a6f</anchor>
      <arglist>(const SbViewportRegion &amp;viewportregion)</arglist>
    </member>
    <member kind="function">
      <name>~SoPickAction</name>
      <anchor>6db3c14b47283cccb70d1377e551c200</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>a4dcdb579a8e99250ee7bf8a1be69c18</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>7e2d859c24553a7ffe090299ab1e9b68</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>75b110192fe6049693a43de1279a059e</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>11f727c349a0c00867ca45df2baf789d</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>6f0b6fad3d403145cc702ddbfe285ae9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>40ac68cad493d451657829d2e044a0b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>2a640fe90566e85f07957e0597a79c1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>bb057d8c0a6355c815cf11b63961276e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setViewportRegion</name>
      <anchor>91d1b4b418832a2e6fdf6efbee333319</anchor>
      <arglist>(const SbViewportRegion &amp;newregion)</arglist>
    </member>
    <member kind="function">
      <name>getViewportRegion</name>
      <anchor>c45ee1fb86e71eab3f6640a1dfef32df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>enableCulling</name>
      <anchor>8895fd2df360a3626aaee7850c9b0db0</anchor>
      <arglist>(const SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isCullingEnabled</name>
      <anchor>0707a2df3100814dc6988e9c7473e94a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>beginTraversal</name>
      <anchor>08ec3ccd8cd0f5a01ff68e86dc49ae65</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>vpRegion</name>
      <anchor>08a0e09db22850dbfcabfa4dc24c3945</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPickedPoint</name>
    <filename>classSoPickedPoint.html</filename>
    <member kind="function">
      <name>SoPickedPoint</name>
      <anchor>dae5a2b092425ca7138d4fb0a94d9918</anchor>
      <arglist>(const SoPickedPoint &amp;pp)</arglist>
    </member>
    <member kind="function">
      <name>SoPickedPoint</name>
      <anchor>1becb15a2e466624d2d8a115a5d0eb72</anchor>
      <arglist>(const SoPath *const path, SoState *const state, const SbVec3f &amp;objSpacePoint)</arglist>
    </member>
    <member kind="function">
      <name>~SoPickedPoint</name>
      <anchor>a48f329405ffd09d81924d556d398a06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>33e209c55a30952eaef7f46a040a6171</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>getPoint</name>
      <anchor>cdbff9b2500ecf8d34494add1f2f09d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>getNormal</name>
      <anchor>e6d2f6b4284650d311a0a1330ec7a2bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>getTextureCoords</name>
      <anchor>42cbd1b11b75758e0b8f379a681306b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>getMaterialIndex</name>
      <anchor>84144b6931dbf83fb3f293f85ecf3de4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>getPath</name>
      <anchor>6f508f910532e54303450081b16f06a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>isOnGeometry</name>
      <anchor>f8d0bbaae906d46dd5b744d38b93028a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>getDetail</name>
      <anchor>9c1430a0ed4066ecb080afde7f382205</anchor>
      <arglist>(const SoNode *const node=NULL) const </arglist>
    </member>
    <member kind="function">
      <name>getObjectToWorld</name>
      <anchor>3dc84afe2333313ba07669990712a087</anchor>
      <arglist>(const SoNode *const node=NULL) const </arglist>
    </member>
    <member kind="function">
      <name>getWorldToObject</name>
      <anchor>692b91c8dddebcb3b43dab57df745525</anchor>
      <arglist>(const SoNode *const node=NULL) const </arglist>
    </member>
    <member kind="function">
      <name>getObjectToImage</name>
      <anchor>1d4cf29b62c3361bb22f908e9c1ee6b7</anchor>
      <arglist>(const SoNode *const node=NULL) const </arglist>
    </member>
    <member kind="function">
      <name>getImageToObject</name>
      <anchor>cd43eb93da1c5dd396765f60166e36ae</anchor>
      <arglist>(const SoNode *const node=NULL) const </arglist>
    </member>
    <member kind="function">
      <name>getObjectPoint</name>
      <anchor>c2a7fe42f9c09488f6dadd973d0aed4f</anchor>
      <arglist>(const SoNode *const node=NULL) const </arglist>
    </member>
    <member kind="function">
      <name>getObjectNormal</name>
      <anchor>03a4ebbe30a7431d1cf89d8cb98cfd0d</anchor>
      <arglist>(const SoNode *const node=NULL) const </arglist>
    </member>
    <member kind="function">
      <name>getObjectTextureCoords</name>
      <anchor>bd05737d43c1af1e80ae87790dd573f5</anchor>
      <arglist>(const SoNode *const node=NULL) const </arglist>
    </member>
    <member kind="function">
      <name>setObjectNormal</name>
      <anchor>7f84dfc0ccea4f4e7681fa5e60a93515</anchor>
      <arglist>(const SbVec3f &amp;normal)</arglist>
    </member>
    <member kind="function">
      <name>setObjectTextureCoords</name>
      <anchor>211ab4a4a2eba8119bfa44bdb159a93a</anchor>
      <arglist>(const SbVec4f &amp;texCoords)</arglist>
    </member>
    <member kind="function">
      <name>setMaterialIndex</name>
      <anchor>5cd46408f05dad94cb2784bb4842c303</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>setDetail</name>
      <anchor>da0b8d4ce276eb3c3bd1a067de6681e2</anchor>
      <arglist>(SoDetail *detail, SoNode *node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPickedPointList</name>
    <base>SbPList</base>
    <filename>classSoPickedPointList.html</filename>
    <member kind="function">
      <name>append</name>
      <anchor>795307b4f47bfc6035a7f94732f5e632</anchor>
      <arglist>(SoPickedPoint *pp)</arglist>
    </member>
    <member kind="function">
      <name>insert</name>
      <anchor>98d037a305db2136d23bdda06a522775</anchor>
      <arglist>(SoPickedPoint *pp, const int insertbefore)</arglist>
    </member>
    <member kind="function">
      <name>SoPickedPointList</name>
      <anchor>8e05dc5fa3140dbce320d5bb1eb63feb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoPickedPointList</name>
      <anchor>63a03530b4d49f0c12c0ebe462bc44fd</anchor>
      <arglist>(const int sizehint)</arglist>
    </member>
    <member kind="function">
      <name>SoPickedPointList</name>
      <anchor>2a4d6d5e94746d453b63dfb3e4f62e68</anchor>
      <arglist>(const SoPickedPointList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>85c2f1f0a14d840902983b8afc2e1737</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>truncate</name>
      <anchor>a777ed4003982edeb812aafaca2cd2c0</anchor>
      <arglist>(const int start, const int fit=0)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>a80c6ec6371bb2a75fdaed60e4dd05b5</anchor>
      <arglist>(const int idx, SoPickedPoint *pp)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPickStyle</name>
    <base>SoNode</base>
    <filename>classSoPickStyle.html</filename>
    <member kind="function">
      <name>Style</name>
      <anchor>8c23088ad3a4eb7bdeaa93ae5a29b910</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>HAPE</name>
      <anchor>8c23088ad3a4eb7bdeaa93ae5a29b9108ae8ec595b7fe45f29d7ce88d1e8ab41</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OUNDING_BOX</name>
      <anchor>8c23088ad3a4eb7bdeaa93ae5a29b910dd95380db49456848037da8e016153a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NPICKABLE</name>
      <anchor>8c23088ad3a4eb7bdeaa93ae5a29b910110f32f99cd9ba0d4022a062ed39c302</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoPickStyle</name>
      <anchor>bdb60829515f29ff3eb4d21b05c7bf2c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoPickStyle</name>
      <anchor>8969b7fe748a0dc35b6c4835a4855978</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>fa6d48fcda0aabaf0e9734267160e78c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>598c4aad17f6af10df42312718b26c57</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>69293945d787abfabc2ca76a3d66ae49</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>1ac1b56a4ff19af05622992ced810930</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6d60cb3cfe063ab595deda0bba88dbf5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>efeef5e8db1e21ac4e750fca2c6a807c</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>966a157ec8174d28be481881de1856ea</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>bf0c9ee342011e88cb045461f8261d5c</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>style</name>
      <anchor>85089766be4c884fce884971ac8cbcac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPointDetail</name>
    <base>SoDetail</base>
    <filename>classSoPointDetail.html</filename>
    <member kind="function">
      <name>SoPointDetail</name>
      <anchor>785f9613d295f3b463c77d17de37067a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoPointDetail</name>
      <anchor>f6f0267affab84e2550abba05df8e369</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>c1731ecdfe2eb9d8a8cd5e7adf7b6762</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>0688fd3efb05ee21d4a47a78170b471b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>bdd7ffc3d476c8ae1bbc004fb4188983</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>c911b50e9e12ec7aff0c790dde90a516</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getCoordinateIndex</name>
      <anchor>18359f000c9244dcca35474b74870e34</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getMaterialIndex</name>
      <anchor>40034eab6a3841c7910f83bc589b7289</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNormalIndex</name>
      <anchor>ff34db2e4b1033be14c738a875473bb1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTextureCoordIndex</name>
      <anchor>ab35e58dc23c3ef4f2f4425365cffa69</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setCoordinateIndex</name>
      <anchor>2d8ca058bc13db4e06f8b235228ebe08</anchor>
      <arglist>(const int idx)</arglist>
    </member>
    <member kind="function">
      <name>setMaterialIndex</name>
      <anchor>a92849731bf7eba6ffd8727b017d7c85</anchor>
      <arglist>(const int idx)</arglist>
    </member>
    <member kind="function">
      <name>setNormalIndex</name>
      <anchor>7eab228fa2a4d7de3314e7293659fcac</anchor>
      <arglist>(const int idx)</arglist>
    </member>
    <member kind="function">
      <name>setTextureCoordIndex</name>
      <anchor>3f5c5a9fe17fa10db0d0f28bf4f1fbf2</anchor>
      <arglist>(const int idx)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPointLight</name>
    <base>SoLight</base>
    <filename>classSoPointLight.html</filename>
    <member kind="function">
      <name>SoPointLight</name>
      <anchor>313211c4875a5b6faf55fe131083dd89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoPointLight</name>
      <anchor>8e638ba1135ce97831c710ba510b697d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>0cfce5fd5c646a0f8e785b783c17ce82</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>85278e58a14ad7f5b431eed70a6a6f9f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>509402d811ac413711829e7014d115bd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>89a929b6006f293add3a994406a351c7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>4eb35e94e2d1506d77b33f67c423022a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>d748c88820b2fbb674b6dab700eb0df6</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>location</name>
      <anchor>d35ae059a7556bbde5f6f875b348ca02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPointLightDragger</name>
    <base>SoDragger</base>
    <filename>classSoPointLightDragger.html</filename>
    <member kind="function">
      <name>material</name>
      <anchor>5692340ee2c39df1ebfebd84f5164c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator</name>
      <anchor>a0485d51ef2f7b429f9e092135db5e9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoPointLightDragger</name>
      <anchor>3487aadd4014c36a8484d08e3753cc03</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoPointLightDragger</name>
      <anchor>4aad83f88f0061cfadfd90c4ecd256cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>fe56a83945fa42ba2cf36e88a93bce51</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>e0a3764dfc902bff3014b7f3083b3fb4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>c6a1f246206dd231691b0efb5785ef04</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>7175def6478387ba4740e0bb323f148b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>b8352437e08d067cfe12c4375130a2ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>36c70dcfb311a427986a201d39f3b9bb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>427606340b05b7e89cbbabe8a5318530</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6652199846dd7e5ac57cc589758401ff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>44cf8b875a7be66c73b5d5ed90efa165</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>d769c527f6a93665f68eac68805019ff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>4c8c4496bfbf83a7585fdf70a4a0de7b</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>42ee894f4a72a555438f12633c14bf07</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>85712188ff90a6653b253a3b053913a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fieldSensor</name>
      <anchor>879ab351ff47d73023b51519f4f6485b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPointLightManip</name>
    <base>SoPointLight</base>
    <filename>classSoPointLightManip.html</filename>
    <member kind="function">
      <name>SoPointLightManip</name>
      <anchor>e6869050d5f6e9cd889e81cc0be421a3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoPointLightManip</name>
      <anchor>0621f3760e070b0e6f7bfb867f3bc68d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>2111b033a736c2b3e2e4a40907263ff9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>d5abf0a04eb605c180924cdc6d6f7c2c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>fcb5fda0039e9299333f0dae490b40d1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>6841f7730313c73fdf11da53685d410a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6499c4fb66c61a4a6ce7709c7c820f04</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getDragger</name>
      <anchor>2f847237cfb4567483c925b55049f479</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>replaceNode</name>
      <anchor>66e36c3ba501846588338be6f9e336be</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>replaceManip</name>
      <anchor>90189b1963b243840fe0ddc74865d6c9</anchor>
      <arglist>(SoPath *path, SoPointLight *newone) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>7d4597eeebd33e4fcb70498bec7f8cc6</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>ba8af3f8293fc5783fcd6ef2536821cf</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>cf5035fd9ca6493ff845d1d378e7ced2</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>3dcb961b3c87b30509759e0598afa358</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>b8b641220cdccf3d2a8a2d5c8ac14ff0</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>b199d00ec8503679b5fc864599549018</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>951e1f9a20778fc9d0fa15e041b9ce0d</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>a6501d264533b6a63f9341300d0f30e6</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>3a32abafa970b50767ca42dc36c44a04</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setDragger</name>
      <anchor>ef58cc2174106ef2e1d989e8add379b4</anchor>
      <arglist>(SoDragger *newdragger)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>aedcb5ecb52fd437c743e80becb96e9f</anchor>
      <arglist>(const SoFieldContainer *fromfc, SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>transferFieldValues</name>
      <anchor>94ce078a467cff54cf221758b4fb571f</anchor>
      <arglist>(const SoPointLight *from, SoPointLight *to)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>952242b9d6a8926cd994f3cab8f550ba</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>f98064b28f20d047c06d4967adb7afc4</anchor>
      <arglist>(void *f, SoSensor *d)</arglist>
    </member>
    <member kind="function">
      <name>locationFieldSensor</name>
      <anchor>08bbb2e18f59c7500c15022ebf3f4838</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>colorFieldSensor</name>
      <anchor>12b64eae5a25a238c619a38a8b594445</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>children</name>
      <anchor>0387379c4871f305f2e4e023f41daac6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPointSet</name>
    <base>SoNonIndexedShape</base>
    <filename>classSoPointSet.html</filename>
    <member kind="function">
      <name>SoPointSet</name>
      <anchor>4c8a63a7c8aaa3bf88769ed6850c60e4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoPointSet</name>
      <anchor>4f373fac284eb3dc28b7b8a1ed8d836d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ff510681d06efe93cd44aff7a4903591</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>007a14997d772f05637fc89334b87c33</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>5fcbaf5050f6f7eadce1e2e069baac20</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>8922c66fa1b576a4aaf9ddcdeca30247</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>31c8cf8270229e1736d0d1df5471c586</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>17f44d57e8a765972a1cd694e8f79339</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>128f9bcfbb20f40abfd1ebe4e5dd6b39</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>6e4bac14c76a4560a2adcc5a312eaa3a</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>512572bfeab52723ebe142fefc6407a8</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>b7b457365b643873358322657e8fd70b</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>97a4e816e8a5fcd83e2df7610e8dea4f</anchor>
      <arglist>(SoState *, SoNormalCache *nc)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>f24186c4352779a054422f1d37755c67</anchor>
      <arglist>(SoState *state, SoNormalBundle *bundle)</arglist>
    </member>
    <member kind="function">
      <name>numPoints</name>
      <anchor>1a74a03a73e24dc5c603f06b85e9916c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPointSizeElement</name>
    <base>SoFloatElement</base>
    <filename>classSoPointSizeElement.html</filename>
    <member kind="function">
      <name>~SoPointSizeElement</name>
      <anchor>499b4f1007318b13d93a8d9ef6a54bee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>07cea265e76fffc0655e101f32c868db</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>06b7242139b25f07898a3451499cb195</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>de9118cf020eb03e4f7dcab6536f7f52</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>087278d7810b5a1f6c1540663dc640d8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>6208ec6da33165c283213b7f94b0ac19</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>cbe463ada6d456efe5b5e8f210648326</anchor>
      <arglist>(SoState *const state, SoNode *const node, const float pointSize)</arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>61c580bf06f34b737df021aa0ea26fcb</anchor>
      <arglist>(SoState *const state, const float pointSize)</arglist>
    </member>
    <member kind="function">
      <name>get</name>
      <anchor>e68c865bedd02f8972073d2472616daa</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getDefault</name>
      <anchor>7c8d144d16c4fc705fa415dcd036f697</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPolygonOffset</name>
    <base>SoNode</base>
    <filename>classSoPolygonOffset.html</filename>
    <member kind="function">
      <name>Style</name>
      <anchor>4db5d089190917a978b376151aa53065</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoPolygonOffset</name>
      <anchor>02f8b7b8a83efc7dd4cfc7fc3cb5546b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoPolygonOffset</name>
      <anchor>cc5e709aaf00f9e914901c9220e9fa9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>7d8720a004019f29fe51a82e56803986</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>661536156716cb96796652cf318a8e15</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>4b534fb919a493494816bf5a869d8a40</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>9932386594bf505e22148a3d7edc19b9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6c3d5c141038b01b3719f32870841977</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>f8ea39daf2f80c17195d52b03a6807b3</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>53a5fdd10cc957be25ef4c64a10537aa</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>f73a45aa895542aa0fbc2a8caf05fe89</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>factor</name>
      <anchor>512aaa43ae3841a504a4b022e9f464e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>units</name>
      <anchor>838e7aeb2af1bb4f72e70ab84253f884</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>styles</name>
      <anchor>1a5a1927866204d123ee922b6c87d875</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>on</name>
      <anchor>1e6009d9e08a0dda75f6457ef7b0b8b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPrimitiveVertex</name>
    <filename>classSoPrimitiveVertex.html</filename>
    <member kind="function">
      <name>SoPrimitiveVertex</name>
      <anchor>7e79937870f2277e08353c938348bf4e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoPrimitiveVertex</name>
      <anchor>334877f887ff97983e0e51da3de7cc5f</anchor>
      <arglist>(const SoPrimitiveVertex &amp;pv)</arglist>
    </member>
    <member kind="function">
      <name>~SoPrimitiveVertex</name>
      <anchor>a934b79bfc17d10b36fa2d6a2130ee59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getPoint</name>
      <anchor>c3393e08d3b1cd60e926d9a2e2bf8680</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNormal</name>
      <anchor>e218d0962df0a5cda4672cdc4da20b89</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getTextureCoords</name>
      <anchor>6a49f2f2c5c734912f102805d58d6eb8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getMaterialIndex</name>
      <anchor>aab3d06c3f889498c640d82f3da1a15c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getDetail</name>
      <anchor>cfab8e27113935ad9554d35d58b6ca17</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>97844d1534385b06edc42e1506eb28bc</anchor>
      <arglist>(const SoPrimitiveVertex &amp;pv)</arglist>
    </member>
    <member kind="function">
      <name>setPoint</name>
      <anchor>eea3393d56e981732529b6db90ba6868</anchor>
      <arglist>(const SbVec3f &amp;point)</arglist>
    </member>
    <member kind="function">
      <name>setNormal</name>
      <anchor>30679e9c4c10e251cdc3b0c770c6a9c7</anchor>
      <arglist>(const SbVec3f &amp;normal)</arglist>
    </member>
    <member kind="function">
      <name>setTextureCoords</name>
      <anchor>29b93746f0b8ad68667077a19b8a2b73</anchor>
      <arglist>(const SbVec2f &amp;texcoords)</arglist>
    </member>
    <member kind="function">
      <name>setTextureCoords</name>
      <anchor>491f21a574abd70540fac42e544313a5</anchor>
      <arglist>(const SbVec3f &amp;texcoords)</arglist>
    </member>
    <member kind="function">
      <name>setTextureCoords</name>
      <anchor>f8c7937676de20ec170bd671795e6e45</anchor>
      <arglist>(const SbVec4f &amp;texcoords)</arglist>
    </member>
    <member kind="function">
      <name>setMaterialIndex</name>
      <anchor>6485a0932d9857771927c884185d8fac</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>setDetail</name>
      <anchor>9077fa2107bf5bca97f9c404da114918</anchor>
      <arglist>(SoDetail *const detail)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoProfile</name>
    <base>SoNode</base>
    <filename>classSoProfile.html</filename>
    <member kind="function">
      <name>Profile</name>
      <anchor>48f2107358bb102cdd0edf427ee018f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>TART_FIRST</name>
      <anchor>48f2107358bb102cdd0edf427ee018f446989b1a0f33f9d35a3543099f60b682</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>TART_NEW</name>
      <anchor>48f2107358bb102cdd0edf427ee018f4c6e79bd9830a454055585968b2a412e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>DD_TO_CURRENT</name>
      <anchor>48f2107358bb102cdd0edf427ee018f4f3b82bb45f386e15b509752e8432c297</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoProfile</name>
      <anchor>3e504038720d19c9c456596c508e4bf5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoProfile</name>
      <anchor>86e1df04737b220dbbcf2f6f28f7659e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>c778be5dd882e48eff27635107fcdd6b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>dfabe7b73cf38b79b1bb398e71f80d0b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>56fc3b14d2743d36a3ed78ae063d9747</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>7e2cb1412a50c9163cd0d861293ce436</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0b95685527c1ac5fd3a6de3f5012fe34</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>0a4e3ea8f3dc2f745eb219722ea22f8b</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>d5f6a3556c4a060813c235e3a07ffaed</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>b331bd2fe81542929cbd52ff76a18276</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>0ceb0c989efd4a1d37ebec3061414d1b</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>46d5a811b9af44f07386bbeaa9a1aff5</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>11fce6cf64c8f216a555b9aecee99256</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getTrimCurve</name>
      <anchor>74d5b0d86160f6b72db9db252e9a2dc1</anchor>
      <arglist>(SoState *state, int32_t &amp;numpoints, float *&amp;points, int &amp;floatspervec, int32_t &amp;numknots, float *&amp;knotvector)=0</arglist>
    </member>
    <member kind="function">
      <name>getVertices</name>
      <anchor>9f959456c283195a78c7c6ec4977ed2a</anchor>
      <arglist>(SoState *state, int32_t &amp;numvertices, SbVec2f *&amp;vertices)=0</arglist>
    </member>
    <member kind="function">
      <name>index</name>
      <anchor>118c0bd44fa34d6e2a2307cafac2fa4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>linkage</name>
      <anchor>3968857494b068a53e0bd6b790fd45eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoProfileCoordinate2</name>
    <base>SoNode</base>
    <filename>classSoProfileCoordinate2.html</filename>
    <member kind="function">
      <name>SoProfileCoordinate2</name>
      <anchor>c875afacda9d8461e66321c2ec8f71dc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoProfileCoordinate2</name>
      <anchor>aed87ab48f0010a940e888797e852b9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5961195ca65af124c621f31ca43cf622</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>734d5c42a0e0354d38a1907dad33f834</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>5e0e06ca3ecc8417f3e20ce41e2ef561</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>46106d623cc98fc66c17974a38f5bc5f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>255184f2aef0bfd6f84f90ce951b672a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>e2214aa16fe421527f37c1607ede871e</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>56141357d6523b00360945c1359dbef1</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>b4dfea889db07874300f9105e9b05fec</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>5925f1c9e9395661662cf5dfebd15aa7</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>1012bf2224bb07516ea88516f594653d</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>1dfd7c64d2ddb1ec29f47c28b5fb6d0a</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>point</name>
      <anchor>4d5fea11479fb8b72acbffb833490dd7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoProfileCoordinate3</name>
    <base>SoNode</base>
    <filename>classSoProfileCoordinate3.html</filename>
    <member kind="function">
      <name>SoProfileCoordinate3</name>
      <anchor>83842009f7c1cba2b4ab1cecffc6445e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoProfileCoordinate3</name>
      <anchor>7bee50aa0ccfaec01cede91332577055</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d43dfd5d15da420b772ac8e59a75b284</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>019b9e118da1781d39f25426b5c7018a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>a06f05ff200e405cb3eaecce32d5526e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>40749986f7983eef3de3b2d2e71bab3d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>46f679b1e3366062470710bd1c6782b5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>1b275c3d5885520c05b33f9bde0c6536</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>ab08dc6ab88e6d319267bb33cff3343e</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>becd63f3a60bfa1b5ddc85495f2f9d03</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>f208d796dc9bae9b9d4d2f8a3ebfb224</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>0d51c0fa0fd10477d77634c808d80911</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>point</name>
      <anchor>e1f2958d22ff9e3965d7a83efd485c84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoPSVectorOutput</name>
    <base>SoVectorOutput</base>
    <filename>classSoPSVectorOutput.html</filename>
    <member kind="function">
      <name>SoPSVectorOutput</name>
      <anchor>f7d869932b81b4681b7644857f602765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>~SoPSVectorOutput</name>
      <anchor>8e87520959156dc78351e8aa8bb49d06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>setColored</name>
      <anchor>14032dd453d668c868c50306b73c91e8</anchor>
      <arglist>(SbBool flag=1)</arglist>
    </member>
    <member kind="function">
      <name>getColored</name>
      <anchor>21d4faddbc129e513fa5f4d181c8ccbf</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoQuadMesh</name>
    <base>SoNonIndexedShape</base>
    <filename>classSoQuadMesh.html</filename>
    <member kind="function">
      <name>SoQuadMesh</name>
      <anchor>09af3a753f1a96185756c8b4ff8374d6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoQuadMesh</name>
      <anchor>a87bbf7bf8313b31a617ca7bc3d9ab06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>c699cb244783de741077153b9be63c53</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>1a0a036c6103de2ff1ae1f7b54e6ae19</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>ca471fd66cee8e3fede8263973cfe929</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>92c4a779bf9b6131a20f2a37eba682f3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>bd3436f32c3c27c9ac93f4134caba922</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>333a726bbacb445e698431edaeeebb76</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>d603319e47062bd6a389b5fb8c1dec7c</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>c103058142beca3a46976b0572082953</anchor>
      <arglist>(SoState *state, SoNormalBundle *nb)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>a883a16a18b585c529b616728044477c</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>a84e90b7a45a470f8ee18023eda135f1</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>deca0c1c50aa3c061d7e8aa8de2d602e</anchor>
      <arglist>(SoState *, SoNormalCache *)</arglist>
    </member>
    <member kind="function">
      <name>verticesPerColumn</name>
      <anchor>94d6ba88c902d679fb3fcdcb99650618</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>verticesPerRow</name>
      <anchor>a1a0a9413d7cd1b21d1fed1d1c10497d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoRayPickAction</name>
    <base>SoPickAction</base>
    <filename>classSoRayPickAction.html</filename>
    <member kind="function">
      <name>getPoint</name>
      <anchor>3590a18cafab2ae5ef5e55d960867666</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoRayPickAction</name>
      <anchor>37dfa9cc373e091f90d44acd0e9f15c5</anchor>
      <arglist>(const SbViewportRegion &amp;viewportregion)</arglist>
    </member>
    <member kind="function">
      <name>~SoRayPickAction</name>
      <anchor>5a29e1620f7b13a1a285f9f44f42f0a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>1e829cec1d44f322cb51a3ba3fcf0105</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>bafd06d29ceaf2b0d28b29e0c6327d99</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>77b5147f4fd6c17eb49e687719c0d5bc</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>9592ef21c9795726f0647ab74d2cc795</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>0980a786784b0ea331a1479a1a41c715</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>b57952e5f601ed2cddf7dfa886be9d6b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>94f617c71e82ed497496aa572cb48bff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>11188062f63724030c8272b91a8d1f9b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setPoint</name>
      <anchor>70e6bdc9b5a5a649b3a76763ba0a1757</anchor>
      <arglist>(const SbVec2s &amp;viewportPoint)</arglist>
    </member>
    <member kind="function">
      <name>setNormalizedPoint</name>
      <anchor>6e0d7dfc5120410e69d92fcf89967240</anchor>
      <arglist>(const SbVec2f &amp;normpoint)</arglist>
    </member>
    <member kind="function">
      <name>setRadius</name>
      <anchor>6bf83394f1cd7b6cbd7eb35c38045216</anchor>
      <arglist>(const float radiusinpixels)</arglist>
    </member>
    <member kind="function">
      <name>setRay</name>
      <anchor>ceef8d6b18e7ae88a2c67c305d6b6763</anchor>
      <arglist>(const SbVec3f &amp;start, const SbVec3f &amp;direction, float neardistance=-1.0, float fardistance=-1.0)</arglist>
    </member>
    <member kind="function">
      <name>setPickAll</name>
      <anchor>95f20477fd6206c4a7d5c6776918d44e</anchor>
      <arglist>(const SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isPickAll</name>
      <anchor>acb421565b5b7ea0bf9448717ca9d1d9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPickedPointList</name>
      <anchor>5016b47568897c0d5063c799fa383d01</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPickedPoint</name>
      <anchor>5f0b0034166fe3a8e291d2dd66c5049a</anchor>
      <arglist>(const int index=0) const </arglist>
    </member>
    <member kind="function">
      <name>computeWorldSpaceRay</name>
      <anchor>c18eed9a9c6b28a470aa4f070b917a4c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>hasWorldSpaceRay</name>
      <anchor>ad6922ca997c2092cc1bc30fa90bcabb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setObjectSpace</name>
      <anchor>7f897b7cda2949315969c7788f10895e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setObjectSpace</name>
      <anchor>fe9401227afb3b21c1ab78938d899b16</anchor>
      <arglist>(const SbMatrix &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>0d892e624bbc65bc1794723bd065bfdd</anchor>
      <arglist>(const SbVec3f &amp;v0, const SbVec3f &amp;v1, const SbVec3f &amp;v2, SbVec3f &amp;intersection, SbVec3f &amp;barycentric, SbBool &amp;front) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>5271fd7f31710162cb1ade43062999a1</anchor>
      <arglist>(const SbVec3f &amp;v0, const SbVec3f &amp;v1, SbVec3f &amp;intersection) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>a0217858e58d40ec1198d04cfc4d34cb</anchor>
      <arglist>(const SbVec3f &amp;point) const </arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>228c1f3172ca1404e65436265c4c35f6</anchor>
      <arglist>(const SbBox3f &amp;box, const SbBool usefullviewvolume=1)</arglist>
    </member>
    <member kind="function">
      <name>intersect</name>
      <anchor>14f2b65d9eee5388f970de084c9275e3</anchor>
      <arglist>(const SbBox3f &amp;box, SbVec3f &amp;intersection, const SbBool usefullviewvolume=1)</arglist>
    </member>
    <member kind="function">
      <name>getViewVolume</name>
      <anchor>9005ceea2d4e5d07d8536e994b51eb9d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getLine</name>
      <anchor>31d06df83d998c24dff43eea854f830f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isBetweenPlanes</name>
      <anchor>edc5c6f951d8707630799adf1b46ef71</anchor>
      <arglist>(const SbVec3f &amp;intersection) const </arglist>
    </member>
    <member kind="function">
      <name>addIntersection</name>
      <anchor>3ef2055f9a02115191844ff0ab244c4c</anchor>
      <arglist>(const SbVec3f &amp;objectspacepoint)</arglist>
    </member>
    <member kind="function">
      <name>reset</name>
      <anchor>f773d716c3fe7f26c59510c1dc63b6c9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>beginTraversal</name>
      <anchor>4660d704917cfe585b0b136bb3e582db</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoReadError</name>
    <base>SoError</base>
    <filename>classSoReadError.html</filename>
    <member kind="function">
      <name>setHandlerCallback</name>
      <anchor>32742d0b1727d0b7117cb98bfe3a0ab8</anchor>
      <arglist>(SoErrorCB *const function, void *const data)</arglist>
    </member>
    <member kind="function">
      <name>getHandlerCallback</name>
      <anchor>77e27e7a9be416fa9def2e58c9f3fd28</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getHandlerData</name>
      <anchor>35f8f845fbb61e5f9dc80f57d55c8f4c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5e9d80df455f5a9410692321d891a11c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>b063fbf1debb6520b343d322d30a9466</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>post</name>
      <anchor>bb0df08919ae8b6e01594c0b30f853eb</anchor>
      <arglist>(const SoInput *const in, const char *const format,...)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f4e4970d669b5f55d13525868dcbb593</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getHandler</name>
      <anchor>5888697ba98f08f2fa9a305b19b2c963</anchor>
      <arglist>(void *&amp;data) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoReplacedElement</name>
    <base>SoElement</base>
    <filename>classSoReplacedElement.html</filename>
    <member kind="function">
      <name>~SoReplacedElement</name>
      <anchor>a616fc07d9945d27c12302aeafe73144</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d8f5e1d65e1f2525d9d7fbb810590224</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassStackIndex</name>
      <anchor>c0245e58f1cfe16ce0371aa3417313dd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>547310fd47e760377b0727cfe3f5747a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>ca56a97e24325fb4892226e6ef43e23f</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>matches</name>
      <anchor>ee36b6c58ae4061d5088b458cf202563</anchor>
      <arglist>(const SoElement *element) const </arglist>
    </member>
    <member kind="function">
      <name>copyMatchInfo</name>
      <anchor>b0ee93ac77371446b6f97b8be6b87f8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>getNodeId</name>
      <anchor>02dc63142ee10f1e8b9badece0d84264</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>89573f9676df2ca3b5c638fff73005d4</anchor>
      <arglist>(FILE *file) const </arglist>
    </member>
    <member kind="function">
      <name>getElement</name>
      <anchor>70833996b60d53f3e54ec90a3ea9fab5</anchor>
      <arglist>(SoState *const state, const int stackIndex, SoNode *const node)</arglist>
    </member>
    <member kind="function">
      <name>nodeId</name>
      <anchor>7695219e8870f983e6960e4dcbbe487f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoResetTransform</name>
    <base>SoTransformation</base>
    <filename>classSoResetTransform.html</filename>
    <member kind="function">
      <name>ResetType</name>
      <anchor>ff3d681c2399f5be778097f94b5598fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>RANSFORM</name>
      <anchor>ff3d681c2399f5be778097f94b5598fd30e7fa82d5edb52fd10ef75087eeea02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>BOX</name>
      <anchor>ff3d681c2399f5be778097f94b5598fd1e28c5eef811d69f90d9b35a2a4281e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoResetTransform</name>
      <anchor>6f223c1f80bdaed3cf021e2ec1ab3fac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoResetTransform</name>
      <anchor>6e9f0ac70d6071466fb20283fa11e352</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>00224f79c99d5e94fb84014871fdfefe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>aa61a17140f62ee8bcf06d6d28b57151</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>1cb103aeacf7d84fe68f530e86f08631</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>b43066b5e78fbbeff4b4449a77bb9146</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>e4c0185aaf05ca7838a093a037a0151d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>786e52fd7761b645eccc492a51c1d8ab</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>58ade0f96858be2d49389b473bb0ac4a</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>3ddc94dda88983aef61664c54b11c54e</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>fb5eb44b6a3b429625859f4509a002b7</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>d00a46bc69090b2cb2f1d254384ac278</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>f6403b701a6942d564799045afd4a990</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>174f1ad85fe18c5062e8dcd28d570b1b</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>whatToReset</name>
      <anchor>fc3702d55c848d7e5b235f65aa20b40d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoRotateCylindricalDragger</name>
    <base>SoDragger</base>
    <filename>classSoRotateCylindricalDragger.html</filename>
    <member kind="function">
      <name>feedback</name>
      <anchor>e582ae185c6a336b33d1b970f06d4c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackActive</name>
      <anchor>dbc2c867ae1d52c8227a20b6016238a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackSwitch</name>
      <anchor>4f21b114b7805ffc603a5398c3bd7d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator</name>
      <anchor>debbf179113bb0f8d560d8f6731f0eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotatorActive</name>
      <anchor>aa29b6fb7c043e2016f4657bfcbe81bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotatorSwitch</name>
      <anchor>0b3f029986b279a61713fb1460155a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoRotateCylindricalDragger</name>
      <anchor>1576d6ec1c2fa52d52492ccda1754712</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoRotateCylindricalDragger</name>
      <anchor>b1de25a1fb6a1f96bbea4b1800b00eac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>0297a8fe71e59193cc5dcbd0c54928e5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>2d015e5e42137896081a72b301d0dd22</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>f6b943efd25f75bc8f5ea2454212f9ee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>52d47555f787b9ebcd334ce4adf778ad</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>0f0d8fc0084a08a052a7a58400d1438f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>04d6fd604865f17f2028faa215671c6a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>09755132c1ca31692b8f3fe76450456b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>91c5c6454369855ce433b8a08637ce16</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setProjector</name>
      <anchor>61e172fd0a872b4605fb7c5902e7870d</anchor>
      <arglist>(SbCylinderProjector *p)</arglist>
    </member>
    <member kind="function">
      <name>getProjector</name>
      <anchor>325853a7dc6ca28ddc48203ce0ffe1da</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>f40d2b18be0d65f38fde4df2a1dd0dbf</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>4de8d8137a749fa823fb6655e47e955b</anchor>
      <arglist>(const SoFieldContainer *fromfc, SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>startCB</name>
      <anchor>365fff9bd6a79f2c6f0b9e557ae97622</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>motionCB</name>
      <anchor>afb368f2ed9f6b7c33676c5051a6e587</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>doneCB</name>
      <anchor>23107d6770d73da8f0ce88cf6b417650</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>ecf1ea6c9c1d1b2ef1979a1003bb4408</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>c37b6fb32f773f1f3f392c532fea7abf</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>587148eb9e57eb2754da618d830c44da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>74625712c2b7eeae4bc681ac4dcca959</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>16e5ae1322d35d8c4deb178d72abbc7c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>89906f8dd833222624b9cde2d239bfe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fieldSensor</name>
      <anchor>8060a49fa34c4f86a473d718428cc9d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>cylinderProj</name>
      <anchor>71b51e39aef999f7cd1e8362b3963d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>userProj</name>
      <anchor>fe3103c732a13e57cc7d52a3d7b6a007</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoRotateDiscDragger</name>
    <base>SoDragger</base>
    <filename>classSoRotateDiscDragger.html</filename>
    <member kind="function">
      <name>feedback</name>
      <anchor>13f40cda0cd57b8bafde11d4e82d26b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackActive</name>
      <anchor>43d0e677ef0b9261730758437ad8c99a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackSwitch</name>
      <anchor>28b62a502b7697a2b7a93d22e6290eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator</name>
      <anchor>85c4875fe8e5f36350e3bf7044460b85</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotatorActive</name>
      <anchor>c4bdcca71d07109eb69af31dd595189d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotatorSwitch</name>
      <anchor>7bb61485a9e9c4e5228b7a9baccc53d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoRotateDiscDragger</name>
      <anchor>c5c60319ae6700651f7ea7ef37ccfbd9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoRotateDiscDragger</name>
      <anchor>5fdae9d75eff49051454461fd25710b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>76479f70f289702a4a57c5d920f09e64</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>276df1361d13996e0a280ce45e61b176</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>149a234e3b987fbc68b74442108adf05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>a03057718261c27c805b3a21881ab8c8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>54066d0be87712ff777bc83008affbaa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>aeb9d2e4e2d15b3f0df359b025fab843</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>852284a8ec640ac5a3ccbdb41f52d329</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>9ad98261f9187397ce421d0042d37451</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>96bf24d5f680f1e760e0f016853138e6</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>startCB</name>
      <anchor>e093a5b08aee1e26cb3617cf91b64472</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>motionCB</name>
      <anchor>c91297ac0091128061072900a6e55615</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>doneCB</name>
      <anchor>a92483f5f670b3f26ec0d8be90bd5acf</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>5cb4f8a6750f51de861634ce0c1fd26d</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>e82f815ed76b150e05b94e337345938d</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>16bc68f9ede7e33b60027f14602781db</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>3cda5577b1318a54f4154cef1910aee2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>e2d0fb22efa807eacc07d9181e6a377c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>069a5c9dcf02b23418e2eeb0bced07fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fieldSensor</name>
      <anchor>5aad4a074bb96fdb3623fb19af2f1df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeProj</name>
      <anchor>03c75b8753db45e3496d59f076e26734</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoRotateSphericalDragger</name>
    <base>SoDragger</base>
    <filename>classSoRotateSphericalDragger.html</filename>
    <member kind="function">
      <name>feedback</name>
      <anchor>a39129e1a5e8aa0604569f35ad2310cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackActive</name>
      <anchor>b440ae6211b189a7b3a08e925e62c5ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackSwitch</name>
      <anchor>8f17eb5e2e47f834dbf9c3e859fc852c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator</name>
      <anchor>e84da27e55de37949c8882602a14b734</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotatorActive</name>
      <anchor>faf71204215c4c681b2af0f6dadd5cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotatorSwitch</name>
      <anchor>46fb8cbabdbd1462288dc74ed71b7da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoRotateSphericalDragger</name>
      <anchor>1feff0d736ae22ffd2f6bc1be8cd0aba</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoRotateSphericalDragger</name>
      <anchor>2c412ffbfba60c0127c8d3770221edf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>cd04d8fa30acf5b2781516002d6d4af0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>8923a30ba906a813b785a630257cd7c1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>fbba13bcc315ecc976b67e05ca94a559</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>2666d4c9478786b3e102b83f74e1877b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>cd4bbc0748f1a86e832adc8f9640160c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>8e22f7ca80e5069073e1f0c986f6e368</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>e3b45c9ebb25be18486ce22be7cc11ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0161a8fc66734db38f06fd64bee2880f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setProjector</name>
      <anchor>e3825a3b498f47dfcf9c7fb58055f094</anchor>
      <arglist>(SbSphereProjector *p)</arglist>
    </member>
    <member kind="function">
      <name>getProjector</name>
      <anchor>3fe455e036af1f289ace4789d5ab12f7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>6a5026b71b69e6ce450b480056582ee6</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>5dd74d015b255ce0ff16196a1ff1bb8d</anchor>
      <arglist>(const SoFieldContainer *fromfc, SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>startCB</name>
      <anchor>5570f1b4d693f3e91a5372d4f53ac936</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>motionCB</name>
      <anchor>8e5753b12b20aacd0314221592b62fe8</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>doneCB</name>
      <anchor>35bfa6e9fbebdcd67a98126afefb1be9</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>f988e14e76c6c1c77832395957d4746d</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>4573ed592f6d37fd15eae67c5977bf4a</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>efcafb68da8f20710cff3b398e7651b6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>0bba9a063c2b125332524f066828110a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>113b5b601700cada470e9d7ea77c5337</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>94ddf31783821b046146f0a3800bb010</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fieldSensor</name>
      <anchor>673df6cdec09a303f4dab90ed82fd7b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>prevMotionMatrix</name>
      <anchor>aca0e39d554e98d2227101c98fc749a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>prevWorldHitPt</name>
      <anchor>5e75bf09769317d1bc22c3c748c0bd73</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>sphereProj</name>
      <anchor>b0229ed1c29e2d55a254a23dff0ff001</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>userProj</name>
      <anchor>38954f54b35212da972d69f2126805ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoRotation</name>
    <base>SoTransformation</base>
    <filename>classSoRotation.html</filename>
    <member kind="function">
      <name>SoRotation</name>
      <anchor>fe0b58625a11c76516572e4b9f03c01e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoRotation</name>
      <anchor>85cd42ea491be5acbe30b86a4b89ab25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>565a175c93b34ddfac90bc55867bc30d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>00960cfef491ac369a5a0dd6612d8d1b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>2ee7e38f56c1c6a7f97419b7462cdcbf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>b1e426fcb1a8a7be44695603c83fe087</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>683296f71cbd0b377c6e1c402ad0e3ef</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>4ac099c6d0f3cc1259db1b1ed84a9b63</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>3e15e394a55ba13674bab97ba8401c46</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>d88d8bc2a75a72799b5ada4a07511277</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>1888b9f40d6bfb4c8241bee42b578804</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>8e800eac71d7ce33a35f4cafc09d800c</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>9f28f3f94a2dd3070ba0567735aa99a7</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>03592c03beb0430fa96705ee90bca1de</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>a9846ffb82adb6d7519b9a8131bd7841</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoRotationXYZ</name>
    <base>SoTransformation</base>
    <filename>classSoRotationXYZ.html</filename>
    <member kind="function">
      <name>Axis</name>
      <anchor>fe6a3f9d0f3a142fd2b57309107df652</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoRotationXYZ</name>
      <anchor>82135baa87e2cbafc71f759af2128c63</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoRotationXYZ</name>
      <anchor>ece4b4636ac1a69b92ce6ccd9807582e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>3b531df47e8939a5e04ef77ceeee828a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>238ef7357c75a5bb8f8a7c2f3e73fd04</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>b49f2e69a79e5bfbd90a663ebfd4d2a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>3af368d511633f0eff62a23615bcda2f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>559e0428b40402957d4b026b6e46dbd8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getRotation</name>
      <anchor>e13228a315a58efa60028a9a5ad32ae7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>443531482f75661c618f22fbe91e0e06</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>91151eb20d89f40741c3ac813fb6028a</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>da54450b77b2125c9544e1703a557d3c</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>cff15a0aa6f54da5d4adbcf3867d6e38</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>f38414390917f72aa8f0deaf837ed71e</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>ae2d92051f1d6d8e81bb1fab5f5e50c1</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>6405efe39290ac9d5455012bfb139f81</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>axis</name>
      <anchor>48ba83de70eb76dd5c759a9a46df405d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>angle</name>
      <anchor>ef535eb2cb783e7d471c69c260663e12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoRotor</name>
    <base>SoRotation</base>
    <filename>classSoRotor.html</filename>
    <member kind="function">
      <name>SoRotor</name>
      <anchor>3239f2beb405d148a8feb1a0c7cc0af9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoRotor</name>
      <anchor>976dd20ce4f6c5a9dd8185f2268b8a5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>0ee1cc9dcc8720dd246f1cc9afd22c77</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>79a3a90046026758eb796f44251d9db0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>4cbca288bf22fb5c332365293942e46e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>c17cb7238cd11c31abf18e13647766e7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>862c23cdf039fe63481885b6b7d408fe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>speed</name>
      <anchor>4ff0665a5105f700ea616b734e2e0762</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>on</name>
      <anchor>2d244bc7275f8e18e89c9dbeb9ae93ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoScale</name>
    <base>SoTransformation</base>
    <filename>classSoScale.html</filename>
    <member kind="function">
      <name>SoScale</name>
      <anchor>7c1f8c21438519f68b55ae497093f835</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoScale</name>
      <anchor>afe18b05caf5415e806c9791a507ffe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>3c9e9559373d06ce29b8a984f52335fe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>cf46b9652708b274e4d57d9f045d8bc7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>ad0b06441dc9d521f68a7447b5ee3a3b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>fea2283f7ef4a395b8be577fb5efa502</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>cb06ad2ec8f2864b27fb11e160329623</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>13b33513fd03d57159f79e07716688bc</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>9a581bcc7062f8efb882a5c0b178815b</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>5a9e70ada8899868ffd30a1cfa1e8a76</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>26ace8bd21c4e4b87b38131446f71c14</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>b70992289c7c98d1e696194e78c2985b</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>288ba850f2c90cb484cc68042c5ce5aa</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>2d033efcd51a17ce4affc02832d2f069</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>2c15dfda105af447adf43732e6dc435d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoScale1Dragger</name>
    <base>SoDragger</base>
    <filename>classSoScale1Dragger.html</filename>
    <member kind="function">
      <name>feedback</name>
      <anchor>a76d2ab0b10cb1923297924f66ee85ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackActive</name>
      <anchor>fea3f5a43728870a71d5627fab431f3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackSwitch</name>
      <anchor>3a02595b5cd1955bc8337ac6bea54b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaler</name>
      <anchor>6596e43befd0732d425be3222a71ac47</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scalerActive</name>
      <anchor>5d16b8ff7486b4afa129be460b1043b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scalerSwitch</name>
      <anchor>3df1809742da67f7410f490df7c982f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoScale1Dragger</name>
      <anchor>cde979a70d10da9e06a93214c997e0dd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoScale1Dragger</name>
      <anchor>f9e373488fdb7b35c12cd5e755018b0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>2af6a8ab49227b301561d4ead276315d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>9e622008ca6db12ee70e67ade120f197</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>1e97e4266f14822bf4a1fe816fd78785</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>a191c1645f7a852807e7d93aaf660fc3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>8af8c9de335f26bbf9db970162453572</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>388152d2e8e2d63c99e1386c4c2b9dd7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>153842a55ba231527bd8cb1a4c8cacb2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>2dcacd349309df483b1f775f7ff1d504</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>0b0b06df8f3b03557b27f5160858e561</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>startCB</name>
      <anchor>4d68fbe72ddcf18ef97feaa96c51e42f</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>motionCB</name>
      <anchor>d6671e8ded80da32d413ac54d95f6488</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>finishCB</name>
      <anchor>1ca12e641755e03cc5cb0032e55ddc16</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>179154b8e63920a2d5d1c47c9aba9287</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>5fe948d97c701582d0a2eb4287444f81</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>c8a4da3c02c861794e1fd8304309fa08</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>b328301856bb4c91881bbf4a8cb9a464</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>88c7a0da9053acaeead1a4511c9071cd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>2b22f368228ca79173060e08ef3c6833</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fieldSensor</name>
      <anchor>1e9aaa7992bd63d099455692422739a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lineProj</name>
      <anchor>25f0b322918e79d9cef5bd77c901d9b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoScale2Dragger</name>
    <base>SoDragger</base>
    <filename>classSoScale2Dragger.html</filename>
    <member kind="function">
      <name>feedback</name>
      <anchor>91a1d22fb47468043f022a4a3e78c7ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackActive</name>
      <anchor>9da608dc809b80f6a9c861488aab5d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackSwitch</name>
      <anchor>bbc378d933e293fdf618ab130253874e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaler</name>
      <anchor>ebc3e64a2f7d30c74f9d72fe1ebf6843</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scalerActive</name>
      <anchor>6ef273da2a2484c021097d636d39086c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scalerSwitch</name>
      <anchor>0426808e8fb0194257509e136a577428</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoScale2Dragger</name>
      <anchor>3a28953c0a7bdc84354977c40079687b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoScale2Dragger</name>
      <anchor>5e63822dd92b4f52316b93536d3429c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>9a16ac1aa4f8a5941566b53ae23a678e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>fc3fb96c1577cda94d101714a032b0d4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>2eface54b95f5a05b41bbe0206a96ce5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>54c3e06beb679119a3bab703df95ee73</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>84ae4a62e91ed1505febd5b2b06017a7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>888b5714c0d039e30ebaf5caea8164c3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>d1cd544c55ee7ac67c399998f9a4ae21</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>64053c89b3b9033699ad997864697459</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>9e3b039533c33bc2f2699ef1587321ec</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>startCB</name>
      <anchor>27b640e6c194f3f497614e5650507245</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>motionCB</name>
      <anchor>4290e9c9b99ba1658e34e5bb769718d4</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>finishCB</name>
      <anchor>d92900ac401291bbd88f0723b613c18d</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>2b812bdb928af8b75722bd3dc9b72ee6</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>ddba00eb29278293c77a2e3576e730eb</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>f8f708039384840c14ca813c1408f11d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>f9fd08100fd09a43f5eb27808624ef7f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>9613c4614f6ca8d676a5391267c69fdd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>ef6777f9908ab236fb6b71d0ee404796</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fieldSensor</name>
      <anchor>8e523be0ff6c5d8bf9723e7c75be2fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeProj</name>
      <anchor>a76640487b6c8778e1378a61ae9ca861</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoScale2UniformDragger</name>
    <base>SoDragger</base>
    <filename>classSoScale2UniformDragger.html</filename>
    <member kind="function">
      <name>feedback</name>
      <anchor>eda1dea37e2635cb140d32f92f81f72a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackActive</name>
      <anchor>4e31e198e36b1f744f061c6fec16399c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackSwitch</name>
      <anchor>91d75cc1306a407b4394626d445b8299</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaler</name>
      <anchor>47d885cebb2b91b68d6db25fdc3b3a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scalerActive</name>
      <anchor>5eb16ce18dab3fe91edba846a5586604</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scalerSwitch</name>
      <anchor>111f3eb748b482cce20e3a2aa0ade7ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoScale2UniformDragger</name>
      <anchor>80c5220b90ae41b0812c464a6de76078</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoScale2UniformDragger</name>
      <anchor>167c0488128851f686b3a32354fbc740</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>68248e67c51a77a373fe53132c09407e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>4f1b245c13e08aef0b685865c41fe6e5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>af61d1dcc3fc7b24bd1f896f9c10f06c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>9cf1e366501bb235075afe954fa3b62f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>4ee5ec61cca8fad04692095736fcb4b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>ba612162cccc9b94f7d79db023e16360</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>3e6d4e81726b22a07b9e4fb3b34f3de8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>794abc8d9b46c324254218a22bded50f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>250801df45e16fd19d0a3f38987cd5dc</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>startCB</name>
      <anchor>29e8b39ea478fdc5ac4f9dae3e12e7f0</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>motionCB</name>
      <anchor>318051f6db4cee2207ed38d5e28736c9</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>finishCB</name>
      <anchor>ae5f963139d44413fedc0b101ad14950</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>a5ed45e317cfb462d492c75985e378f1</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>699677ed37c5533a0ead9de9f5281b75</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>224a4ae47ed96214db95dbef4fcd8cfe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>91c0e229a2f6dcc3471651c01f8329d9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>eb9a785e3e2fb26c2bdd38df0ae71e7d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>593f703d9ea5347e3342c3efc0da52d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fieldSensor</name>
      <anchor>c7c108b85a61466962eafafecfdf4b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lineProj</name>
      <anchor>f4391e83645414aa15b9b394d638322e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoScaleUniformDragger</name>
    <base>SoDragger</base>
    <filename>classSoScaleUniformDragger.html</filename>
    <member kind="function">
      <name>feedback</name>
      <anchor>efe2343aa9dd6e1756270803f2481222</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackActive</name>
      <anchor>f465514d7dc7649c845d638198832e96</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackSwitch</name>
      <anchor>1269c87b5db65f4d030210e7e381e718</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaler</name>
      <anchor>06de0cbd05d6abd811f30e66023cf7a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scalerActive</name>
      <anchor>f5cb45146109943a9d7f3f06fc75b278</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scalerSwitch</name>
      <anchor>7f11bcefb09af3c2b8cd79050678601a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoScaleUniformDragger</name>
      <anchor>c2530ac40d72d7256296f628de39cb50</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoScaleUniformDragger</name>
      <anchor>e04f72d3e5e26b086c99beb1e8ece077</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e5b8baa282a4e3cf1de924233d705eae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>77e63a6f0bc0b0f395c2e2a1b7543f1c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>222456f7c05ef08fb1fc641321d7be2a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>0fd8428e9ed86bee0fb8d00e88b2d09f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>1f2fffbb4f031ccda771551b2b02ed13</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>d8a07b4975295534464f5d2084daaa71</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>1f63b016392444b1a1fa81e659555661</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>b63b113a0c74b79170d8b633e0d3db53</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>965155082b249088e74a46500e79eb65</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>startCB</name>
      <anchor>6b04d388f1fadad5907b13a130f334a9</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>motionCB</name>
      <anchor>e739733fedf6a1f3281104b0ae5a1ae0</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>finishCB</name>
      <anchor>0a14db706f1058c5d6f493442a963b19</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>ac5e76b37900577833c987aef6d89544</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>b1c98b3b8256a68f979927aa0f816b07</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>e166f332746592d89502464e1b84934b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>e0dc7068b0ec55d36fa06c4dbb63bcfd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>df4406d3bac0423745e83e5f3f52613b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>479906996b2b456ca9a99bde2de50331</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fieldSensor</name>
      <anchor>b9e6c8e3165faeaa783cb0c3b0d31227</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lineProj</name>
      <anchor>953ac58b6edac0c6fe863f6d98688d98</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSceneKit</name>
    <base>SoBaseKit</base>
    <filename>classSoSceneKit.html</filename>
    <member kind="function">
      <name>cameraList</name>
      <anchor>a1080159f4ceaf1f9f3fe1f3c45813e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>childList</name>
      <anchor>36185694f6613627db26eb70a9c92acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lightList</name>
      <anchor>dc3add4eef6d9c2892f03045884f8d78</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>topSeparator</name>
      <anchor>a050d797520b4899c9e4c35c7ddd85df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoSceneKit</name>
      <anchor>29306e4350339ca1b6b7e8604834cdbd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoSceneKit</name>
      <anchor>580c20f02f4127be29fa3732d9ee6546</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>93135c709e2f83f46d12dba9d786ad74</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>d720395694ac3a9715a0e33d0ee4eb46</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>edea2a38ded88dae717a743063d7851e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>0c498e62e50adf1d211536a0ac1522a7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>63c0e6987b267ef2b6c32ec89b4ba226</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>5c9a13a0547ffb806704df910a8cc73f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>0920099269d9e202ac44c73d6b2b45bd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>31d0f5b95877990d21eb2b2ce9a49290</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getCameraNumber</name>
      <anchor>44698e6b485d82d53f5e99a61d7dd932</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setCameraNumber</name>
      <anchor>9b0cbe5e738ff48e9fcd643a1d680b30</anchor>
      <arglist>(int camNum)</arglist>
    </member>
    <member kind="function">
      <name>affectsState</name>
      <anchor>d0503e23ee8237faf31d802ac1f1d313</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSceneManager</name>
    <filename>classSoSceneManager.html</filename>
    <member kind="function">
      <name>SoSceneManagerP</name>
      <anchor>0ee863e87116eacb4b5f117aec774239</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoSceneManager</name>
      <anchor>9704986971846565065a072c99484806</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoSceneManager</name>
      <anchor>210e1ab4142ed3c45f1e476eab4b9bf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>render</name>
      <anchor>ca24b93ab9b2f97db133e1a452078471</anchor>
      <arglist>(const SbBool clearwindow=1, const SbBool clearzbuffer=1)</arglist>
    </member>
    <member kind="function">
      <name>render</name>
      <anchor>2af52452d45d58937bc0eeb3b430d153</anchor>
      <arglist>(SoGLRenderAction *action, const SbBool initmatrices=1, const SbBool clearwindow=1, const SbBool clearzbuffer=1)</arglist>
    </member>
    <member kind="function">
      <name>processEvent</name>
      <anchor>164724acbbba552857a20b55cb68cf8c</anchor>
      <arglist>(const SoEvent *const event)</arglist>
    </member>
    <member kind="function">
      <name>reinitialize</name>
      <anchor>0cef7afefe475fb47e0030b6693875a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>scheduleRedraw</name>
      <anchor>fb650803938936b1fb57c73aa89dcf17</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setSceneGraph</name>
      <anchor>1f41bd4e9b94ecd066a649f6c9b44b30</anchor>
      <arglist>(SoNode *const sceneroot)</arglist>
    </member>
    <member kind="function">
      <name>getSceneGraph</name>
      <anchor>26a4b7740e81dbd521fe0c19e0d71712</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setWindowSize</name>
      <anchor>fc73c9086f66e7474e11c25557a425a1</anchor>
      <arglist>(const SbVec2s &amp;newsize)</arglist>
    </member>
    <member kind="function">
      <name>getWindowSize</name>
      <anchor>32fb4f23b81fb2e64c824fd878bbe456</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setSize</name>
      <anchor>4cffa44277eeddbb65a94e0b4e76ba9c</anchor>
      <arglist>(const SbVec2s &amp;newsize)</arglist>
    </member>
    <member kind="function">
      <name>getSize</name>
      <anchor>a99bc0ace36b4e2770f9e97c65b48f8d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setOrigin</name>
      <anchor>6853b808d00023c2dadc2547235eedc6</anchor>
      <arglist>(const SbVec2s &amp;newOrigin)</arglist>
    </member>
    <member kind="function">
      <name>getOrigin</name>
      <anchor>e693af509802bd2d8eee8869a9d1578b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setViewportRegion</name>
      <anchor>c5299ca92d36220e4c273435135eb118</anchor>
      <arglist>(const SbViewportRegion &amp;newRegion)</arglist>
    </member>
    <member kind="function">
      <name>getViewportRegion</name>
      <anchor>1b8f9a7f6dddc580dcfe1649d813b0f5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setBackgroundColor</name>
      <anchor>9aa44f74cb725133e94a98d1293cf282</anchor>
      <arglist>(const SbColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <name>getBackgroundColor</name>
      <anchor>8fcdebb874d57c73c5f097a18fc6f91d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setBackgroundIndex</name>
      <anchor>fa5be65f0d2cc11fcfa8c3a587e1e9cb</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <name>getBackgroundIndex</name>
      <anchor>35062a43ff9c017974d21401714a156a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setRGBMode</name>
      <anchor>d2e05b78dc33de00413977cef0a35523</anchor>
      <arglist>(const SbBool onOrOff)</arglist>
    </member>
    <member kind="function">
      <name>isRGBMode</name>
      <anchor>5b75726263240c127a4b93b62a73925e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>activate</name>
      <anchor>f3fda334b83cac661f991216315d516d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>deactivate</name>
      <anchor>baa12148fe20e11560eef2be8d4fa2a6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setRenderCallback</name>
      <anchor>563bde529e8d5c10a1920fa62297857e</anchor>
      <arglist>(SoSceneManagerRenderCB *f, void *const userData=NULL)</arglist>
    </member>
    <member kind="function">
      <name>isAutoRedraw</name>
      <anchor>a1da810d9ee8973d45b59b19c384881f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setRedrawPriority</name>
      <anchor>bb6debb37351d62af837e9f1780b049c</anchor>
      <arglist>(const uint32_t priority)</arglist>
    </member>
    <member kind="function">
      <name>getRedrawPriority</name>
      <anchor>227e82edc3db77e8ed8fdf338282d8df</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setAntialiasing</name>
      <anchor>275795206d10f49d4c4c0d855ca413a9</anchor>
      <arglist>(const SbBool smoothing, const int numPasses)</arglist>
    </member>
    <member kind="function">
      <name>getAntialiasing</name>
      <anchor>5a864e97c8addf4893811911afe5f223</anchor>
      <arglist>(SbBool &amp;smoothing, int &amp;numPasses) const </arglist>
    </member>
    <member kind="function">
      <name>setGLRenderAction</name>
      <anchor>d24401b58d7c4eb56448188db83d2b57</anchor>
      <arglist>(SoGLRenderAction *const action)</arglist>
    </member>
    <member kind="function">
      <name>getGLRenderAction</name>
      <anchor>1fa9367322ac9b69776989cee3cf3aab</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setAudioRenderAction</name>
      <anchor>33b8c61c3e0741acba88e33d044b5a0e</anchor>
      <arglist>(SoAudioRenderAction *const action)</arglist>
    </member>
    <member kind="function">
      <name>getAudioRenderAction</name>
      <anchor>fb7e0aa921ebf7bb66772d301e077cc6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setHandleEventAction</name>
      <anchor>cdfb0b6ad76497d2f1d8678aaf2202ce</anchor>
      <arglist>(SoHandleEventAction *hea)</arglist>
    </member>
    <member kind="function">
      <name>getHandleEventAction</name>
      <anchor>109cbddba1b5534873fe9384071a8afe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getDefaultRedrawPriority</name>
      <anchor>9c50781f068ea9640f33c3ce71985508</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>enableRealTimeUpdate</name>
      <anchor>2ccbbe194653b58779339b4a6de58bc2</anchor>
      <arglist>(const SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isRealTimeUpdateEnabled</name>
      <anchor>30e5c9b856bd1bfaf344800372a3f8f0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isActive</name>
      <anchor>b6e4d265c699bda2348415ab06fae7c0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>redraw</name>
      <anchor>e0bd90533913635a4d55717c7daea18d</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSceneTexture2</name>
    <base>SoNode</base>
    <filename>classSoSceneTexture2.html</filename>
    <member kind="function">
      <name>Model</name>
      <anchor>6b5f0308c57d4016c630c5bb12f86d26</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ODULATE</name>
      <anchor>6b5f0308c57d4016c630c5bb12f86d268d78402c5c585f109f402d2d02daa36b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ECAL</name>
      <anchor>6b5f0308c57d4016c630c5bb12f86d26b3290d8558c5a14c6f1923aac08a9cb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LEND</name>
      <anchor>6b5f0308c57d4016c630c5bb12f86d26dc5c23d133298648e6ab4e87fc918fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EPLACE</name>
      <anchor>6b5f0308c57d4016c630c5bb12f86d26d3a76ad70950bb1127b4c586f66fb9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Wrap</name>
      <anchor>b76f95aa60de5b5753520b9462b644c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EPEAT</name>
      <anchor>b76f95aa60de5b5753520b9462b644c23a5dbbdfa290a772587dcdcdbd76fdcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LAMP</name>
      <anchor>b76f95aa60de5b5753520b9462b644c27ad4a917801632a9fc7130f1019c489b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>TransparencyFunction</name>
      <anchor>05be2984fe23a2a1f320c53d5a02e4a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ONE</name>
      <anchor>05be2984fe23a2a1f320c53d5a02e4a8f7185d53d148a91d8769771b1568bcb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LPHA_BLEND</name>
      <anchor>05be2984fe23a2a1f320c53d5a02e4a8451a224548eeafcbb13616799027af41</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LPHA_TEST</name>
      <anchor>05be2984fe23a2a1f320c53d5a02e4a818739148c37b2573b4a5a5c577befe83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>eadb719edce6a40e00c1f5077ec6bca4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>60ab68f6254b9d26a831591e46fa4093</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>594f59d7baa10cea4c6dd939b515808c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>2209d94316abddfc883545f600b4261c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>cf8594fb0ab3bf020994e94c35b3b504</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>b65e99503744fd8d90eac6fc646d1871</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>76db9ced3534a7046e789d6ad0aff119</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>ebc74a708a70231210c7c63e26fb4565</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>ff4d17c853098de5cb5cf6435f5556b7</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>665ce568af35750391b1d6365d86769f</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>667716444a53b28810d1f09388bec8e2</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>wrapS</name>
      <anchor>50f193fabb2096001a52448f5f2b0131</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>wrapT</name>
      <anchor>af8cb1279f6e34d53fc5dfb03c823f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>model</name>
      <anchor>ab68d19aac299191e248189c7d7867e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>blendColor</name>
      <anchor>77b6bbdb57d5cf9cdbe793bfb993b296</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>backgroundColor</name>
      <anchor>7eb407e7133231bda6ade026b0c67bd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>size</name>
      <anchor>fa916aeb3b4db8e7a5c3451c27633df3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scene</name>
      <anchor>c1785f4d6f43e5f0b129571e33d23720</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>transparencyFunction</name>
      <anchor>cb58cd7c4e6ecd50681ab0cadb86b067</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSearchAction</name>
    <base>SoAction</base>
    <filename>classSoSearchAction.html</filename>
    <member kind="function">
      <name>LookFor</name>
      <anchor>82f470ac3a858c80abcba30deb61ea08</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Interest</name>
      <anchor>822473f6d7fe12d1ba4c9e46f76fa3fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoSearchAction</name>
      <anchor>615102a5076ad4e115b9bdaefe87b5b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoSearchAction</name>
      <anchor>2007f146a32ea009a7a15146adaea11d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>92729c3573fa93f2aa1398243b8e101c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>2abb4d31eede8b4f9b7d80ea514822ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>e3b38bc821e9cb6ed0612f0713264d53</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>42fdc9444d7eb7489ef0830f4858d62a</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>6ea3c49369645608aacba5a9025251a8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>6e5eab8e1a4a9057bc4aed1c364ec6ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>360f201bdc98f9be228d6ff0f25d1419</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>136ce9bf2139f2747b61b36da27a1473</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setNode</name>
      <anchor>0240b3bfcb7841a2b77afd1b032f132c</anchor>
      <arglist>(SoNode *const node)</arglist>
    </member>
    <member kind="function">
      <name>getNode</name>
      <anchor>a293134a17d8cc49dfc1aefd44110f72</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setType</name>
      <anchor>e9ecfbd751ec555cfdfee02849b95eae</anchor>
      <arglist>(const SoType type, const SbBool chkderived=1)</arglist>
    </member>
    <member kind="function">
      <name>getType</name>
      <anchor>66dbd9c7ea1dde4c634f54c4194a7049</anchor>
      <arglist>(SbBool &amp;chkderived) const </arglist>
    </member>
    <member kind="function">
      <name>setName</name>
      <anchor>2add714af6079bf1687358dc36d4118b</anchor>
      <arglist>(const SbName name)</arglist>
    </member>
    <member kind="function">
      <name>getName</name>
      <anchor>c5c7e4c7ad01fc1d352c06a51b6cda83</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setFind</name>
      <anchor>2ccf8e473dd95ccc9602237789318f0c</anchor>
      <arglist>(const int what)</arglist>
    </member>
    <member kind="function">
      <name>getFind</name>
      <anchor>0a25674a44e9e0356e461bac3c9c987e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setInterest</name>
      <anchor>f35db54377e6ba3903616490cba0f3ae</anchor>
      <arglist>(const Interest interest)</arglist>
    </member>
    <member kind="function">
      <name>getInterest</name>
      <anchor>c5dbe8625bd71196c8a9dfd21e40b85f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setSearchingAll</name>
      <anchor>a3410b208f67fbdf84288c0c0c890ef9</anchor>
      <arglist>(const SbBool searchall)</arglist>
    </member>
    <member kind="function">
      <name>isSearchingAll</name>
      <anchor>750ce734707e34ce9efdf993415420bc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPath</name>
      <anchor>7bda78192bd0fca30ccb57efa9513865</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPaths</name>
      <anchor>b64cca81e4ffae6c1d69de01e8ba8fc6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>reset</name>
      <anchor>89e481f720f0894135e2d7de907dd0df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setFound</name>
      <anchor>913ee98e24a2344167ec3bc5e5a445ab</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isFound</name>
      <anchor>073a738bfa7960bb25d9045e38237eda</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>addPath</name>
      <anchor>39c8cf8fbdf2428df3a3218458da0496</anchor>
      <arglist>(SoPath *const path)</arglist>
    </member>
    <member kind="function">
      <name>beginTraversal</name>
      <anchor>f872bdd2e1a93beee4594cfaaef6ab5e</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>duringSearchAll</name>
      <anchor>866921a3337fa2376a8437cacd45ca22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSelection</name>
    <base>SoSeparator</base>
    <filename>classSoSelection.html</filename>
    <member kind="function">
      <name>Policy</name>
      <anchor>c1d0134b67e4730b0ba0bcb61ece80c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>INGLE</name>
      <anchor>c1d0134b67e4730b0ba0bcb61ece80c0999a5d15e28bd0e87a58df33bbd31c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OGGLE</name>
      <anchor>c1d0134b67e4730b0ba0bcb61ece80c03206a6135f02df51a1118acf7faaf6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>HIFT</name>
      <anchor>c1d0134b67e4730b0ba0bcb61ece80c09b45a1f4f16fc18232d84ccbed59c752</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoSelection</name>
      <anchor>e50b73f59783a5582f025965d6e2899b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoSelection</name>
      <anchor>d4b9eb2e58cff8d01bf8361cb093919d</anchor>
      <arglist>(const int nChildren)</arglist>
    </member>
    <member kind="function">
      <name>~SoSelection</name>
      <anchor>ae3bc2510e4585b65bb81f23d3d60198</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>624baf7c2764718ef4ff18d1fa0b9d6d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>035cd10dec5133adc5054ed895118faa</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>2ee7653dfa0b5fcc840e26fe455cd059</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>51527ba98d1ed175c4bfc506eba30b2a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d71adef10cae6523399fff8e05003c21</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>select</name>
      <anchor>f4d566ba95315ae439d2f86a5eb74c31</anchor>
      <arglist>(const SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>select</name>
      <anchor>181d7d633e090417f5c3650c66fddfd8</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>deselect</name>
      <anchor>3f3139af650bffc2c57f283145c2d555</anchor>
      <arglist>(const SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>deselect</name>
      <anchor>039d0d6ee133a7e3bbce71d2fc22482f</anchor>
      <arglist>(const int which)</arglist>
    </member>
    <member kind="function">
      <name>deselect</name>
      <anchor>6f2926768ff418d88a9538d41e9678c0</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>toggle</name>
      <anchor>542a1bd10f92e86b5efe8166763754c2</anchor>
      <arglist>(const SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>toggle</name>
      <anchor>96542e1d3584c3cc3c0443b489acec39</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>isSelected</name>
      <anchor>2b02579ca8e06c4ea798cdf9ceb30771</anchor>
      <arglist>(const SoPath *path) const </arglist>
    </member>
    <member kind="function">
      <name>isSelected</name>
      <anchor>dc97a590e2dc3cbde70640397fdae84e</anchor>
      <arglist>(SoNode *node) const </arglist>
    </member>
    <member kind="function">
      <name>deselectAll</name>
      <anchor>7b801e4303177310514cf9adeb5714ec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNumSelected</name>
      <anchor>bedbbc9c6418795a7a5d99a5977ee6db</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getList</name>
      <anchor>022939885ac03469cf1ba794b8d78cd0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPath</name>
      <anchor>e2f9550d935214955b2d78cf52eff7a9</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>c0df6faf1a93f6c24f3bbecdd832c0c2</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <name>addSelectionCallback</name>
      <anchor>b690ccc3414f8e1938d93f36883be814</anchor>
      <arglist>(SoSelectionPathCB *f, void *userData=NULL)</arglist>
    </member>
    <member kind="function">
      <name>removeSelectionCallback</name>
      <anchor>111a49c6a60bf6aeaa74c335a6cc50f8</anchor>
      <arglist>(SoSelectionPathCB *f, void *userData=NULL)</arglist>
    </member>
    <member kind="function">
      <name>addDeselectionCallback</name>
      <anchor>9ed6dcad1b42f0f6ba84b23fa5183027</anchor>
      <arglist>(SoSelectionPathCB *f, void *userData=NULL)</arglist>
    </member>
    <member kind="function">
      <name>removeDeselectionCallback</name>
      <anchor>ba2da183e2bfee410e556555e75c33e2</anchor>
      <arglist>(SoSelectionPathCB *f, void *userData=NULL)</arglist>
    </member>
    <member kind="function">
      <name>addStartCallback</name>
      <anchor>fda4c44b461c82eef58a084fe084b2a0</anchor>
      <arglist>(SoSelectionClassCB *f, void *userData=NULL)</arglist>
    </member>
    <member kind="function">
      <name>removeStartCallback</name>
      <anchor>98a92bf153b222d82f2fe031c408d9ba</anchor>
      <arglist>(SoSelectionClassCB *f, void *userData=NULL)</arglist>
    </member>
    <member kind="function">
      <name>addFinishCallback</name>
      <anchor>a7418e3afd3ab0d243d9ce3654a913be</anchor>
      <arglist>(SoSelectionClassCB *f, void *userData=NULL)</arglist>
    </member>
    <member kind="function">
      <name>removeFinishCallback</name>
      <anchor>d189f6df70a1b40a385dbb3b5e065ccd</anchor>
      <arglist>(SoSelectionClassCB *f, void *userData=NULL)</arglist>
    </member>
    <member kind="function">
      <name>setPickFilterCallback</name>
      <anchor>b621807b35c7c67563f53387120879b6</anchor>
      <arglist>(SoSelectionPickCB *f, void *userData=NULL, const SbBool callOnlyIfSelectable=1)</arglist>
    </member>
    <member kind="function">
      <name>setPickMatching</name>
      <anchor>099ba79fdf9a7b7dee9a439cbfe0483e</anchor>
      <arglist>(const SbBool pickMatching)</arglist>
    </member>
    <member kind="function">
      <name>isPickMatching</name>
      <anchor>63789379afeb481e46666389ecd142b2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPickMatching</name>
      <anchor>ed02b53404dda46d09b757197f2b7366</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>addChangeCallback</name>
      <anchor>e5e1690ad385e1de68f0133c9744ca62</anchor>
      <arglist>(SoSelectionClassCB *f, void *userData=NULL)</arglist>
    </member>
    <member kind="function">
      <name>removeChangeCallback</name>
      <anchor>af814bd3376a8635eab2441e41d37215</anchor>
      <arglist>(SoSelectionClassCB *f, void *userData=NULL)</arglist>
    </member>
    <member kind="function">
      <name>invokeSelectionPolicy</name>
      <anchor>72e4fb4e0bc9744ba0f1fd55f28d4ea5</anchor>
      <arglist>(SoPath *path, SbBool shiftDown)</arglist>
    </member>
    <member kind="function">
      <name>performSingleSelection</name>
      <anchor>ee0bb2c31d5a61d7b61d7048bac480ce</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>performToggleSelection</name>
      <anchor>8d40cf265d331234c699f9779e87ef1f</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>copyFromThis</name>
      <anchor>393e13a982e602f95b87359cc58139de</anchor>
      <arglist>(const SoPath *path) const </arglist>
    </member>
    <member kind="function">
      <name>addPath</name>
      <anchor>1c4336d6875540fcadf7857570c5f258</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>removePath</name>
      <anchor>684882d5b50eca52062497098a0ff94f</anchor>
      <arglist>(const int which)</arglist>
    </member>
    <member kind="function">
      <name>findPath</name>
      <anchor>68f140ade79d2dc8dae00b7a6edfd3fd</anchor>
      <arglist>(const SoPath *path) const </arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>8a5c2e9c70ef3faa6251bd1a3f971379</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>policy</name>
      <anchor>9f53ac0ea66af1258d37555b4f4c57a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>selectionList</name>
      <anchor>3f7a0c5b07c234fc278c93ee8b885a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>selCBList</name>
      <anchor>83140f456c0d4972b49b47158ea2b82e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>deselCBList</name>
      <anchor>369923a9736a7277bc42afc56810b277</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>startCBList</name>
      <anchor>d749e2198d5be45852a55c66febd173f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>finishCBList</name>
      <anchor>81b98d8cf0a84eee057606c5a6535e5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>pickCBFunc</name>
      <anchor>d66ff4ab3ac806a9bf8ee815fc07fb49</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>pickCBData</name>
      <anchor>15980c07d45835ab8ae2339dc93c9b90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>callPickCBOnlyIfSelectable</name>
      <anchor>633c3b898548c3a7727e769168066435</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>changeCBList</name>
      <anchor>609399849cc54294cfc03e33ea98f86e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>mouseDownPickPath</name>
      <anchor>2e7b464f2bf0d957d35ce58625193c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>pickMatching</name>
      <anchor>0bdaf6bf535a186fac7524728d0f4fd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSelectOne</name>
    <base>SoEngine</base>
    <filename>classSoSelectOne.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>4889f782f96bbc95b794f8c1e7ad766a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dummy</name>
      <anchor>7bf3e07fc44935e10a38d36fab773395</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoSelectOne</name>
      <anchor>57e993f7a5c578d4ce71e19bdb4c221d</anchor>
      <arglist>(SoType inputtype)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>c1cf8332af16829b9ecfe8d179c028bf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>3d6c2ef776b007e18fff231e005e5557</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>38e73a3eeadb09fd83844de6d244bbb1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>2db291e220d1597d36dd59dfc528e5c3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>1324d883a562cf5cf5d2fb93d6068d59</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>786017a5fa46d17e4704b138e1052a80</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7030b125ebbc3f11ba8443d564ffb76c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>index</name>
      <anchor>b437f04656386e512f6e545a2876a3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input</name>
      <anchor>f016b9b7a223cc0b14cad1474ec9cdaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>output</name>
      <anchor>a4ecf9edff2e8739cd872d3260db829d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSensor</name>
    <filename>classSoSensor.html</filename>
    <member kind="function">
      <name>SoSensor</name>
      <anchor>ef8e234f18554cf8d895e49d2ad87fe3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoSensor</name>
      <anchor>c7b074e66870f8b291eba260b6469c2c</anchor>
      <arglist>(SoSensorCB *func, void *data)</arglist>
    </member>
    <member kind="function">
      <name>~SoSensor</name>
      <anchor>12f75e795419d1ec79ba4c3e2c5a31cd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setFunction</name>
      <anchor>c0a0152828590c9b23da259a9c60a629</anchor>
      <arglist>(SoSensorCB *callbackfunction)</arglist>
    </member>
    <member kind="function">
      <name>getFunction</name>
      <anchor>512bff71da628c79dc14d02019c07782</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setData</name>
      <anchor>cc7ffab34126318972fdc0830de49150</anchor>
      <arglist>(void *callbackdata)</arglist>
    </member>
    <member kind="function">
      <name>getData</name>
      <anchor>c6474ccce9c26b3f72e6ad0adea03ff5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>schedule</name>
      <anchor>99166cb15447e892c5dc1085e3621f39</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function">
      <name>unschedule</name>
      <anchor>706845e298a21e98af4be9f029017f82</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function">
      <name>isScheduled</name>
      <anchor>bac04269436f8ff1c2e9cd5f0a0058c5</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function">
      <name>trigger</name>
      <anchor>a26e7ea1cfa0abd0c72d15bba2bf5b31</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isBefore</name>
      <anchor>da04836f1895bd324dda8fc94a8b49cb</anchor>
      <arglist>(const SoSensor *s) const =0</arglist>
    </member>
    <member kind="function">
      <name>setNextInQueue</name>
      <anchor>011855ebf2d30b097370ebca6eee98c9</anchor>
      <arglist>(SoSensor *next)</arglist>
    </member>
    <member kind="function">
      <name>getNextInQueue</name>
      <anchor>f73bb1b36e43218af6186899f31a5db5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>267d8529b420c15f969e124cc809e987</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>func</name>
      <anchor>c21ccac7235fb0f895fff539c13a0ed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>funcData</name>
      <anchor>00da05a8947650ec2555977ed526cb6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSensorManager</name>
    <filename>classSoSensorManager.html</filename>
    <member kind="function">
      <name>SoSensorManagerP</name>
      <anchor>7311786482db3431ff5af094e97d1e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoSensorManager</name>
      <anchor>beccc05aac1a5c6f9dd1acd2d840b3b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoSensorManager</name>
      <anchor>f814b68de590aa2f6c0969fd0fe9c545</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>insertDelaySensor</name>
      <anchor>61330b4c7025160d37bcc33a13f6cd4d</anchor>
      <arglist>(SoDelayQueueSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>insertTimerSensor</name>
      <anchor>7fdfa6ddc1d24ddaa21353c07fa476b8</anchor>
      <arglist>(SoTimerQueueSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>removeDelaySensor</name>
      <anchor>1566dfe9d1026d092bbbcf9135c31d5d</anchor>
      <arglist>(SoDelayQueueSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>removeTimerSensor</name>
      <anchor>c2874c96dce48be7dc531fa0b3e005f8</anchor>
      <arglist>(SoTimerQueueSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>setChangedCallback</name>
      <anchor>5039008fb24defa335d63723528bc915</anchor>
      <arglist>(void(*sensorQueueChangedCB)(void *), void *data)</arglist>
    </member>
    <member kind="function">
      <name>rescheduleTimer</name>
      <anchor>6b09f419c039fa5917c2725eab33b82f</anchor>
      <arglist>(SoTimerSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>removeRescheduledTimer</name>
      <anchor>189348611c49f36d58af5077f920a162</anchor>
      <arglist>(SoTimerQueueSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>processDelayQueue</name>
      <anchor>a077dc9dd11e12cad63016c60e4c9af7</anchor>
      <arglist>(SbBool isidle)</arglist>
    </member>
    <member kind="function">
      <name>processImmediateQueue</name>
      <anchor>1e6b511731fc72c3adb16f7f345d11d6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>processTimerQueue</name>
      <anchor>3b5935cf5cdaeaf4825940260e5a142f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isDelaySensorPending</name>
      <anchor>23dad9c29887f3039ddc3f751af2e501</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isTimerSensorPending</name>
      <anchor>e598bb762c7a417b8f4f45f7a13fc80f</anchor>
      <arglist>(SbTime &amp;tm)</arglist>
    </member>
    <member kind="function">
      <name>setDelaySensorTimeout</name>
      <anchor>017db6daa54156ec1a2f8198fb30d531</anchor>
      <arglist>(const SbTime &amp;t)</arglist>
    </member>
    <member kind="function">
      <name>getDelaySensorTimeout</name>
      <anchor>2a1df40e1496ae286e383b2a8f6ef2bb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doSelect</name>
      <anchor>4733de33513041df15133146fe5910f0</anchor>
      <arglist>(int nfds, void *readfds, void *writefds, void *exceptfds, struct timeval *userTimeOut)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSeparator</name>
    <base>SoGroup</base>
    <filename>classSoSeparator.html</filename>
    <member kind="function">
      <name>CacheEnabled</name>
      <anchor>4d0aacab3b6836083f8960031d207c7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>FF</name>
      <anchor>4d0aacab3b6836083f8960031d207c7a821ffe63c4908003367d83f3de5d3160</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>N</name>
      <anchor>4d0aacab3b6836083f8960031d207c7a73dd81721759f093b29f13b94d123969</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>UTO</name>
      <anchor>4d0aacab3b6836083f8960031d207c7a522798bd64d9ce99991583f77f425a7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoSeparator</name>
      <anchor>d7f6193eae60c6472805adfb4fe9bf8c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoSeparator</name>
      <anchor>d1e38488e022de4d26959d2fa80be211</anchor>
      <arglist>(const int nchildren)</arglist>
    </member>
    <member kind="function">
      <name>~SoSeparator</name>
      <anchor>1327db2197764b07dc4aa91de5c1c1a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>b2730f7ea0171498d5bc4bed4dd8ebb8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>20d6f746333fe5e5b51098e21e7fdd9d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>61eb485fd38fb891d5928e9f8513ff42</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>52d32f3065917031f817a6923aadcadd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>82cf07421a90bb52327454952474465a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>af118218be778ea04ce57ef324c5dfd4</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>f12f68ac6a5e7867953594fd6d813b89</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderBelowPath</name>
      <anchor>a119fff3cff7236b688f971d42c9f7c1</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderInPath</name>
      <anchor>a8a2c4c8fab005144f985722be823f6c</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderOffPath</name>
      <anchor>7c044d52fac42b982cfdfbf186505780</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>81ec52d27db047d5494aef8cf14ffccc</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>5c5a86e7711f424c0a03620d5b6a4b66</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>cf1998647522bf0c94f3c5cbef47dcd0</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>c9615e18520dae307a27f7ce702f2d2a</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>ec8d7ff5aa0b22c05186384220f6f968</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>424aa0ce45dd2871f210d33486e0736e</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>43c5e64fc553d1f0b0e826cf04bc7e42</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>380f637a8c2b165a6132e21ce76d9da4</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>0d71862bb6eb5e8416f6ca6df2582d18</anchor>
      <arglist>(SoNotList *nl)</arglist>
    </member>
    <member kind="function">
      <name>setNumRenderCaches</name>
      <anchor>f01258db89466ee375dc8515ff461a04</anchor>
      <arglist>(const int howmany)</arglist>
    </member>
    <member kind="function">
      <name>getNumRenderCaches</name>
      <anchor>1a68e63539ff381417d47900eed05ca7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>affectsState</name>
      <anchor>1da7b0209b1361ebb1637e9cb484164c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>cullTest</name>
      <anchor>1ca8311b65c6db7087867a8a9babae13</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
    <member kind="function">
      <name>cullTest</name>
      <anchor>063a6864d6a8377333fd4e06bdc375be</anchor>
      <arglist>(SoGLRenderAction *action, int &amp;cullresults)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>7dbd724491497fc7ea5c45f380335e73</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>renderCaching</name>
      <anchor>66bb73ac97538902c0f55f8d1f4444a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>boundingBoxCaching</name>
      <anchor>060012a219ed95d686d6f1d7406d5d93</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>renderCulling</name>
      <anchor>6fb6fba13bf1023d22185c0e4d850f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>pickCulling</name>
      <anchor>af382e5d94f190ae4bc56ea5211a5724</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSeparatorKit</name>
    <base>SoBaseKit</base>
    <filename>classSoSeparatorKit.html</filename>
    <member kind="function">
      <name>appearance</name>
      <anchor>8c555c6752275a1cb01ffb1504593e61</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>childList</name>
      <anchor>f10493565d1fd9e7b24cd97076918563</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>pickStyle</name>
      <anchor>5cef0393c6f9d77b58110b1098469e03</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>texture2Transform</name>
      <anchor>f457d3cc21c6f165fce3b4ab8f0111e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>topSeparator</name>
      <anchor>9b6ef1b09bfea935fc131d9f1213ced0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>transform</name>
      <anchor>35e12963baf711e8ce195ed74e3aa1fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>units</name>
      <anchor>73bda7f9b4c880576fefdd72e6316b8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoSeparatorKitP</name>
      <anchor>1b6eeaa33e7dc2a26707a78958fa789b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>CacheEnabled</name>
      <anchor>9ca337b88c73bf3f95ad7392b51c7b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoSeparatorKit</name>
      <anchor>777bd75c01c3e2ab37a4b4ddc1852e59</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoSeparatorKit</name>
      <anchor>35fc912085f04f68b30916cc935620a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>a3a13c708f6cc518839f8559775be22b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>1face2d55ba00a9247904daf0e4a4366</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>41464259cd77d2534c4d254e34db70f3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>2545f85c784c643c5ac958bccd8db0db</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>a4ac86a36f341cac8089458ff93f8dd7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>ba9ade6a20448167344463ddddd6d316</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>c53384068c5128edba7ba33a1df4f47f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>142e7921678b5d075579caff99989951</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>55d5caf5ef9514566542781affe6b142</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>8401f0a6cc80d26298e403035774463d</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>renderCaching</name>
      <anchor>9a5381e3d24ca6f17892dce93792e83a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>boundingBoxCaching</name>
      <anchor>c2fc2e42f3069a7e66b600af9e39999d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>renderCulling</name>
      <anchor>5237653e0daab24d986acf2301059f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>pickCulling</name>
      <anchor>f7c5f3107bb073bb0ee7924d820c81e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFBitMask</name>
    <base>SoSFEnum</base>
    <filename>classSoSFBitMask.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>2790ccb4ada6af2f08a0eda38a8be6da</anchor>
      <arglist>(const SoSFBitMask &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>978d1da636a272f769c941b91cab6668</anchor>
      <arglist>(int newvalue)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>069146b6154b73b56a990f10a867b7b9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoMFBitMask</name>
      <anchor>83757ed09bd98ecd49f5f9b5ad250c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>12dd16e598926c6ed90afb9b342674ee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f996b460e494a208a0367f1ab6d67289</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>f1ec2052ee26ccb6a46cc7cb21105566</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>e34469daae6c0c4e7d49b54857f01851</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0598f94e5e2824862b53a06e443eb2e4</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFBool</name>
    <base>SoSField</base>
    <filename>classSoSFBool.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>995f0465611095f8aa80b8a81b7eb750</anchor>
      <arglist>(const SoSFBool &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>1ff957236dc839f993f9b2a44c0ae3d9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>7f9e5854b98fbcdc8abb65517af3b529</anchor>
      <arglist>(SbBool newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>9d1a23c2531e74a7d55ee32507fe26a4</anchor>
      <arglist>(SbBool newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>154f6075fcf40dc1c3e1c2f6c7c376ea</anchor>
      <arglist>(const SoSFBool &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>bc37e322d235fe6ccf95c6ea5c51a511</anchor>
      <arglist>(const SoSFBool &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>69c01a134fad520f6be40b496f474c07</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>810aebc9bb5496bcc1c002bbfe6f5868</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>24ff6b1c51053e06cd8cfa4c73069221</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>2590b331fa45ff4e972e5953c187a90c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>289e072851051783dae5ec910d439ce6</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>49cc43284901e3f89d9559cc4b0b3e6f</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>eac4946eb4b47fe99b970d654b289719</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFColor</name>
    <base>SoSField</base>
    <filename>classSoSFColor.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>9b033596b0699e989f1c958d8a94c319</anchor>
      <arglist>(const SoSFColor &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>4827d24037b0de09881f0f3aae29c4c0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>08c0b30fcfd9ccd038334661c7152bcf</anchor>
      <arglist>(const SbColor &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>3bbf9a4d6690b31e490cd7ca9289f6a2</anchor>
      <arglist>(const SbColor &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>a159455b83c6cb09a26bac8be4d161e1</anchor>
      <arglist>(const SoSFColor &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>903b1afebfae8ea16c1f66d67dd433c3</anchor>
      <arglist>(const SoSFColor &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>140cf4b0eaba5c9e05b8f04a43d6336e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>4dcbee0a6c027ac14b148f84c7c097f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>8b9d0caa422954e304256b5878f9b3cc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>d540695b7db604e6f463423da7495751</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>ed378f9f2d6657fdd0f3094b00f8e533</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>5f0f112335c7a720c8d9341561721b1d</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>04dd1fef81fb5855e9798f3c1f7953eb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>4c1593d5b0619f7873d92cf2457ca5a6</anchor>
      <arglist>(const SbVec3f &amp;vec)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>17f72d23be08d0814ed11c2520448117</anchor>
      <arglist>(const float red, const float green, const float blue)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>fcf64b0594f5d66f42b7071ed53f02d0</anchor>
      <arglist>(const float rgb[3])</arglist>
    </member>
    <member kind="function">
      <name>setHSVValue</name>
      <anchor>c80d683840c864ffde32ecf1081a69ea</anchor>
      <arglist>(const float h, const float s, const float v)</arglist>
    </member>
    <member kind="function">
      <name>setHSVValue</name>
      <anchor>163246c6de68a1b90ef7559d27459121</anchor>
      <arglist>(const float hsv[3])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFEngine</name>
    <base>SoSField</base>
    <filename>classSoSFEngine.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>aaf408f70234cfafbb389316d17f1f75</anchor>
      <arglist>(const SoSFEngine &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>a04bf47b538e5fce95b59a66187cba28</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>3034858c87222609f5d7e2a044cd61d6</anchor>
      <arglist>(SoEngine *newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>7ba54d980663c75ab3a48cca0f2cb6ef</anchor>
      <arglist>(SoEngine *newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>665c16bd76328ba28ed4a2248abb93ed</anchor>
      <arglist>(const SoSFEngine &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>7bfe69f87f42b7189f51ffaddfaed54b</anchor>
      <arglist>(const SoSFEngine &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>f0ffb5d76d656812b918186cce9ddffd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>fcca8ab052e392bc6bd285c9b7d2b285</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoMFEngine</name>
      <anchor>c365755d073160b202b9d782586a6a39</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>b6da42156e5e65903edfead25cd2c4b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>1222f0a7fc1142fe2f93d137a46e7060</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>1cd6bb9fe526863daaf7b6fcd80e9acc</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>acd2f4971a924e0101cf13a44ce4aed3</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>cf7ae4d08097c0a1d590d4fe42fd8fb4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fixCopy</name>
      <anchor>fdafcb093e09b6b91c1ee4e2a85a21d4</anchor>
      <arglist>(SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>referencesCopy</name>
      <anchor>b16cc1ab455a0185d78d1e48541cb3c9</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFEnum</name>
    <base>SoSField</base>
    <filename>classSoSFEnum.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>c708d0b79c1289dd3424674cb9e1dda1</anchor>
      <arglist>(const SoSFEnum &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>e1de547f3a2b8e43cf08c9aa00b1e269</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>a08e3f1dbfb5224aa09bb928a0ae701d</anchor>
      <arglist>(int newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>04464b55f22b54610c39de2f3e729425</anchor>
      <arglist>(int newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>378e0ccf2cf86164f519d333ca5924e8</anchor>
      <arglist>(const SoSFEnum &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>036d6668dcf10617573201f1818e9074</anchor>
      <arglist>(const SoSFEnum &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>7288e80942e43462a60fc2fde1625e53</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>aaec1def69e4d2fa03106a2833708065</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>f30ca50209cf518c1f3a4b44c92414e9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>fc786081034fdeccf7ac63cc9e194b86</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>cf6d727c78cada401dad1db90f93b398</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>0c50a39a7661658e9abbf68dcba1518a</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>b42230336d3cfb2ca1e44969bb8d4ca8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>b716f5dad68b35454bf7d0b21095e17a</anchor>
      <arglist>(const SbName name)</arglist>
    </member>
    <member kind="function">
      <name>setEnums</name>
      <anchor>dd37440b47f91d4db1e6799a63fae22b</anchor>
      <arglist>(const int num, const int *vals, const SbName *names)</arglist>
    </member>
    <member kind="function">
      <name>getNumEnums</name>
      <anchor>508e9b550fd973b9c9a777f7b8dcd582</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getEnum</name>
      <anchor>6b367c5d6adae8170b27540b3d58e525</anchor>
      <arglist>(const int idx, SbName &amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>findEnumValue</name>
      <anchor>f0ae9cc8907eb12848e4f31c76b6be9a</anchor>
      <arglist>(const SbName &amp;name, int &amp;val)</arglist>
    </member>
    <member kind="function">
      <name>findEnumName</name>
      <anchor>4f3fa72f7a349b8d91679f8f4c667715</anchor>
      <arglist>(int value, const SbName *&amp;name) const </arglist>
    </member>
    <member kind="function">
      <name>numEnums</name>
      <anchor>96ffcd9247709d092d8f15e6a64caecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>enumValues</name>
      <anchor>9da6555d0c2d479dea050d296428174c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>enumNames</name>
      <anchor>4a80e7e93e9d44be8a52b2b9818e3392</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>legalValuesSet</name>
      <anchor>d47b48109b72c570134c2bff1722b2d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFFloat</name>
    <base>SoSField</base>
    <filename>classSoSFFloat.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>6c58bd8dd675eab550f6fa4314633c78</anchor>
      <arglist>(const SoSFFloat &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>9a319bb6168f764b7ae88b99132f0b0c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>6cebc39d23dbffe80b70941adba91468</anchor>
      <arglist>(float newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>9f267e5479b2c16515deba952410f06f</anchor>
      <arglist>(float newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>4cd2f279b627ca9617b915d074ad70fb</anchor>
      <arglist>(const SoSFFloat &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>a4f6fc5680603899dab292aa3f6acf46</anchor>
      <arglist>(const SoSFFloat &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>6fb97a6120d139fb04fda78ea5b7c704</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>3b08617910e2de299da60a3dcdd6cfd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>9f9f9c898cc034390f9c7ea7f034bf70</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>c71081328ad25d8a481ad13f169d1a9c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>52fe5875b96f27403ed52d16655da4ff</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>7890a64bcc411899f7c3bc5e10ac8e48</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f1a3ead0ee5d89b65db6619d86858975</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSField</name>
    <base>SoField</base>
    <filename>classSoSField.html</filename>
    <member kind="function">
      <name>~SoSField</name>
      <anchor>ec64dd05099f8ed4ad7b1c89277e9689</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>SoSField</name>
      <anchor>8bcb2c917d24ab3e90078b4e4857ca78</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>69c6a49a723770b2eb64c2acde9266e6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>77346c5ffad85b228b7dffcf1595abab</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFImage</name>
    <base>SoSField</base>
    <filename>classSoSFImage.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>f9ba2d7cf062a09685834df59eb7f291</anchor>
      <arglist>(const SoSFImage &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>ff1327581a1e7a89f5c3098a7950d6b5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>139b12faf5b3f57a3b886b403130c94b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>6dff3a19cc481d0f1a1612a9fa5068b5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>8667a2c6d593b37aa2f3ae721e4cc678</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>cdfaa315d6c0b52603ec2e92dab252fb</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>719335aa148208f7478e6656f7eb0a31</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>33e149188a7d2d1002170f0c801acd8d</anchor>
      <arglist>(SbVec2s &amp;size, int &amp;nc) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>5880716aa92e2b3c19da773e6a48d48c</anchor>
      <arglist>(const SbVec2s &amp;size, const int nc, const unsigned char *pixels, CopyPolicy copypolicy=COPY)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>597ca849f52bdd6ea315ba05e5863b08</anchor>
      <arglist>(const SoSFImage &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>6a60d33eed8a7554f98eb259a2f184be</anchor>
      <arglist>(const SoSFImage &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>6169d4cfdbf28ca74b71fcbf63ab1e13</anchor>
      <arglist>(SbVec2s &amp;size, int &amp;nc)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>4b49eeb7af4905941aa12be4fb9ea594</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setSubValue</name>
      <anchor>2d300c97e241e37a6c1d218faea3bd93</anchor>
      <arglist>(const SbVec2s &amp;dims, const SbVec2s &amp;offset, unsigned char *pixels)</arglist>
    </member>
    <member kind="function">
      <name>setSubValues</name>
      <anchor>982c36b8a34aff95b3dac006351e7514</anchor>
      <arglist>(const SbVec2s *dims, const SbVec2s *offsets, int num, unsigned char **pixelblocks)</arglist>
    </member>
    <member kind="function">
      <name>getSubTexture</name>
      <anchor>7f79fa315a141dd3207b541dd93d99a6</anchor>
      <arglist>(int idx, SbVec2s &amp;dims, SbVec2s &amp;offset) const </arglist>
    </member>
    <member kind="function">
      <name>hasSubTextures</name>
      <anchor>d7b9f62520e29b3fb607e2da64b915e0</anchor>
      <arglist>(int &amp;numsubtextures)</arglist>
    </member>
    <member kind="function">
      <name>setNeverWrite</name>
      <anchor>2d8575f9eed381b9cdae5cb752b5a02a</anchor>
      <arglist>(SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isNeverWrite</name>
      <anchor>da1c34045547d005fd30a1edc3b3a100</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>hasTransparency</name>
      <anchor>135e863e5ea6e2b3ea514f3bf68653c7</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFImage3</name>
    <base>SoSField</base>
    <filename>classSoSFImage3.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>9f3e06b15c5348a6e57968a60c6ad0a3</anchor>
      <arglist>(const SoSFImage3 &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>c53cb2f64da6f196d204bf680041091b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>3920ff60f6c336cf2067d184a137ca91</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>6c5017a7805e3116e5cbce9523be52c6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>6774ae69db13c7bfc639f3ad3fdf913e</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>843dd24a88e0457e63653e666607e03d</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>acd0718d832ae19ddf39b47b64e2dc6c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>79a3010c16852010cca62e4299c931cb</anchor>
      <arglist>(SbVec3s &amp;size, int &amp;nc) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>9bd34f3ee9e3a8d958daedd2268fe28f</anchor>
      <arglist>(const SbVec3s &amp;size, const int nc, const unsigned char *bytes)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>b8ef3df9b63103a19c5186434c8d400b</anchor>
      <arglist>(const SoSFImage3 &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>3f9125d473e3ebace3d89c80d41512d0</anchor>
      <arglist>(const SoSFImage3 &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>startEditing</name>
      <anchor>6050a26d3cec684589c7e908041b2117</anchor>
      <arglist>(SbVec3s &amp;size, int &amp;nc)</arglist>
    </member>
    <member kind="function">
      <name>finishEditing</name>
      <anchor>8c84e01537f01fef2f1bac7414454743</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFInt32</name>
    <base>SoSField</base>
    <filename>classSoSFInt32.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>209a3ce451aea0f96c2876ae59ee360c</anchor>
      <arglist>(const SoSFInt32 &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>cbbb6322abb59e8a66e9d8d9267143a6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>e3c1c8812e720cbc7250f00b6715ab3d</anchor>
      <arglist>(int32_t newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>490ddccfe1fd5225816bfdefc0dadae9</anchor>
      <arglist>(int32_t newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>6e421a6fc5d96a24f9275c08d6bc352e</anchor>
      <arglist>(const SoSFInt32 &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>6c67f06ac1ab2557808439de8dfe04e0</anchor>
      <arglist>(const SoSFInt32 &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>d4f9419c877219a11a0dd32cd82cfa5d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>775d2c3e8256edaddc8030f1d449eb2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>b9570373ada75bcef676815b2ffc27b2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>9693bb8db1f55e2e694244b6f625fae7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>9e468769cabc838e362d44dae0ec5bdc</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>390607af6814f88c89bb50a184e86cf5</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f48cea6cf0a9c6449f787a71c45863f9</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFMatrix</name>
    <base>SoSField</base>
    <filename>classSoSFMatrix.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>e75dacca95bc2052f87bce0871150656</anchor>
      <arglist>(const SoSFMatrix &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>b4f3c00936e78f743067b0bc33830277</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>5a8ec977678eaa180a57dde36aec952c</anchor>
      <arglist>(const SbMatrix &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>2f51a03860d7efe3650a1938b31e7533</anchor>
      <arglist>(const SbMatrix &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>0dcc42b8a648927c08cf5783b86d60cf</anchor>
      <arglist>(const SoSFMatrix &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>1c3c4e6aa4c3ddb26565ebab315c5426</anchor>
      <arglist>(const SoSFMatrix &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>46d6ce5619e8f646f3abfd2e94926914</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>1f6d4765c0439efb9eadfdfae951918d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d2004e79eaa9c0761eb5394a69dd0311</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>acf817893631150023d3519a9044b88d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>8f583437e0afdbd2a315ea0c91116e35</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>6ad93e13c7417ea9bbd06607743adaed</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6c94a88d1795a44cd6c9cf2e2253edf6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>948122a09e8639e8982f2fe4de0788fb</anchor>
      <arglist>(const float a11, const float a12, const float a13, const float a14, const float a21, const float a22, const float a23, const float a24, const float a31, const float a32, const float a33, const float a34, const float a41, const float a42, const float a43, const float a44)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFName</name>
    <base>SoSField</base>
    <filename>classSoSFName.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>fe8ee42eb0ce106fe31d1c6193648443</anchor>
      <arglist>(const SoSFName &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>824cefb13b49c96bbdc20774d375f832</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>da840814287457c6a4d78eed0d070fe1</anchor>
      <arglist>(const SbName &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>3ad01ceaa997552aeb10c7066eddc7b2</anchor>
      <arglist>(const SbName &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>8c77b2ef86fb9530771c93512363d16f</anchor>
      <arglist>(const SoSFName &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>1ef92e4a9384d15275cb072d250e7745</anchor>
      <arglist>(const SoSFName &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>2deb16907552c7ceee8757df1024e338</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>0dd9e29c7e7638b325e73923e4a18ddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e801fb4b2e1ab08a8747402e56bd5236</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>670daebfa179ab2162e453cdc9f9c658</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>5c7c68c05f02f41cc110196ea31d67e6</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>ac19ba9792bf7c36cb48650ffa083a1d</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>ed1f9001380ebd289306689d0fe71e14</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>e7e757657dec48d0c2c97c30dfcebef1</anchor>
      <arglist>(const char *const name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFNode</name>
    <base>SoSField</base>
    <filename>classSoSFNode.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>1b6b39f56732df69e0bb07688f7de64c</anchor>
      <arglist>(const SoSFNode &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>7370cbd8e02f067ae878dd0644f59c9c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>6104c251873ce52d245c7346cf5cf136</anchor>
      <arglist>(SoNode *newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>75aea3887b06b546ea52bb5e314ccce7</anchor>
      <arglist>(SoNode *newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>47f51bcef79212bf3bc1ec886ede3076</anchor>
      <arglist>(const SoSFNode &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>da4d8556d90a042647c29e485f93f3b7</anchor>
      <arglist>(const SoSFNode &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>b56538f9b2bfc9b74cc677d032c0e00f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>f0520b1162b5fd501857868ebf99cd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoMFNode</name>
      <anchor>6060602b69821ab881ed97e403c992b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>602057b3a82f5e148bc15224034cc57f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>5d4d8fced7b13e46f5d0d7626b447c77</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>c9f6cf8d1657fde9302672470d3600bf</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>d397015eff13541c9503e378f76ca063</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a09eb154b10cecfc6729fc36b234c93a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fixCopy</name>
      <anchor>a2f5f9e0ef5519fb9de6b46274b8d5c8</anchor>
      <arglist>(SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>referencesCopy</name>
      <anchor>8e8c75677892a764544c7cca1214f24b</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFPath</name>
    <base>SoSField</base>
    <filename>classSoSFPath.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>b8c03ebba44def8e405a249fc3784b3a</anchor>
      <arglist>(const SoSFPath &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>fc07940373bb6902420c103ef1fdfb1f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>987b29d15d5a35715789eb5e9990798c</anchor>
      <arglist>(SoPath *newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>d4532da6bafe3fd303620356267e1d65</anchor>
      <arglist>(SoPath *newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>540c65bcb426151f34f1c26e264c7747</anchor>
      <arglist>(const SoSFPath &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>5b354d1c7c0c5583339ed393acd988b4</anchor>
      <arglist>(const SoSFPath &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>f4fb1195601d2f8f609811da5df6c00a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>93807efb545eddeaa6b082600bb3afef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoMFPath</name>
      <anchor>6ed4c8fc64277c7830d7482cca9f4042</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>48059079cd4d27e3f10eeae5187a15ba</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>2d4fb268c4dc1fbf5bcaebb52fbef239</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>c0781fb1f346517f29e79bb2af80d56e</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>bfa11b7d9e9e88e16370a7fb31e3aa14</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>e892ad4f810d5bfcc35114cd205ce47c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>9e901becab866677723bb6aae8ee4863</anchor>
      <arglist>(SoNotList *l)</arglist>
    </member>
    <member kind="function">
      <name>fixCopy</name>
      <anchor>60f6e7960364afce4547908db55fad00</anchor>
      <arglist>(SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>referencesCopy</name>
      <anchor>6621231c47762544cf9cd34648eb90f5</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFPlane</name>
    <base>SoSField</base>
    <filename>classSoSFPlane.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>5b94552bd59644bf60af6671d7a2f04a</anchor>
      <arglist>(const SoSFPlane &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>eb06f4d67b2b33229d125cf82c535dee</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>daa7cbba5dbcebf210b67761b42a4694</anchor>
      <arglist>(const SbPlane &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>e28f2c5df46d1e61483bbf9b905d3d40</anchor>
      <arglist>(const SbPlane &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>e1f4dad4577a8801c1ff8b3ce91ef221</anchor>
      <arglist>(const SoSFPlane &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>2054203f0f89bd6f4f056e6a3d8e56f3</anchor>
      <arglist>(const SoSFPlane &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>404a28e195013af4e7c31b34926d25ef</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>8b2e014e6e70ebda8993dafcb1ab6bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>4fcb0338dd0f5701579e166a1629d74d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>372c9b9e32efc2ade70ceb18ad9d844c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>205738a40ecbbe8a0b0467f36c00f356</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>55bdd7dd5f635ddd5a0aa5aac8323cdf</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7bbb72ba5c74e889420b930e398584ce</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFRotation</name>
    <base>SoSField</base>
    <filename>classSoSFRotation.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>416e7ccb93ad6c474ce68fe0c9d0dc28</anchor>
      <arglist>(const SoSFRotation &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>56a421932e9e99d9f841a210097bda79</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>0823ce858dc9658426dd9c4ad53169a6</anchor>
      <arglist>(const SbRotation &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>3a282e5a553e94beca1a8e42e9c3896e</anchor>
      <arglist>(const SbRotation &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>5f57505bff0ef87349c2dd223f2ec365</anchor>
      <arglist>(const SoSFRotation &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>4cece047d4f35b599f77cd7354a80db9</anchor>
      <arglist>(const SoSFRotation &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>15a04e1bbca4738d7ee672cd5094e24c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>55afc7b3f4186f6ee55968a963761173</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>67bb466d6dca7772893a0dab4d7ce3f6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f8e14e98bcfbe1e6a159bb92d459db28</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>e7ad0bc4d552e0cbe39f6e98a9cbe74e</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>f45cc8ae129b3f3f9a482922f1f48804</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a2b47855a88f952a8cc36e9933d7ef1f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>ea53431d3b14eed6dd8b08bc9fef8d87</anchor>
      <arglist>(SbVec3f &amp;axis, float &amp;angle) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>dd6a824aafb7fbf2ccd80a5045666141</anchor>
      <arglist>(const float q0, const float q1, const float q2, const float q3)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>595a89e001362c09fbb5bf7fbfc8cb20</anchor>
      <arglist>(const float q[4])</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>f771d6204dc8070834564d81eef0eb26</anchor>
      <arglist>(const SbVec3f &amp;axis, const float angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFShort</name>
    <base>SoSField</base>
    <filename>classSoSFShort.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>1bd3fdbc55ee33bd571e795c4442b989</anchor>
      <arglist>(const SoSFShort &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>57001c4d1d0b5c2b7e445912390464b0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>307ca83972678f4cae11106e31836941</anchor>
      <arglist>(short newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>8e113b035bb5a8de32d9aa5926dde61d</anchor>
      <arglist>(short newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>747993f7e2013668e1babbf083e08b5a</anchor>
      <arglist>(const SoSFShort &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>14f924cfbc60486108a8e2e354043fc4</anchor>
      <arglist>(const SoSFShort &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>5d67ef5ae05333c4ac3cd765b0e279c8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>9ce3be929e3063f07168b75ffa9a9427</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>6d2fe01bf8fcd99b63b48669cd6a778a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>fe76039cc3e2a3bdb7464e421734ff49</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>132400523b19890773b34d83078bc2d5</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>19f94fb60d5a393c241fc7a9aed1b7f0</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6b66c7461fc218e33f45d54dbbc0e952</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFString</name>
    <base>SoSField</base>
    <filename>classSoSFString.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>836dd2a4bf441ecb8632ddda097c3cd8</anchor>
      <arglist>(const SoSFString &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>ae7cfe740a26ca2b282427733e386afb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>429822e34f615f91252d7272d074931a</anchor>
      <arglist>(const SbString &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>13ebfeb71e0de95648b0e4146031e637</anchor>
      <arglist>(const SbString &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>f4e7b202ac64dbb770a416011f96c5c5</anchor>
      <arglist>(const SoSFString &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>f26413450e764c6dae861ea260f3c96c</anchor>
      <arglist>(const SoSFString &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>6a09b963cd16a60e9e498f34d71aa701</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>c60d62412739c8e545f863618fe114d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>6c45cc22fcd6a7132d927cbf66115bb6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>208a26486892d95519db438f243ea3a8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>f5966cfe2665fc5fc3ce5aa5586b9231</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>8fa32a9f5fd4e189c9cb9337d5baa54b</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>270920e26cc7f1d6f114c0cba5f09fa4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>4d2d0e11405314e1e966d023916342f1</anchor>
      <arglist>(const char *str)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFTime</name>
    <base>SoSField</base>
    <filename>classSoSFTime.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>cba8217683525648fa612a161254c615</anchor>
      <arglist>(const SoSFTime &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>38c4b4b2decc12ab723fa91701bc8b39</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>cd7582cd578b5bad457d5a68f9cebc91</anchor>
      <arglist>(const SbTime &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>6597d4506d6045d371fcbe69a14cf53a</anchor>
      <arglist>(const SbTime &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>252376b228620c7d4ff5eac9dc158c63</anchor>
      <arglist>(const SoSFTime &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>0c080fca1b780e51e2000982a4be698e</anchor>
      <arglist>(const SoSFTime &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>20b2ddbdea2c408c34510cc704c19c8b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>24bc351c3a414f285903205ce1f56185</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e93ac92bcca537c7ae8fb3605ceb4aa3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>e3930acf0b148b2f435739a907546ee7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>b883d07da23c4e371d832bffc4ec592c</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>32768ba49bf45915fe2981747f15bbb0</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>bc3faf8da1a503dafde59d41cb32d848</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFTrigger</name>
    <base>SoSField</base>
    <filename>classSoSFTrigger.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>1ec3873f21e4e73ca9785f949885e81f</anchor>
      <arglist>(const SoSFTrigger &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>12ff2ac8bf453c35b2435871ad386cfe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d139fc550616b6643b106d546dc4af79</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>69ec10177487c7562aabccbe33852a56</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>597763a2971f5ef4031f6263a08326b5</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>2f35f4fb16af311de505ad59f3268230</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>9dc954bef37eb2257ac9b85364f79d2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>045b573e883437b692d8c0c4edc67a72</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>561547d36093c3d75cd57525b1d15670</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>c35caada131fa81f53d43ee7d7b6ed51</anchor>
      <arglist>(const SoSFTrigger &amp;trigger) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>497a2471a9715a6278a75defd69794ad</anchor>
      <arglist>(const SoSFTrigger &amp;trigger) const </arglist>
    </member>
    <member kind="function">
      <name>startNotify</name>
      <anchor>bc5f31011bf42e2b4c5b4a383043609e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>476fe11c5e7e807492e0a9214dd3ac01</anchor>
      <arglist>(SoNotList *l)</arglist>
    </member>
    <member kind="function">
      <name>touch</name>
      <anchor>db7f1ab13558de6281846da18a7d2fb7</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFUInt32</name>
    <base>SoSField</base>
    <filename>classSoSFUInt32.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>e4113db10d7b6f27edcbbb229d788bf6</anchor>
      <arglist>(const SoSFUInt32 &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>627e07f20d9d29f37a463971a140563f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>e2abcb63fbf80807fe9703e53b0967f7</anchor>
      <arglist>(uint32_t newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>a6386b26a69d4ed33d376c9e2a851b6a</anchor>
      <arglist>(uint32_t newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>0e56ec9d3dcc4b63d4f1b13a6a696426</anchor>
      <arglist>(const SoSFUInt32 &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>4601ea2f1737a796343d7ab46da6146f</anchor>
      <arglist>(const SoSFUInt32 &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>fe508c8eac6099226edefd591d8ebb80</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>bd90d27d5b568ef5f1770cef7e0b7857</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>dde2ba1a8ca7da7947f1e3a2695fb419</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>8aa809fa8d6e542074c8d2a92097e265</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>5568b4441f1e980d98e13c3b3cc13aa2</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>69493a2ba4ec852e84d8dcfcad570258</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>1b0d430fa1e1696f9f0254b1a1527e2b</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFUShort</name>
    <base>SoSField</base>
    <filename>classSoSFUShort.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>01ecc544507161af68816d11f6e87522</anchor>
      <arglist>(const SoSFUShort &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>3efd0a95daa7a6c7b1e83eb0d776ffb0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>7b859cb9b51cbaec18141910a5d8247a</anchor>
      <arglist>(unsigned short newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>054509840ec2a2d678ae7f7d924c2ba6</anchor>
      <arglist>(unsigned short newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>87748770150338aee90e57139075a75e</anchor>
      <arglist>(const SoSFUShort &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>0437cbb22948b06660ee450df5d5d616</anchor>
      <arglist>(const SoSFUShort &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>a844628ac44a8973d4c451ce950771ec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>2299eae602bf96edb4569155f3f8b035</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>a784c3152de19a000fb792e8472a8d7f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>21dd4f2dfaf23d321841914a12005e61</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>52c477d044961baa59d3302df06d19c7</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>31f1eec83f4589ab312abdde2a357032</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>ff2e379ec0663a6e1badb757ce9b5cc9</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFVec2f</name>
    <base>SoSField</base>
    <filename>classSoSFVec2f.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>d1180709691b9a3d61971a410720d321</anchor>
      <arglist>(const SoSFVec2f &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>daad217c63aceea1856fe43f6ce0f00b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>c53d4f4e2b21328a8d3519249005b89a</anchor>
      <arglist>(const SbVec2f &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>38ba7e852b208cde39b664133762d850</anchor>
      <arglist>(const SbVec2f &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>034c792fb6ea06dfe3037c010c937b7a</anchor>
      <arglist>(const SoSFVec2f &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>2fc4ea5e54cb4374e5621cfd67a24750</anchor>
      <arglist>(const SoSFVec2f &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>d9a6a6578246f4ee2a8e31f7928026a8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>f4cef12177d442a15df4fe406aece49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>bace76f5105aad0a270a25fd7b0dd2f9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>826772210401bfb32ddc4e4be10cf859</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>c8e23785a5ee149e421f63b62a2ae8e4</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>8fbfbfb53823bd932932ce0c5bac7d33</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>4e293dbca7970a1db1d42fdd9c48700b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>1820d889636467905681ca1a74c8f614</anchor>
      <arglist>(const float x, const float y)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>ee28a456759b6969cecafe3850c43e70</anchor>
      <arglist>(const float xy[2])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFVec3f</name>
    <base>SoSField</base>
    <filename>classSoSFVec3f.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>6e1a49ffdba4f31be086fc9e1f078fc6</anchor>
      <arglist>(const SoSFVec3f &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>651018c7df43a7b347661e201e53e517</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>f657f9367810c5380cab698f8e6a508e</anchor>
      <arglist>(const SbVec3f &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>f3f85140895481da8f04af88d035378e</anchor>
      <arglist>(const SbVec3f &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>da5e74d494a57c28111bfe49bffd0748</anchor>
      <arglist>(const SoSFVec3f &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>9452a662a8b267b4297fa2b9d27e0f42</anchor>
      <arglist>(const SoSFVec3f &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>25955829b79a19fe73c5118538d7f026</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>20e8c696910e96b489ea9be772f383cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>85535706dc99987f0a2cf44e71d82b40</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>633a9c3abe5f581a4e353555448cd5ec</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>5162520e6e5030ef02d3401d886eea6d</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>f210270615869f63654dc76f6d5ff9f6</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>17b2836804224fd4c5b8758c8741a788</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>df18bd0d19117e7a4367e2c604cb2502</anchor>
      <arglist>(const float x, const float y, const float z)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>c85373bbd89fd21fb06b9ec1bdb9ecd2</anchor>
      <arglist>(const float xyz[3])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSFVec4f</name>
    <base>SoSField</base>
    <filename>classSoSFVec4f.html</filename>
    <member kind="function">
      <name>operator=</name>
      <anchor>d30ddcff1ad5524ac196e258935d9e7f</anchor>
      <arglist>(const SoSFVec4f &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>getValue</name>
      <anchor>c36144e0549e76f2863fb379a4079c41</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>4b37b98aac1d73ad3b2c4242c291751c</anchor>
      <arglist>(const SbVec4f &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator=</name>
      <anchor>010794a7a9731ae178dec645a289f243</anchor>
      <arglist>(const SbVec4f &amp;newvalue)</arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>9b6578d3d24922843e2367b164b3374e</anchor>
      <arglist>(const SoSFVec4f &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>c7adbc203ef92e8f9ec20102c472c1ef</anchor>
      <arglist>(const SoSFVec4f &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>d6d8747680ff6dc705c21e6832612788</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>0873b1bfb80ffd9acad0a3c44f67b980</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>bad3871f23fa68146c5171563c16665d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>119057c9db67311a3d8b821bf12bc57e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>copyFrom</name>
      <anchor>8b8f45c2792348464edfdbee57f2dd34</anchor>
      <arglist>(const SoField &amp;field)</arglist>
    </member>
    <member kind="function">
      <name>isSame</name>
      <anchor>b261053aa921a791d0e53a0d21e0ee7c</anchor>
      <arglist>(const SoField &amp;field) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>51a27208f7c13f170c8b1ab8c826d6cb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>4e61cde48a0424aee414c9e12c319b63</anchor>
      <arglist>(const float x, const float y, const float z, const float w)</arglist>
    </member>
    <member kind="function">
      <name>setValue</name>
      <anchor>4c55a6c141788b7178c8f2b5187f4c73</anchor>
      <arglist>(const float xyzw[4])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoShape</name>
    <base>SoNode</base>
    <filename>classSoShape.html</filename>
    <member kind="function">
      <name>soshape_primdata</name>
      <anchor>98aa0dc61ac111dcda3abccad24cb2a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>so_generate_prim_private</name>
      <anchor>ff7907dbd10585ddd7028df13e425390</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>TriangleShape</name>
      <anchor>997e88ea175786836687c5f2e99aebc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoShape</name>
      <anchor>2e0c814c0033fd77b4214bd4a5d6126d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoShape</name>
      <anchor>813e5f88f7ae3fc672e5c1d28b5738dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>36b9d35d2dc6c891e1d048a9e589b5a2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>a353992a612b2f5da9e1caaa54f3d223</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>d323a95313cb8a4d3b73b38616094feb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>875fc9e984bbc48e77236cd857a23696</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>3a15057afa70e1bb888d2e27ccf45ea7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>affectsState</name>
      <anchor>2dcecc96ec05d4e1f534edb668532695</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>954e546c49b3078934c159d05836cfa3</anchor>
      <arglist>(SoNotList *nl)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>364f51dbdd81c7e432afb9a94e2d12f5</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>a7e1b61eb89c30f60d05032cc703b35d</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>f24558c23bc709b2a28bb2931d91a94a</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>c894fd8fd34d1ddf41e5d65738dd1d6e</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>06a7390e836c583fcd9e840ccd670a52</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)=0</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>60b82169df8b927bb293f6360230651b</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getScreenSize</name>
      <anchor>ef78da6f6a367067cd80b96ddbb7c193</anchor>
      <arglist>(SoState *const state, const SbBox3f &amp;boundingbox, SbVec2s &amp;rectsize)</arglist>
    </member>
    <member kind="function">
      <name>getDecimatedComplexity</name>
      <anchor>a44ae544a11257933115c73243b7fe6e</anchor>
      <arglist>(SoState *state, float complexity)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBoxCache</name>
      <anchor>652f5ff1da23ffd399e604a56c7d1b6c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getComplexityValue</name>
      <anchor>ee602594427f297930af998787853be1</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>e896e3e51b05e1cb639b368f8272b7a7</anchor>
      <arglist>(SoAction *action)=0</arglist>
    </member>
    <member kind="function">
      <name>shouldGLRender</name>
      <anchor>965388c62914e3dbc62122a2b897bd2c</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>beginSolidShape</name>
      <anchor>5b470083dbf7d24a40027f473236c199</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>endSolidShape</name>
      <anchor>200c7b885d33d9dd8dfcba0a0dd8b029</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderBoundingBox</name>
      <anchor>b1cf8b2706e282ec22983c0f30d392eb</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>shouldPrimitiveCount</name>
      <anchor>adb029a1f8ba021db9438db79ace8b62</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>shouldRayPick</name>
      <anchor>c0d7e0481558d69bbbf104a9df55b8a6</anchor>
      <arglist>(SoRayPickAction *const action)</arglist>
    </member>
    <member kind="function">
      <name>computeObjectSpaceRay</name>
      <anchor>413c3ad407a64c76ee88095daa29f353</anchor>
      <arglist>(SoRayPickAction *const action)</arglist>
    </member>
    <member kind="function">
      <name>computeObjectSpaceRay</name>
      <anchor>28f3a842938cb18d1b8cb173765e7387</anchor>
      <arglist>(SoRayPickAction *const action, const SbMatrix &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <name>createTriangleDetail</name>
      <anchor>7e62fb1ce714c316cd20c789bbc4d598</anchor>
      <arglist>(SoRayPickAction *action, const SoPrimitiveVertex *v1, const SoPrimitiveVertex *v2, const SoPrimitiveVertex *v3, SoPickedPoint *pp)</arglist>
    </member>
    <member kind="function">
      <name>createLineSegmentDetail</name>
      <anchor>8e4d78ff576a82d6aa09b9e13d49e08f</anchor>
      <arglist>(SoRayPickAction *action, const SoPrimitiveVertex *v1, const SoPrimitiveVertex *v2, SoPickedPoint *pp)</arglist>
    </member>
    <member kind="function">
      <name>createPointDetail</name>
      <anchor>1cd96e88309e6b7e8443d16e159d31f7</anchor>
      <arglist>(SoRayPickAction *action, const SoPrimitiveVertex *v, SoPickedPoint *pp)</arglist>
    </member>
    <member kind="function">
      <name>invokeTriangleCallbacks</name>
      <anchor>35d5b408cab8a05de63d183b180e7fc0</anchor>
      <arglist>(SoAction *const action, const SoPrimitiveVertex *const v1, const SoPrimitiveVertex *const v2, const SoPrimitiveVertex *const v3)</arglist>
    </member>
    <member kind="function">
      <name>invokeLineSegmentCallbacks</name>
      <anchor>1fd152ec576882405fe393f70a0227ad</anchor>
      <arglist>(SoAction *const action, const SoPrimitiveVertex *const v1, const SoPrimitiveVertex *const v2)</arglist>
    </member>
    <member kind="function">
      <name>invokePointCallbacks</name>
      <anchor>19965c48b407c106cb22525fb2a30c08</anchor>
      <arglist>(SoAction *const action, const SoPrimitiveVertex *const v)</arglist>
    </member>
    <member kind="function">
      <name>beginShape</name>
      <anchor>29bf3cc5dc893fc6d5d7885a21c82413</anchor>
      <arglist>(SoAction *const action, const TriangleShape shapetype, SoDetail *const detail=NULL)</arglist>
    </member>
    <member kind="function">
      <name>shapeVertex</name>
      <anchor>1f6330ca029019e4dc80ef0b892c67f3</anchor>
      <arglist>(const SoPrimitiveVertex *const v)</arglist>
    </member>
    <member kind="function">
      <name>endShape</name>
      <anchor>0b29b0370b95448cbbeb06c4ce2fa889</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>generateVertex</name>
      <anchor>a8cf4120713ff71925f20d8d4ef99ac3</anchor>
      <arglist>(SoPrimitiveVertex *const pv, const SbVec3f &amp;point, const SbBool useTexFunc, const SoTextureCoordinateElement *const tce, const float s, const float t, const SbVec3f &amp;normal)</arglist>
    </member>
    <member kind="function">
      <name>generateVertex</name>
      <anchor>3938f9853c3648d362f493065f696c10</anchor>
      <arglist>(SoPrimitiveVertex *const pv, const SbVec3f &amp;point, const SbBool useTexFunc, const SoTextureCoordinateElement *const tce, const float s, const float t, const float r, const SbVec3f &amp;normal)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoShapeHints</name>
    <base>SoNode</base>
    <filename>classSoShapeHints.html</filename>
    <member kind="function">
      <name>VertexOrdering</name>
      <anchor>8b5f51cadba677ab1fb3abb6b5bb589f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NKNOWN_ORDERING</name>
      <anchor>8b5f51cadba677ab1fb3abb6b5bb589f2f6030ff2a73dbcb19dd16a83d5bb9d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LOCKWISE</name>
      <anchor>8b5f51cadba677ab1fb3abb6b5bb589f60096b3deefd82e621aa16d5c08c0495</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OUNTERCLOCKWISE</name>
      <anchor>8b5f51cadba677ab1fb3abb6b5bb589f35af3b282ec837d8d00027262431d2e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ShapeType</name>
      <anchor>defced009b47d7b5debc6b2d3ce19cfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NKNOWN_SHAPE_TYPE</name>
      <anchor>defced009b47d7b5debc6b2d3ce19cfbd947376acd1a4f2828ad8172c214aff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OLID</name>
      <anchor>defced009b47d7b5debc6b2d3ce19cfbb8299de0fecb6f5cee3ef42fee7e2e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>FaceType</name>
      <anchor>19a3acc8d0e36b7fa2b43339e1a4b964</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NKNOWN_FACE_TYPE</name>
      <anchor>19a3acc8d0e36b7fa2b43339e1a4b9646ef654ad4f56f00d5c8e1ac0ba394c14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ONVEX</name>
      <anchor>19a3acc8d0e36b7fa2b43339e1a4b96441006d88add0b114dfaf545256a2aff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoShapeHints</name>
      <anchor>1c36b751f6a5b31463cbd32d45816461</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoShapeHints</name>
      <anchor>e68fff8678714750ead87cd5a822c51e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5b8243876b7952a73d3a042b1995ee81</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>2c129cf4033b56b09471bd7d0b4f2709</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>e5d5af81486aea121eb898b6253f881d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>b6a778a3cccf83d712dfc230be4dcf53</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f6703410b64044ef88e3f0e683cdcf89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>3bab27ddd4d4e6b89222297db8b0cbb2</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>ad936a2675c5af7ebce1e7354c4a60e1</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>6deab5e0c59f45c9c189c6119feb077e</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>548c73331827f815e17b10a786ac49fa</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>1561331b58ecb6a3c97db298544264e7</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>vertexOrdering</name>
      <anchor>1ad504e82e6f9478b1ffe3f8730107d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>shapeType</name>
      <anchor>259749fdc51667b6a424862f43165790</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>faceType</name>
      <anchor>8472cabcb2457e13d74034a3b6b8810a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>creaseAngle</name>
      <anchor>c801b32b6b907de13c07862fbbeb38c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoShapeKit</name>
    <base>SoSeparatorKit</base>
    <filename>classSoShapeKit.html</filename>
    <member kind="function">
      <name>coordinate3</name>
      <anchor>979ccb005d280452d6180cceb9a7eb2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>coordinate4</name>
      <anchor>29952111cc6d30ff5b4e8acc5eff0b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>localTransform</name>
      <anchor>53bf09da213f5bbfebd569c86160bff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>materialBinding</name>
      <anchor>5389a162e24727f9f97215cbb46af4f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>normal</name>
      <anchor>3a96d4a450b13c597e0cad37bc3fe62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>normalBinding</name>
      <anchor>03cec058ed4d706ea1265a9e4d95b6b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>profileCoordinate2</name>
      <anchor>2d27e4e8aea92475017236d262769e47</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>profileCoordinate3</name>
      <anchor>d44233e01581f19e5d4902759b350033</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>profileList</name>
      <anchor>98b05b2d2609e7b229ad4bf6aa1adcc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>shape</name>
      <anchor>e8fb2326b31b942d1534d0b7fbc408d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>shapeHints</name>
      <anchor>ed2a0fb8af910e7996fec72e9dc15866</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>shapeSeparator</name>
      <anchor>69a0cc28ee4b3b0d5df2a7303d464447</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>textureCoordinate2</name>
      <anchor>04cb3b7653f9390d49cfc2afb7921b87</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>textureCoordinateBinding</name>
      <anchor>741cb4d907cd45622d85fe346f8489b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>textureCoordinateFunction</name>
      <anchor>ae01c4598d4b70fbf6b7135a52b1a906</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoShapeKit</name>
      <anchor>6d241c016b38ca4d5e0d823df77a72bc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoShapeKit</name>
      <anchor>472b16e7c7dc374a0bed0ec129537c26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>b91eab62c2720b6a00a89f186e22d994</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>ed040cfe3c4c6ffc59e9e9667095fa75</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>7f2f1784cfce4633d408f55f40cc2407</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>059412d2a4723170072b32d5b34af6d6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>5ad3497e35a3098b74e7061d68e49a33</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>accf22b9045950898f67f4740cec8b20</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>3a6d8f5596432120da85e7c900450b45</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>64d7729ecf9e5350c6abad3cec8f2fca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>996543f508a0e8aeebda0d3467b1d030</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoShuttle</name>
    <base>SoTranslation</base>
    <filename>classSoShuttle.html</filename>
    <member kind="function">
      <name>SoShuttle</name>
      <anchor>1e33f761c38de87c3394b22b072ee6d1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoShuttle</name>
      <anchor>c12e09a7c1124ced981042534a7e4e78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5893e65340b900dbb8597e4c47d778da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>326b721209f8e786a1d3d4e884c836f7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>6574a44642b6e938b11e07df0ced9f15</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>93f93735eb4c9eaff06c40cd98cfc1a5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>5a45316d9cc15e1935aa4365a25ceb43</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>bf847261f74c7f25e544ba2585565b3e</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>translation0</name>
      <anchor>884ea58895419eb28ab08151b8ecb13a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translation1</name>
      <anchor>ece1c9161cc2129fe4a3de271e88ff7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>speed</name>
      <anchor>011a8b3a88c365e69d4a4aa4ed9c7b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>on</name>
      <anchor>8db7104660970b90ce136eb55c4106a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSpaceballButtonEvent</name>
    <base>SoButtonEvent</base>
    <filename>classSoSpaceballButtonEvent.html</filename>
    <member kind="function">
      <name>Button</name>
      <anchor>c1a78099c48e9ca031d4abdbcb77a2be</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoSpaceballButtonEvent</name>
      <anchor>3416dbe940928a5bc3bf1f50289e3c51</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoSpaceballButtonEvent</name>
      <anchor>c7be0dec848059a6defff74f9517b014</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>0cdb188de796385e9c718a9ec828a1f5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>7490138d945bc36c85d08e2e889fd224</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setButton</name>
      <anchor>2c3ef492dc85273c81042e2601f429b0</anchor>
      <arglist>(SoSpaceballButtonEvent::Button button)</arglist>
    </member>
    <member kind="function">
      <name>getButton</name>
      <anchor>7f5ec84ba34efe30e7ba4eef70779c66</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isButtonPressEvent</name>
      <anchor>16ab50bedb45db9e18ae83a5d0939c69</anchor>
      <arglist>(const SoEvent *e, SoSpaceballButtonEvent::Button whichButton)</arglist>
    </member>
    <member kind="function">
      <name>isButtonReleaseEvent</name>
      <anchor>e58b601aa17b103548457dc0b0bcf037</anchor>
      <arglist>(const SoEvent *e, SoSpaceballButtonEvent::Button whichButton)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>293926ff676d0c5e1b6a5d96fc5c3ed8</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSphere</name>
    <base>SoShape</base>
    <filename>classSoSphere.html</filename>
    <member kind="function">
      <name>SoSphere</name>
      <anchor>5790f83b94eb551143967478abef4f2e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoSphere</name>
      <anchor>8277c308b7f45bb0f59b05661c9e77b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>7a518312af5a4dd45a1bf8a3644e81cd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f33c53b5f17db259c0f1586ecf3b5974</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>847c015b1951aa50e1c383530b57a782</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>8401533f0b66d266eef510a1b5cb6fdc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a58d394a6ed5230c495176b630b07024</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>423d6458b4513f025f4ed440f9d77df2</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>cfe560f1a77abc144b352085b6eb9bf9</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>4f76403dde6842557694d1b770a55193</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>926994a9ef759541c705d7eb74ccf71c</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>e05119d9f68f1d7666a53fb0be2f7efa</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>radius</name>
      <anchor>a2808fcef9f6d9e7479361ec92b5dbd6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSpotLight</name>
    <base>SoLight</base>
    <filename>classSoSpotLight.html</filename>
    <member kind="function">
      <name>SoSpotLight</name>
      <anchor>c8d939957124e6aad0ae2dcd641e670b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoSpotLight</name>
      <anchor>26d9222804846073a365508041ac621c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e0af840c71b8f86e7a23f324b6451638</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>30e57635cd3b6e545ce71e538dca2999</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>947de59a66e1c90505e58d40eeaa5b11</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>103a122f32a68af11e45bfa84b85ee34</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>5e37aa4e539765a9ae84ceeda197fb5c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>b4ab3fe645a571825096760bb1f85141</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>location</name>
      <anchor>85c4fefdc2bf0d9653921b55fcef3756</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>direction</name>
      <anchor>f1d55d115b1f9751e23989ed39a238be</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>dropOffRate</name>
      <anchor>dbfe19389f27dfc2740a8cd7bac98448</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>cutOffAngle</name>
      <anchor>71ea38384bdabc980dbc64aa472a7cef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSpotLightDragger</name>
    <base>SoDragger</base>
    <filename>classSoSpotLightDragger.html</filename>
    <member kind="function">
      <name>beam</name>
      <anchor>0c72f6fcc9bd97dc9a6eb6468d25bd94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>beamActive</name>
      <anchor>f387e1562383e1893e8fb484f367cda0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>beamPlacement</name>
      <anchor>4332712c126291c7a885762c31bd31fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>beamScale</name>
      <anchor>0698cf747fed9385de650cc1c0b74351</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>beamSep</name>
      <anchor>a2edc346ff409e25ce78d58e8803c14a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>beamSwitch</name>
      <anchor>374a3785cdf7502a6d21cb464c869f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>material</name>
      <anchor>92367f77e2c3deee835301e83b3959c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator</name>
      <anchor>d1447e91549f24fd7b7c94f966f573e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator</name>
      <anchor>7f757da81c4ec278929714ec2d919703</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translatorRotInv</name>
      <anchor>8e105167d5315779402adde64b147073</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translatorSep</name>
      <anchor>6bc382ea76e92ea43691d72e65072282</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoSpotLightDragger</name>
      <anchor>626efa032719b819e682412906f3590d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoSpotLightDragger</name>
      <anchor>8aee5b7120a74063140e3e47dde88306</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5cde4b30e99f97b192c7ee84ae2ae9c2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>8d7b712f4b9da5236abd199b7a380707</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>32f4fbad86e61fc288d6088e06b7f06c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>dd156ac0253b87e1a4eef607949e68de</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>9da07dc973c42dd4ad9d0e21e0db5661</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>addf0827c52af9b173971b4b9d1e7f56</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>b33146cceac26792c81c27a749f2b391</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>09e2b901519d479175646b8014f1ec0d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>cc39eedd511c5d39cdcf8fa662ba9098</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>54d8e06e3ddb2677d09cb5e4a17a8325</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>startCB</name>
      <anchor>6a657ec41269fb8ba87db12655e79168</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>motionCB</name>
      <anchor>07e01494e3dde41ef76ee39b578a417c</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>doneCB</name>
      <anchor>3c955a01348d1e60968a203de9296d0f</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>853bba928334fcbde8a4a8724df1d327</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>e7c0b2cee5d971591aab5486b116ef85</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>0b769920ba96776178bc508ad28d6587</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>41404c22247ef470972e25679924b444</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>beccafcf97699934b4b37f05275cb970</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setBeamScaleFromAngle</name>
      <anchor>feeaadec63915829ec9ff322942642ea</anchor>
      <arglist>(float beamangle)</arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>7eb22602492203436a681dcdb240d47f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>c43d096d9a6ed8d8377f3746dfdfeda7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>angle</name>
      <anchor>b543408556e5861784e506b52036fb63</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotFieldSensor</name>
      <anchor>26a18ddf42aceae6d495272424c58210</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translFieldSensor</name>
      <anchor>ebdeb4aa8646744668faf45be79cb528</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>angleFieldSensor</name>
      <anchor>0bad2bba32e250db880b8930caa1fe5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeProj</name>
      <anchor>558984aefc55d7a969522d6bfaa423bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSpotLightManip</name>
    <base>SoSpotLight</base>
    <filename>classSoSpotLightManip.html</filename>
    <member kind="function">
      <name>SoSpotLightManip</name>
      <anchor>8c1de3fe32f01010314a0e5f1a410be9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoSpotLightManip</name>
      <anchor>77d811ce37334cc67a9e2f027dbce077</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>b7aa7584f22bcbaf68d83eb02eedff29</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>d19a99305656ab6de8d1b6ac60947e0b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>ff31cede2e52fac77a43303843c105c3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>7a9a2c25eb3e8d3b954d79c9420f0686</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>eb3eac73b939a3672bb0263f25681b46</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getDragger</name>
      <anchor>1bbca8c91d1b6604fdf65c54f2270107</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>replaceNode</name>
      <anchor>da5f4432cc5b08b16e27c3d697ac2943</anchor>
      <arglist>(SoPath *p)</arglist>
    </member>
    <member kind="function">
      <name>replaceManip</name>
      <anchor>b389be5cc4d634324cd79dda624896a2</anchor>
      <arglist>(SoPath *p, SoSpotLight *newone) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>6646ee084e267e2c0a9ad722ffb0b326</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>5f6dbcf334b10d45e8f03cdf6efe9616</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>deeb8d205cca15a87346ca432feb5f3e</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>e6e88e4b78a1c78751e657c0bd6e4ab9</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>9032e4751cd3e6afcba96ae6165c38ac</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>bb99327f4543d06745601983549d1362</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>d914402827774baec7965fa1385da130</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>11a3a1d746d7079c59f13ebb3fe9670d</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>3cf2ab6bd834c4e28b175b50ee2ace45</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setDragger</name>
      <anchor>de7f23e2bc4cce0ac8be73cdbffed1da</anchor>
      <arglist>(SoDragger *newdragger)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>4597be6fde6a4f7ff8023f858be36566</anchor>
      <arglist>(const SoFieldContainer *fromfc, SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>transferFieldValues</name>
      <anchor>bf6823bea33cb96fd2b29182638e6361</anchor>
      <arglist>(const SoSpotLight *from, SoSpotLight *to)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>2bbc6eb794a8ae6426a7d1574c6d14df</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>f3675d1a35b59d431cfef1696719a070</anchor>
      <arglist>(void *f, SoSensor *d)</arglist>
    </member>
    <member kind="function">
      <name>locationFieldSensor</name>
      <anchor>47e38fd14c0525f5bdeaa7bb800ef99d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>directionFieldSensor</name>
      <anchor>790e759444fe7341bb7b562d91ef2c86</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>angleFieldSensor</name>
      <anchor>134fd59a4d0eb102382d1c0afb8436a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>colorFieldSensor</name>
      <anchor>5b74b34c726321fecf29081cea7249db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>children</name>
      <anchor>366d602a24f94e5d5dc6e49d4b27ec49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoState</name>
    <filename>classSoState.html</filename>
    <member kind="function">
      <name>getElementNoPush</name>
      <anchor>4a9f72f0f5a1399c5870406e6b77f2a2</anchor>
      <arglist>(const int stackindex) const </arglist>
    </member>
    <member kind="function">
      <name>SoState</name>
      <anchor>94916d151a7e7c45aca1e5f684975a48</anchor>
      <arglist>(SoAction *action, const SoTypeList &amp;enabledelements)</arglist>
    </member>
    <member kind="function">
      <name>~SoState</name>
      <anchor>c158f1d8718173a61a9db10bd95d751d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getAction</name>
      <anchor>34f184c056e248b3539b1cce0ffab82b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getElement</name>
      <anchor>ff4a1d584519c8b108ec273298a09860</anchor>
      <arglist>(const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getConstElement</name>
      <anchor>a2d86fd440b34353659312850380d7c8</anchor>
      <arglist>(const int stackindex) const </arglist>
    </member>
    <member kind="function">
      <name>push</name>
      <anchor>3cfd0e43dfb2469eec5dd9701860ec9a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>pop</name>
      <anchor>9bd01b48366dfda61f0b0b4f2a4fdac7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>print</name>
      <anchor>3041ab0d12b148abe9a1031ec91d4847</anchor>
      <arglist>(FILE *const file=stdout) const </arglist>
    </member>
    <member kind="function">
      <name>isElementEnabled</name>
      <anchor>53a979fb6cbd89f28a6756fa51186412</anchor>
      <arglist>(const int stackindex) const </arglist>
    </member>
    <member kind="function">
      <name>getDepth</name>
      <anchor>c787e8d1182707207ed4012d9e2b5417</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setCacheOpen</name>
      <anchor>f478444cbaebe45de12946295a7c8318</anchor>
      <arglist>(const SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isCacheOpen</name>
      <anchor>c457821352458e9c48aea1d7a13097e3</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSurroundScale</name>
    <base>SoTransformation</base>
    <filename>classSoSurroundScale.html</filename>
    <member kind="function">
      <name>SoSurroundScale</name>
      <anchor>791040411db4476ca195fa3d5cfa684c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoSurroundScale</name>
      <anchor>7dedffcd634b0bdfa508b9fbce23d838</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>9e05d6c3447bca68a26f052c5f34af02</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>a45be99e52d804af95e23b770981d7e2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>6c5c9bd759180f69a2a89efbde053eba</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>93321a036df49473ec63d4cfc05cc8a9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>070cf88975f773424a1706854cf0e701</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>invalidate</name>
      <anchor>c9f775d75056826d60ed2d435239e53f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>742eef47ef7a8530f2b166ed18cc02fc</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>setDoingTranslations</name>
      <anchor>6e81c5ed5a4d2fc4c452d7edc0196e0f</anchor>
      <arglist>(const SbBool val)</arglist>
    </member>
    <member kind="function">
      <name>isDoingTranslations</name>
      <anchor>30b3fc1f1699a265532790cca6657a33</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>1cf434aa8a3125e889782cb838bcacfe</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>96b08e05de7d873d291b35b262572d99</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>a30c5e96c21024c88ea091dbbd14f33c</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>db948487c8f7c4f8decfbf7f0217ec6b</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>cb0eb758ebeab44ae4520442480dd1d2</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>updateMySurroundParams</name>
      <anchor>d48b0edbff1883860dbd270b90e681b8</anchor>
      <arglist>(SoAction *action, const SbMatrix &amp;inv)</arglist>
    </member>
    <member kind="function">
      <name>setIgnoreInBbox</name>
      <anchor>fb3ae75f4dd97dc3a1dab29476d3eb55</anchor>
      <arglist>(const SbBool val)</arglist>
    </member>
    <member kind="function">
      <name>isIgnoreInBbox</name>
      <anchor>15372ed13d1f6568577f949cd98d35d8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>numNodesUpToContainer</name>
      <anchor>5d1f299c5c2ea15f3e1bfbf5ee662b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>numNodesUpToReset</name>
      <anchor>f3d44b13f2df84250318b7d5ceae7e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>cachedScale</name>
      <anchor>a92e44b97d7e26c81358f1e9e8cd110d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>cachedInvScale</name>
      <anchor>3c9d171bf7fda76ab3113582100a943a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>cachedTranslation</name>
      <anchor>a4e1a9bd348d6bd988bc551786b808e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>cacheOK</name>
      <anchor>790f37525aa6147d1ca0aac8deb2160b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>doTranslations</name>
      <anchor>b9e591355b45ca4d78364621135d2c9c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoSwitch</name>
    <base>SoGroup</base>
    <filename>classSoSwitch.html</filename>
    <member kind="function">
      <name>SoSwitchP</name>
      <anchor>6f9fb05de06fca32502b22bbeb17663e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoSwitch</name>
      <anchor>c19a2ab1b2ebb6fa536de922e92b9d6c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoSwitch</name>
      <anchor>ffb4f0a9960cc79c27e4f4bda14b37a0</anchor>
      <arglist>(int numchildren)</arglist>
    </member>
    <member kind="function">
      <name>~SoSwitch</name>
      <anchor>038f47cb116132919bb1d785c5fa8b27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>491ef268f95ac5a6bb296d604e87fe3a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>ce2d13f9428ed2530d2bfeed56c24c66</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>796f7f92b7cebd2c1679af2cf137e829</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f5c95ccdf051a8d8e32327c57e39a83c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>3a100def3b3871d5784614980f932fb5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>affectsState</name>
      <anchor>3f0061b3a32cb55405ec28f39ba094ea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>91514c3299981f6138c6a9972e34ff4c</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>67630373f315058d8000b1986ecac8ab</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>68274138ca68093e47dafdf845c7efc6</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>eeefee4bb66d1c809d5d831409ae087d</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>1527d49db95a9ed6eb73e8a8a561a66e</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>a60dbaffc7675e1e7c1281490db7f982</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>11b63f0481af4a33df554d1c0a0fe233</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>1f54d63b548492bea3e8354aeec6f8d8</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>5025781a90ff400f64fa14e66fbbc9a1</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>76c5383ea5e8755929bde677a8e3b01a</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>0d064899e143e24586b7a0f5cef4702b</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>19b44d7e700ce3cd20e2b34e82b54a39</anchor>
      <arglist>(SoNotList *nl)</arglist>
    </member>
    <member kind="function">
      <name>traverseChildren</name>
      <anchor>950b9981ab3509619bc69f1415323d99</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>whichChild</name>
      <anchor>28c5635defb50ef668d9b9a806ec1a26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTabBoxDragger</name>
    <base>SoDragger</base>
    <filename>classSoTabBoxDragger.html</filename>
    <member kind="function">
      <name>boxGeom</name>
      <anchor>e8cbfbf9d20e99e5826b32cb38c1deea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>surroundScale</name>
      <anchor>f09dd3893601de03c53882593db28edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane1</name>
      <anchor>c5c03a31bf59ca654aeeccc2ad34f581</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane1Sep</name>
      <anchor>8aa216a6e59426af0e851dbce8ab3194</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane1Xf</name>
      <anchor>04c2c302ca6377721a1a51a5aaf8577e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane2</name>
      <anchor>b42045a8c7938241cb88fc8b2ef3dab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane2Sep</name>
      <anchor>7a5c2e10957f3071db2ac0cd018a07a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane2Xf</name>
      <anchor>b0ebc241a213d33638e723dae2de2a1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane3</name>
      <anchor>19cbf1896d2fe65b7486d160b32f9376</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane3Sep</name>
      <anchor>8f933d38f7af44d2c1675fde32b06fe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane3Xf</name>
      <anchor>03acfc15abfa3c5a34c173cadf111819</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane4</name>
      <anchor>7f0419406b79e907696ca76dc8ed918d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane4Sep</name>
      <anchor>210074a1bffe4a73ba92e957bd4c078b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane4Xf</name>
      <anchor>0d89f99c5fd62084d4ed8e09667df37f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane5</name>
      <anchor>6409ddcc154981fcbc786334f9b05d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane5Sep</name>
      <anchor>2f5d26378533f3ebb254ed2abfd45a95</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane5Xf</name>
      <anchor>8ba4c023c1000fa8dac5bc4b28516bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane6</name>
      <anchor>f19bbf87a3d785e70a492301f390e0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane6Sep</name>
      <anchor>371c712f88cc45c7b98af641418d38f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>tabPlane6Xf</name>
      <anchor>02bd2c44ec69c6f918566f93f728c144</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTabBoxDragger</name>
      <anchor>32cff5145eeb196c22a318ebcfc8d8ba</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTabBoxDragger</name>
      <anchor>9b5aca647d6188685c3c4ca88dc20f70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>86f80354c26124dbf038f5d4f0850cdd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>e553b59930125a974fe3d4f9c663030e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>674ab979203ef5aca955b5022e567293</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>3872ca346c6e97201bcffe8c056241ae</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>ff6476a06dcd563d75025006fa7ba698</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>4355e44eae195a98e9041a58f9e5975c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>51019b1d5a9c169bc848ac1074d7f3a2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7a055929805e0d8c848c74f8ab80f687</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>adjustScaleTabSize</name>
      <anchor>085f1a07cac77b009c6f2209c01bc730</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>692462e6b1271c2bd201c37a6330b4d9</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>6fa4ab12d17da4e89dad6bd112274ef9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>invalidateSurroundScaleCB</name>
      <anchor>18e7a567340514942955b79c7aa06964</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>82a92fbbb02c188d16b1e43b81069f99</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>9552e42bb049fd42cc8886db0d4b3662</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>08eb8946fc17c0b8fcdc9ce38d88b0e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>18ad7922ca14f4779224f22ded94e66d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translFieldSensor</name>
      <anchor>a24497600959e9651343113215783299</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFieldSensor</name>
      <anchor>2ad77a4f60cac51975ffa8dd0d3aec67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTabBoxManip</name>
    <base>SoTransformManip</base>
    <filename>classSoTabBoxManip.html</filename>
    <member kind="function">
      <name>SoTabBoxManip</name>
      <anchor>a4dc49420032d118e3fad1f51cf0ef0a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTabBoxManip</name>
      <anchor>951a964c48073bb28434653ea77d10f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>14c83f94c119cc909bff97210e90e253</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>0b133f5ed254ff6950d15604c4d79d02</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>bb3af26001270ab9f06c06319d417753</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>e94c13f55a5d7dd7859b35168b676993</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>5e0fd46a9eb41996c5ee5f6bedddfcc0</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTabPlaneDragger</name>
    <base>SoDragger</base>
    <filename>classSoTabPlaneDragger.html</filename>
    <member kind="function">
      <name>cornerScaleCoords</name>
      <anchor>dca4b8a129b1b38ed846790eaf6169d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>cornerScaleTab0</name>
      <anchor>289132eecb7e362ac0a39e3cf652183b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>cornerScaleTab1</name>
      <anchor>0934815481e9d0fe246d2421ac86c980</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>cornerScaleTab2</name>
      <anchor>25c0b6904a3641a741b9d5293984f69a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>cornerScaleTab3</name>
      <anchor>5ecae667c3340be99da3e4c6b6c48d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>edgeScaleCoords</name>
      <anchor>dcefc5967270e2e9f94ef80f288d316c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>edgeScaleTab0</name>
      <anchor>8bab573b6365b29f5d6983c7d37583d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>edgeScaleTab1</name>
      <anchor>ed6b7dd3c7cfd89c480af18328599d1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>edgeScaleTab2</name>
      <anchor>4a5520153ce15a3a070212ebef799c3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>edgeScaleTab3</name>
      <anchor>45c501f1d31c9ddff1a3e42f0053cf75</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeSwitch</name>
      <anchor>fcdab07dcf8488130b8c3d6397803a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleTabHints</name>
      <anchor>972d796e1f8ec6cee8a0e0320b6d6f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleTabMaterial</name>
      <anchor>e4bb6d11813be661c5acc8a443be0d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleTabMaterialBinding</name>
      <anchor>79ff070bf144fd6df5debb65364ef9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleTabNormal</name>
      <anchor>6b4d83c5c69daf1493c0e13912e0c1a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleTabNormalBinding</name>
      <anchor>d6d50ea3003e82e39a2b57dce0ebadb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleTabs</name>
      <anchor>969377a4cbd3a7978dfd84d2090c751a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator</name>
      <anchor>0da856523082e075591d3a898049d772</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTabPlaneDragger</name>
      <anchor>fdb307c44c92ed13d7805a912f2523f0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTabPlaneDragger</name>
      <anchor>fbd4b719077a1f9f71828737f060f24e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>97d73fefdb3cdfde1573d4eba1155bdd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>74f4da09616b7999ef7b1c6da7a5a33f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>ec542d6b73d526358dc9d015fb2b59cf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>934694c21b4362556b1f597d3c3ed276</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>3abfad7926d73145a70acf7ba6327556</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>2c51716b480ce0fc374ee56cc36280d4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>21749d8686f959b1ce98d5aaaa400ac7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>939d483b454534506fd8fbe16eba193e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>adjustScaleTabSize</name>
      <anchor>4760303f4b8bbca163d73aa54c06d02e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>e0c7f3d4d036c4b1dea15c04b587c5ba</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>1d3ab9950c10080b2cade844b8ab00e2</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>2b3794e96be5b3b974c1b9591e411ba1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>reallyAdjustScaleTabSize</name>
      <anchor>e3bf7567ef3f9852be02b47742816bea</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getXYScreenLengths</name>
      <anchor>190847534b35d6ac27267bafa5905c3a</anchor>
      <arglist>(SbVec2f &amp;lengths, const SbMatrix &amp;localtoscreen, const SbVec2s &amp;winsize)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>497917bdc54288534711d72e1781e658</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>d7747700b7090a7461921a9fe3215210</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>f0025733585103d3f4ff8ce2ab9656c2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>9034e26daced84f245bb1834c9093e66</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>9dad45effaac41a86e248bbe0c705cf4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoText2</name>
    <base>SoShape</base>
    <filename>classSoText2.html</filename>
    <member kind="function">
      <name>SoText2P</name>
      <anchor>aa5327a4d1d1f53acdf358766189fa62</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Justification</name>
      <anchor>2b916b2cdf2af5de4e02289287055195</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoText2</name>
      <anchor>bce21ed959d467b28115c8a72fa88283</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoText2</name>
      <anchor>0f1b8f79b7e79e29e28d8016dc7db302</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d7cd30e811617d549f365d6fe92d2c03</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>fa1d75cf990ede3c140a05bc2852fa4b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>e79dc57d80cada2dc5cc7e86f5fd8512</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f768b57907505654dbb67e39b36813b3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>68b2f5c8ace580babfa5662e19e94677</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>b827c34aa2b59c5698377cad267c0cb8</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>e6126a3954c8350cdb92fa6108149f12</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>643eeacc05bf4a811c5c59c187df624a</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>384bdec1433d78bc9c088d6058789cd5</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>73e0e438e413da41370d5f156c0f6828</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>string</name>
      <anchor>4942971760f490c3e62d809ceaaa97c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>spacing</name>
      <anchor>be85c0b6f6daed388cfbf38adbf36c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>justification</name>
      <anchor>daf2d2005e6420461e9d57c31f97f4a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoText3</name>
    <base>SoShape</base>
    <filename>classSoText3.html</filename>
    <member kind="function">
      <name>SoText3P</name>
      <anchor>b91042185efd7bf8cf9741d8e28ddd1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Part</name>
      <anchor>7a795bea518688db02b74ec9b99edd59</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>RONT</name>
      <anchor>7a795bea518688db02b74ec9b99edd59d1d4a00f85648a48b36aa6135ca10d71</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>IDES</name>
      <anchor>7a795bea518688db02b74ec9b99edd59ac8b4b6bf14c0e49926963773e758291</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ACK</name>
      <anchor>7a795bea518688db02b74ec9b99edd59d9f89a1e9bd16f6d57fdebcc211d08ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LL</name>
      <anchor>7a795bea518688db02b74ec9b99edd593a0fa1954a85f021098fc524bb398e9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Justification</name>
      <anchor>560b6a63e13298862b0e945ee4775584</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EFT</name>
      <anchor>560b6a63e13298862b0e945ee4775584f994e589822a3f42b2857f127af15509</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>IGHT</name>
      <anchor>560b6a63e13298862b0e945ee4775584685949a03f855fb9224bcf74e45fa637</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ENTER</name>
      <anchor>560b6a63e13298862b0e945ee4775584d42d86a8828cd5776f7c0d8afc0f7c45</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>f113fd8ba6dcf87924e1dcfe5f49d740</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>ecf15e6d416224d239459ace6c127e3e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>ffee8010fdb625f0c2c51947efc275a6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>40a1decae8a016a3d44e390f16084b48</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>be749e58dbb8aa7a0be8fd025bab8f59</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getCharacterBounds</name>
      <anchor>220acf8612aaa63a89b506b42f6c6887</anchor>
      <arglist>(SoState *state, int stringindex, int charindex)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>73d25411ae2a8486bf85662a30d87598</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>5ee161a6186d0180a643b7f08c865ec2</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>e9dd5d05599692b2e5d6e1e81eae7d46</anchor>
      <arglist>(SoAction *)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>598d3d340df34aeb70eb0d997027ae75</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>createTriangleDetail</name>
      <anchor>4fd8c9254697231dfe2e25e5e3e3cd27</anchor>
      <arglist>(SoRayPickAction *action, const SoPrimitiveVertex *v1, const SoPrimitiveVertex *v2, const SoPrimitiveVertex *v3, SoPickedPoint *pp)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>a58b90aa633a2caa7c5ebf2a098aceb6</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>string</name>
      <anchor>e119c4be503e0357d61dedb6f8218332</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>spacing</name>
      <anchor>0292971c2f1bda6e4e4dac28f13dac57</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>justification</name>
      <anchor>3ca5396211268bccace35366372cfac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>parts</name>
      <anchor>ded5e059ecdc86184fbcfe02f6d302ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTextDetail</name>
    <base>SoDetail</base>
    <filename>classSoTextDetail.html</filename>
    <member kind="function">
      <name>SoTextDetail</name>
      <anchor>434003745414c03fc319eb99d53801d0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTextDetail</name>
      <anchor>3691b78cee7a14315d1ede7438adef7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>8287afb399e8437773ec18fc9b747acb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5995c6655c9cf095902d749ed6fd8082</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>105dae58831fe0a1cf816629b4f594cd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copy</name>
      <anchor>9fcc3201736df23f5ea93ace435d15ce</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getStringIndex</name>
      <anchor>06783675d0ae4e18fd8f726fbf609957</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getCharacterIndex</name>
      <anchor>58928bb9680da910926084a76dffa47c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPart</name>
      <anchor>9e9870155f78e3c447d4414cd469b82a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setStringIndex</name>
      <anchor>d3c99a6b8153e9bb0ae41919f35917da</anchor>
      <arglist>(const int idx)</arglist>
    </member>
    <member kind="function">
      <name>setCharacterIndex</name>
      <anchor>70e4793aa6ec2f2f6c4f8b1cbcea1f64</anchor>
      <arglist>(const int idx)</arglist>
    </member>
    <member kind="function">
      <name>setPart</name>
      <anchor>0e3b552237a0ea30516f6fbf3166eb00</anchor>
      <arglist>(const int idx)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTexture2</name>
    <base>SoNode</base>
    <filename>classSoTexture2.html</filename>
    <member kind="function">
      <name>SoFieldData</name>
      <anchor>d68f29b2b9b7c4bf4bca2a4f1b19eddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Model</name>
      <anchor>acc5a62d12cbcfd22f198c8a4c5fdeb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ODULATE</name>
      <anchor>acc5a62d12cbcfd22f198c8a4c5fdeb8a411b47520c2250d17b82cc8a0153fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ECAL</name>
      <anchor>acc5a62d12cbcfd22f198c8a4c5fdeb8c4948972ba4499ce7b3e7a56faff5b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LEND</name>
      <anchor>acc5a62d12cbcfd22f198c8a4c5fdeb80c926c239fcce3cff4adbd999461acb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EPLACE</name>
      <anchor>acc5a62d12cbcfd22f198c8a4c5fdeb8252528ab66c1105afcef92d457452006</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Wrap</name>
      <anchor>262a667689ef20bb704803f78ca2a0b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EPEAT</name>
      <anchor>262a667689ef20bb704803f78ca2a0b1e4162c6a9bb8c157aa996eff119a9b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LAMP</name>
      <anchor>262a667689ef20bb704803f78ca2a0b165f9b3b9e0a215303e94475ea476aa27</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTexture2</name>
      <anchor>2d48f53a7d91ba143b69b503d83df500</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTexture2</name>
      <anchor>5fef399fd7f6d483c30f4c07da27e968</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d1143820c0fcc24f79dc7a6a796dd223</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>a3ec9c5cf7acb20bc1df41f80094ecb5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>ea3ddc5f914a20cf25f10111265a4904</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>883142d3474daa28e0dd5cda8f0809ff</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>2838c9a3cbc02c35ae56cb9cee3cc6fa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>d373bf4c3ca8771ddbd7e72d5e8c3f60</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>dcd0eee183f36508b9e2b6635f8b146f</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>75dc62b95ee51450e6d5085715441423</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>27d02cf91961f00df1b5b87444fba78e</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>readImage</name>
      <anchor>d371311dd08cfb3ab5612596ec68e6bb</anchor>
      <arglist>(const SbString &amp;fname, int &amp;w, int &amp;h, int &amp;nc, unsigned char *&amp;bytes)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>827c4df5de1bf087ca187d0c09de0590</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>0da64c1791ed400b72e6529318271b54</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>getReadStatus</name>
      <anchor>d84532cceaf41cba9115367fcbb40225</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setReadStatus</name>
      <anchor>11050c1af6e5de75e8fbd4ca5af97b74</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <name>filename</name>
      <anchor>bf0223797fb828cff57c0b9b068a5f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>image</name>
      <anchor>b3c686f9f8507621fe7de352380c8e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>wrapS</name>
      <anchor>e97f0350db45f30546844d27073210fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>wrapT</name>
      <anchor>8534cee0027273277829f7690439a5dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>model</name>
      <anchor>0fdf8aee8f0e47e106baec3cce128af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>blendColor</name>
      <anchor>713331d8fe06a02caf20d248c2817d3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTexture2Transform</name>
    <base>SoNode</base>
    <filename>classSoTexture2Transform.html</filename>
    <member kind="function">
      <name>SoTexture2Transform</name>
      <anchor>52952684f9dfa9deeae22db92d5e8d9b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTexture2Transform</name>
      <anchor>43b01d7044543cf71b9cf38972da7632</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>90914473adabcfdd79fce9b3cdd8a638</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>13ce6d18c99ca21ee028664e935d5d51</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>9c190255710dd608afc0e3833ba8d6c9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>1e2cecaba6c93e192e2b5412e829a8c7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>691310935726f1c75f63de841862d191</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>e28800e96141b07bcd4fdb4789da80a8</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>b9fd716be0eda9ed7de94eef35b09aa9</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>c0c974b202cb6ec0abdc25fdb1bffddc</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>cb4dc08706d95aff5810b2bb7367b68f</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>99c02f79dce74ed87f0e4e3a43310037</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>9b2aa88f85dbf19298115dbf341461cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>f2b817f604c641011f41f694dcf55fad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>dc6338f3bc505208cf0bd51b218eb325</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>center</name>
      <anchor>f2fe456ca53f60f1d0670c4336942506</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTexture3</name>
    <base>SoNode</base>
    <filename>classSoTexture3.html</filename>
    <member kind="function">
      <name>Model</name>
      <anchor>98ab3107cd1bd52ae202989dbfc809a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ODULATE</name>
      <anchor>98ab3107cd1bd52ae202989dbfc809a879dae03e7749fcab3496c37293f4e9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ECAL</name>
      <anchor>98ab3107cd1bd52ae202989dbfc809a80e0b40ebd156c3383aab083c89f75082</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LEND</name>
      <anchor>98ab3107cd1bd52ae202989dbfc809a8f2da28219d3990e5ed8bf497144f5475</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Wrap</name>
      <anchor>381510e51ec9f972066f1af7ee0d245c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EPEAT</name>
      <anchor>381510e51ec9f972066f1af7ee0d245c8dcfff5a34060f07dad2fc64f357cc61</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LAMP</name>
      <anchor>381510e51ec9f972066f1af7ee0d245ced5662ca0ca171425e6c15169f858e6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTexture3</name>
      <anchor>16234b1816b02f037ec2afb27f032383</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTexture3</name>
      <anchor>d3e48c95669421a969a17692878570fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e096b0255464e39da72c5ff60e72c1a2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>bafc789344195e310b0ec675f0f7a603</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>6e0abd78ce5223b0f7001b0341e5ae01</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>62b81eb0627c32744ca49833ffd779f0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>974e9d3ead7255a19cf77d994c53dd38</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>5482dc31ffa067bba5dd6e06420f65ba</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>77ad5603a2d65c0c69c0f33f45562bd4</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>bb04a1905b6f4c6a7592c373ec542fbb</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>998d13b15d66c3fc32e869c5f8008399</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>39f899dab0a0219012f52586e97e15ae</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>getReadStatus</name>
      <anchor>ba91153fb690088104be1278e87f4633</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setReadStatus</name>
      <anchor>468d71011e3691066cdd36679e178143</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <name>filenames</name>
      <anchor>b79744e8f63214b15bb00423955ea6cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>images</name>
      <anchor>1522b5990c8f27e44a25a38180efb2c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>wrapR</name>
      <anchor>e9c7cd6e41c6417f489574d5c84b164f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>wrapS</name>
      <anchor>953a05d28fa897a49064eeaf876412da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>wrapT</name>
      <anchor>173aa7c8e036f6ba56b2e9d2cbe71096</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>model</name>
      <anchor>07bfa897eb639f7b9071c484fa6dc3a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>blendColor</name>
      <anchor>377f0e5316914f06fc115744790df2a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTexture3Transform</name>
    <base>SoNode</base>
    <filename>classSoTexture3Transform.html</filename>
    <member kind="function">
      <name>SoTexture3Transform</name>
      <anchor>7baa90e6be917cfbc76d29e95644dcfe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTexture3Transform</name>
      <anchor>7fda9827c5e72cfe36f9eed67a42008a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>b7e3d6a0c24c9d9198732a2f704be638</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>d9c8f52ad7826bbc1f2d1399aa6cf6a3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>63eabd0d7a032699d87a02ef64e07851</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>d9ff84de0371793a97e2307df6240d8b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>9c269b96c5ce141a3041f3ddbf32c91f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>6c0fa50550d63c7db922fec9597cc67b</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>72ad5db3927047c3443891f0c6832dcd</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>8a9bf7c1507bb87a45f60807bb92a5e4</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>2c8d0e5da24243e1e644ae1154164123</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>a22b8b48c5c9f6ccd68053251b12d62e</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>728491cfe9cdde4a2423db887dd23bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>f5a44b156eae31665e7dca015b8de82d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>a7f05c7da16e6baa0d2ea4c5cae099e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleOrientation</name>
      <anchor>8b6d78f5b4a3970a9bdeab17a5ed0ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>center</name>
      <anchor>a90fee70ad09d977041720ba5875147e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTextureCombine</name>
    <base>SoNode</base>
    <filename>classSoTextureCombine.html</filename>
    <member kind="function">
      <name>rgbSource</name>
      <anchor>d88621312aa25a02273e0b3479a10b15</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>alphaSource</name>
      <anchor>74bf26e3b2ab7bd08366f3b6f2d6446e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rgbOperand</name>
      <anchor>897cb6dc6a7c1f5c5204a8c067d19c01</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>alphaOperand</name>
      <anchor>0e980a5180596b3d26cadf06b961f1c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rgbOperation</name>
      <anchor>b8b030ca3e0946b030a07908f882d039</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>alphaOperation</name>
      <anchor>af0fce29e44e241079d9882be9fd631b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rgbScale</name>
      <anchor>9540f92e9ae434ac0488c4d86d5476d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>alphaScale</name>
      <anchor>11c8e517a47ecddb91ed1631cb45c3f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>constantColor</name>
      <anchor>05798ae940038a26ae8dee9e530db49b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Source</name>
      <anchor>8e49300812ff5ddc0fd8df6468a563f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>RIMARY_COLOR</name>
      <anchor>8e49300812ff5ddc0fd8df6468a563f7289208e9c8e6b74f66024068352a08fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EXTURE</name>
      <anchor>8e49300812ff5ddc0fd8df6468a563f7a74c4f312285ff32e956975bf70d4d5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ONSTANT</name>
      <anchor>8e49300812ff5ddc0fd8df6468a563f7788c844c20a76689e5b67b133554ccd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>REVIOUS</name>
      <anchor>8e49300812ff5ddc0fd8df6468a563f79392e6de4b5d8686b0cba1e52454c827</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Operand</name>
      <anchor>1c478a93f2d16aa0bd36904113cacb0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>RC_COLOR</name>
      <anchor>1c478a93f2d16aa0bd36904113cacb0b4644d9bcfd9bbfb18b68052598d8ab11</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NE_MINUS_SRC_COLOR</name>
      <anchor>1c478a93f2d16aa0bd36904113cacb0be22544b5c6b14b069c35068b8b54e0da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>RC_ALPHA</name>
      <anchor>1c478a93f2d16aa0bd36904113cacb0bb56e4e55a20e3d682a81c37d77706b99</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NE_MINUS_SRC_ALPHA</name>
      <anchor>1c478a93f2d16aa0bd36904113cacb0bde5433e9182f760b6f693a55f0358c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Operation</name>
      <anchor>3794b6806a5a1a8f9aff631bafa19823</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EPLACE</name>
      <anchor>3794b6806a5a1a8f9aff631bafa19823d4796a15740bc352f448c8c765ded284</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ODULATE</name>
      <anchor>3794b6806a5a1a8f9aff631bafa19823652a22bbd824b9018cc0ac974c964a05</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>DD</name>
      <anchor>3794b6806a5a1a8f9aff631bafa19823564b64d61191b80687aba92e4b762261</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>DD_SIGNED</name>
      <anchor>3794b6806a5a1a8f9aff631bafa19823c772e551c8a00bfb0eb06be255ef04bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>UBTRACT</name>
      <anchor>3794b6806a5a1a8f9aff631bafa198238935c3cf32010f27fbede59ae6ffebf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NTERPOLATE</name>
      <anchor>3794b6806a5a1a8f9aff631bafa19823582840e4db551b104f41b881b8895fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OT3_RGB</name>
      <anchor>3794b6806a5a1a8f9aff631bafa198231dbd5c215b61b27412ea245898721ae0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OT3_RGBA</name>
      <anchor>3794b6806a5a1a8f9aff631bafa198233b86dcfb5f4f79bea8cb28b3deb7a65b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTextureCombine</name>
      <anchor>c95a614a15bac7f50c94f2b63d28082a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTextureCombine</name>
      <anchor>df721d98143afd0d1850e63062078d90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>40cc09494f16d66f8ee799debcc1faaa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>315f53aeb4906a13ef6e352410ae160e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>dbbb92308fe0a270bcf6256799ebc64b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>3b20cf184807ad58832010c595f15c04</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0e5532d9280f5bca1487f11ff8583e4d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>48b4e94b90ae1668a4a1b866431857eb</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>92e608c06fee202efea84ec4e05d0e73</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>7e3b1dc2e88c1535b669405ff339fbd6</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>d450f8c67472961ede29a92cf2a2ec60</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTextureCoordinate2</name>
    <base>SoNode</base>
    <filename>classSoTextureCoordinate2.html</filename>
    <member kind="function">
      <name>SoTextureCoordinate2</name>
      <anchor>04034bad8ef00f546aab002baa6c2d4c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTextureCoordinate2</name>
      <anchor>ebd155e1460b3627ffcab40c16782ddb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>a49e2cbf61bca1c7445844c51341020f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>3826df5665a05e79ccdbd008df2fbc98</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>b5cd335c58241ee68f027a86e5970060</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>9375cf9c2b70cf4eb2d2ba5e606d72b0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>8cd56a7fdf9c566b7d45483e65f5fdda</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>1db1a4276f387cf5fa76d6669fc1f9b4</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>e2a3c3397bdf4e058bf22066b5afd751</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>ca2b464cd082d4f1edc504f3ea7a2458</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>d63524a2e52b01e9dddd2346a316ee6e</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>point</name>
      <anchor>af440340d19a8b95159c28dc1391f7de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTextureCoordinate3</name>
    <base>SoNode</base>
    <filename>classSoTextureCoordinate3.html</filename>
    <member kind="function">
      <name>SoTextureCoordinate3</name>
      <anchor>af0862a9c633811a7c646c0bead9f3d6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTextureCoordinate3</name>
      <anchor>46282dbb582877beaadc0e2093e4734d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>951f1add874a836333993e396466d42b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>c2c804d5232490bb8b987366b08e6adc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>94d06ec83fb30ba1d187f349d0e36e20</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>4b79cff56482e1adb542d8b338058633</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7add067f856a4fe0040cb8aed882cb8c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>b0134efd6a69da5c75234546a7db5f7d</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>318d06a4a366f2f5a5950cde232eba35</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>2d584a8df006d960ed9123c54bba8ccf</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>a4131640e6e410eab17eb9aa8d1ee254</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>point</name>
      <anchor>c71fd24dbaad23296182111afb1f2767</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTextureCoordinateBinding</name>
    <base>SoNode</base>
    <filename>classSoTextureCoordinateBinding.html</filename>
    <member kind="function">
      <name>Binding</name>
      <anchor>38ef4fbbfae61ed60b8af0dc94601aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ER_VERTEX</name>
      <anchor>38ef4fbbfae61ed60b8af0dc94601aa396f8bbf67cb8abe379d2c407df51954f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ER_VERTEX_INDEXED</name>
      <anchor>38ef4fbbfae61ed60b8af0dc94601aa337a1ed62ad5fd9ed9ce4f6474249e9f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EFAULT</name>
      <anchor>38ef4fbbfae61ed60b8af0dc94601aa361ad1c441b622620e5a439c8373c1ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTextureCoordinateBinding</name>
      <anchor>0487f25a20c78fa20606111dde3c56c2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTextureCoordinateBinding</name>
      <anchor>1a21fcce0be287d741ea69c4f9f73c91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e55c0cab18dc5461802986590135cf14</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>541f12521d23ba609ebbb0fe6669989e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>c628c9c34ff34ace47ae3be58d578b5f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>38b87ba15d1b536180b847567de52b61</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>5d236e5dd14b331e864b7c577fd350b0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>9f3134129c279fdde2fd8bccf0fc2f98</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>a64b11a69b45ae3588425bfc1c8c8af3</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>81a9381b8e9341f6e16bec6bb2cad325</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>5aaed24c90d02fbb012024f97fff22ce</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>1a89b971af633e8535d237b3c2a9c3c4</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>02c023a54daa257da079ca4bdb4414a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTextureCoordinateCube</name>
    <base>SoNode</base>
    <filename>classSoTextureCoordinateCube.html</filename>
    <member kind="function">
      <name>pimpl</name>
      <anchor>791656b2bb5f832fecd061dab8be3c1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTextureCoordinateCubeP</name>
      <anchor>d7e01516825c11c3e5f6a8148eec3c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTextureCoordinateCube</name>
      <anchor>bfa34e594ad66b91965c8e99d0693063</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTextureCoordinateCube</name>
      <anchor>e56d669b100ec1fbeb841b4a904ef623</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>43385cca175448b01677ada11bc0dbd9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>0c8561c0f7dcb915704a2554f3819197</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>5b5a19c4e1c80e68acf231176ca4a23f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>957fc663c027c5081fe5194aa2ea5e68</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>88cdebf3ca1d89f153e378740f8762a0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>9483c2e3fb4c912dfb65c46be08b372f</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>62a0508779da275059b1c3eb5293e6bb</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>69cf2200ae231105ff8cc538caafa398</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>846116e32071428ec5d33b6fae9d030d</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTextureCoordinateCylinder</name>
    <base>SoNode</base>
    <filename>classSoTextureCoordinateCylinder.html</filename>
    <member kind="function">
      <name>pimpl</name>
      <anchor>cb104fffef1b9481df28fd879f47f869</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTextureCoordinateCylinderP</name>
      <anchor>18d855ee1734a530afd406b0780aacb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTextureCoordinateCylinder</name>
      <anchor>f9b7cd73513d14e01c453c5801a8a96a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTextureCoordinateCylinder</name>
      <anchor>50bdf5051905baa52db353b87ba5c79d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d583d1adaf50dd580355690ec81ad3fc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>472cc3e3fed9b6aa921cfe38261cd613</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>23afdcee76ec2d05153b1a9a02320bc2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>b2d2636286003a1de6c71165ba671ba3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0c0560c557196e9d397cd9f47dc984ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>2db5d66a1b9509dd8da1a7c3bcbdcbc5</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>d141efeaa1bd8aba748047d2bbf0a795</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>d0dd9e9b98622ced1ac90ef8a2d2987c</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>658ea763cf760f33e55353c71ee39fe2</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTextureCoordinateDefault</name>
    <base>SoTextureCoordinateFunction</base>
    <filename>classSoTextureCoordinateDefault.html</filename>
    <member kind="function">
      <name>SoTextureCoordinateDefault</name>
      <anchor>7f05c965a6067b7c9628ed070593da04</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTextureCoordinateDefault</name>
      <anchor>611512f87eb65ed65aad56af5580dd00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>4e4dad38b3f3a1353db07723dec37027</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>0e7e6a0050f7e60cae97af0a890a4928</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>0764c7e9ad23f113c8fe02e78d28699a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>3a4ed0cd76cd4c883cc7f3d393afabd0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d9fd3bd783dd35ec35c6f7b2bd78f0a3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>6f5dcc43f4565abc57c69bfd2c60e702</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>ea1ec72cc3b6bbf9f4c657007d700aef</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>6caa494e52ce944a5b69638f74417faf</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>4a1d7a344a2b612e24dfe1680609b6b1</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTextureCoordinateEnvironment</name>
    <base>SoTextureCoordinateFunction</base>
    <filename>classSoTextureCoordinateEnvironment.html</filename>
    <member kind="function">
      <name>SoTextureCoordinateEnvironment</name>
      <anchor>2eee8fc1dec5ffc9aa57f708a45399fa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTextureCoordinateEnvironment</name>
      <anchor>a624d47eb951116d524be91f59e42df3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d091797ab9995adbcd165f65e1f4d0bc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f30952d5d019d7fd639e9ee2b7f0b2e8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>b96cf4bce0c0c1e76efe0bd5c5f2da5a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f926620d3d6461610f0a196be492ce98</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>5854aca782e9d811f4e0c0a6d877ce64</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>85d3cbe121edb0830db8c7b40cb364e2</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>efcff7f59beaeaefd58782fff6291866</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>84c9fbb8c2808a86bfd50bff1626ad2f</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>0bbf6ab1ff6b4f176ff3883a39e5a44d</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTextureCoordinateFunction</name>
    <base>SoNode</base>
    <filename>classSoTextureCoordinateFunction.html</filename>
    <member kind="function">
      <name>SoTextureCoordinateFunction</name>
      <anchor>ddaa6900305ad12a499ca3f3a96c9355</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTextureCoordinateFunction</name>
      <anchor>f9e7cd509a4f8bb963653a6c193ff387</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ea15735dc42908d3f24c7420b5ae9bc0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>b56f353e473e7e42256094636ad163a5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>679ce1c0a5e5b5eebf8bc24aa8dcc8d9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f1b0b7d1c454ba7b3a03580b03d1bcbf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>75a0c4c08f176fa38cddd070f1b078e8</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTextureCoordinatePlane</name>
    <base>SoTextureCoordinateFunction</base>
    <filename>classSoTextureCoordinatePlane.html</filename>
    <member kind="function">
      <name>SoTextureCoordinatePlane</name>
      <anchor>082a7ec5ca337dda3d7e98680699fd58</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTextureCoordinatePlane</name>
      <anchor>0063872a9be40fe32a739748efc22984</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ca39bbbbc3342a1e98cf0d0ada7d7d71</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>eaab3e88499c6aba8eda99ba23052d15</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>605ed56988ad2ad36eec4af0d3847446</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>1c7efddb3bcfedf1c0c6c9541a113ab8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>c5ae2a299f44d9eea42eb560cd23c3df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>5d24320d9e8ef742fbe1fe67bed24961</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>2d1c157d8e2d7778e7baff163473f5e9</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>e4e7128204f9fb2c0e4dd21edb5a1bc4</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>d886e290722a0e533d54198b3e306229</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>directionS</name>
      <anchor>84a9399478ef7d7da853d437689107ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>directionT</name>
      <anchor>065fc09020b6e1e688a155120094335e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTextureCoordinateSphere</name>
    <base>SoNode</base>
    <filename>classSoTextureCoordinateSphere.html</filename>
    <member kind="function">
      <name>pimpl</name>
      <anchor>36c10c5446373107cf70c07ab48343bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTextureCoordinateSphereP</name>
      <anchor>d7d2ede77687f669b5242cd747bba31f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTextureCoordinateSphere</name>
      <anchor>0762fc3727c78a2a36fdcdf4e2bc3174</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTextureCoordinateSphere</name>
      <anchor>ac1c05bb6d3fc5369231600cffe641b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>8571017fea21da7a87baac90f4f697da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>ba45397e470a8ee3ce451dc9b2195366</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>1c5a65da2237d902ba3b8478d958d79a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>8ed41028fcd478208a8dad6354927335</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>3de8337a03d9804159e75e832a1e3457</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>182738061095d400c82c92b562b2a16c</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>7ad5c3793df5922038d256aacf0115e5</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>befac8c3781ece5e8dea3c0c5af5639c</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>18835c241c7bbb1b0c799f6e71e27f42</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTextureScalePolicy</name>
    <base>SoNode</base>
    <filename>classSoTextureScalePolicy.html</filename>
    <member kind="function">
      <name>Policy</name>
      <anchor>d1ee79e58fcf154709872a43d293a6d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SE_TEXTURE_QUALITY</name>
      <anchor>d1ee79e58fcf154709872a43d293a6d2fc12f9f2177049f04bda60b4284a1324</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>CALE_DOWN</name>
      <anchor>d1ee79e58fcf154709872a43d293a6d2b6ea37b16ac89c75d2acc5a060267590</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>CALE_UP</name>
      <anchor>d1ee79e58fcf154709872a43d293a6d24ed93ea8b482c135d17eabbc1f426309</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>RACTURE</name>
      <anchor>d1ee79e58fcf154709872a43d293a6d2a4c52ab6b6c7a5a8e8a157322d69e162</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTextureScalePolicy</name>
      <anchor>445dd714e449008973d7affdd0c255d4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTextureScalePolicy</name>
      <anchor>47551ae6292b77261613c02e9fd53fdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>9a8d780ac9f5cd3442fad8d269304cc4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>7eb563fa2b2d02413c58994035f76449</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>cb7e890eb5f466d8739d447a0a8706af</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>c19b664fa33fe12956714aebbc9c0c6f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>dd4d5af08e536e136aa3110e0614ef18</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>0003c45c949badb805821e9ec17f0974</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>policy</name>
      <anchor>f0625ec8f28fffb8d323cfa67644c836</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>quality</name>
      <anchor>4e94cd1f44928b42bc118c0c425aa2dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTextureUnit</name>
    <base>SoNode</base>
    <filename>classSoTextureUnit.html</filename>
    <member kind="function">
      <name>MappingMethod</name>
      <anchor>0c361c86a03e38c6a1cd30a3f9e4032b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>UMP_MAPPING</name>
      <anchor>0c361c86a03e38c6a1cd30a3f9e4032bb4666e72887696cb3e20277fbf0c1aa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>MAGE_MAPPING</name>
      <anchor>0c361c86a03e38c6a1cd30a3f9e4032bb562974690423838d9913ebe311ca3d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTextureUnit</name>
      <anchor>ebcfbc11c80a5318b53a0b3fdf72e573</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTextureUnit</name>
      <anchor>2838c7053037301076e0d9306aae3e4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>4b4ffa613750f571c964077d5203f6d0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>6fdc613c809c1e37e026c222d265c5cb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>e58a690e07ec202c64f16143b2ddb9ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>4c816b685b148528fa722167db4da8e1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>45e577c7258bbe6dd0e45b9fa909d886</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>6383bbfdbfc65f153ee560c5e4467b66</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>4c948da8f48d1c1b21dbe2b2c65bbbb1</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>2710823d8e70cd6705ce32bfa6f20a5a</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>cc7b1dfec1c35a6d52e7777729e17b3b</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMaxTextureUnit</name>
      <anchor>caf55e4f4d7f4d0990465320a8267453</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>unit</name>
      <anchor>2d464aee528fbb58fb9fb2b061cc8427</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>mappingMethod</name>
      <anchor>5372cbd6586ed4e5c27463650d8c978a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTimeCounter</name>
    <base>SoEngine</base>
    <filename>classSoTimeCounter.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>9e6172c536ff48ca1714a6115be07138</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoTimeCounter</name>
      <anchor>2ddc773605e346af9a96b0e030f4f99c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>~SoTimeCounter</name>
      <anchor>6db02e65b9de145e06a3ab013782fbc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>29e0180518d5078e38d6773416bad165</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>2dc7ea123ed39f26c588a8fb9c50c289</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>a9784a9a7c93edad2ae757d9d9fda3ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>b4aa94d3de2697720c6a8332461bae6d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>80341c32b66f371b1e3ad321ac4f7e38</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>7000b730f1e29e76dc6e1c44709fb196</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>c1259e912bc096a24981db5e2dbf9d00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>inputChanged</name>
      <anchor>f520ae8a23d3e0f845625705893b0361</anchor>
      <arglist>(SoField *which)</arglist>
    </member>
    <member kind="function">
      <name>writeInstance</name>
      <anchor>f80dbfb5d2d88e72c805955507cd7bdf</anchor>
      <arglist>(SoOutput *out)</arglist>
    </member>
    <member kind="function">
      <name>timeIn</name>
      <anchor>245395bb7045c1f076c9012c30a72a53</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>min</name>
      <anchor>8bf3d2899cc3fc47145acda7927b2a02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>max</name>
      <anchor>0a80975674943a3e2c323ba2b2965d46</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>step</name>
      <anchor>7f218878ff5d277aad188ee2f895145d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>on</name>
      <anchor>27aa79aea9c923859e743c381c461b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>frequency</name>
      <anchor>17fc2c2480ce237e7d68089df9036790</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>duty</name>
      <anchor>a4567fa6123fb110182893611ef5413b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>reset</name>
      <anchor>23b03bb0f1c55dbdad256a87455a3eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>syncIn</name>
      <anchor>1129afb45787f7b3ef141814e0af3815</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>output</name>
      <anchor>0111c6cc9052c8f0f4c66a02dd256a40</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>syncOut</name>
      <anchor>b034a4b2530d4c210cfa78c69d6159ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTimerQueueSensor</name>
    <base>SoSensor</base>
    <filename>classSoTimerQueueSensor.html</filename>
    <member kind="function">
      <name>SoTimerQueueSensor</name>
      <anchor>a44140fca366b973dcd09a17f67c3593</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoTimerQueueSensor</name>
      <anchor>4d62dc9062913ecfa745fde7c06169a8</anchor>
      <arglist>(SoSensorCB *func, void *data)</arglist>
    </member>
    <member kind="function">
      <name>~SoTimerQueueSensor</name>
      <anchor>d2d8778f4f166cc1fbd70968a5b2638c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTriggerTime</name>
      <anchor>3d5ab7bf4b9106307ec4ae1994f1aa4b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>schedule</name>
      <anchor>21262b8464a737246dcc092b115e89ad</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>unschedule</name>
      <anchor>a6d792983952ef2af6a3e7f005af3b11</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isScheduled</name>
      <anchor>fe00440d7a01a61b27f66f297d3a3f5d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>trigger</name>
      <anchor>3459bf3e4f6bda6de8da7d0a8d64f814</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setTriggerTime</name>
      <anchor>a2720312ff24da9ecf460d6e8b7fb592</anchor>
      <arglist>(const SbTime &amp;time)</arglist>
    </member>
    <member kind="function">
      <name>scheduled</name>
      <anchor>22000bb83389ed0058939e77416751df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTimerSensor</name>
    <base>SoTimerQueueSensor</base>
    <filename>classSoTimerSensor.html</filename>
    <member kind="function">
      <name>SoTimerSensor</name>
      <anchor>77911775db7512717797e64ee366883e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoTimerSensor</name>
      <anchor>c7b810748d930cccbbacd62f87ea6ce9</anchor>
      <arglist>(SoSensorCB *func, void *data)</arglist>
    </member>
    <member kind="function">
      <name>~SoTimerSensor</name>
      <anchor>9fd11388df463b0bebb02345aa75a372</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setBaseTime</name>
      <anchor>39b95dd1f164c05310c9119833ef7357</anchor>
      <arglist>(const SbTime &amp;base)</arglist>
    </member>
    <member kind="function">
      <name>getBaseTime</name>
      <anchor>b08b63cf39c4f881d8a1c7be387b132f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setInterval</name>
      <anchor>ba8f968935ab0c6ab79252f0b3e7478d</anchor>
      <arglist>(const SbTime &amp;interval)</arglist>
    </member>
    <member kind="function">
      <name>getInterval</name>
      <anchor>1f9474e0e32349d1292fbd04ce395746</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>schedule</name>
      <anchor>40861c60dca0b4181ba39676a4489279</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>unschedule</name>
      <anchor>46022349d38a1d8372b385b91de337e6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>reschedule</name>
      <anchor>911ba001eaab612f16d40efb9ac751fa</anchor>
      <arglist>(const SbTime &amp;schedtime)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoToVRML2Action</name>
    <base>SoToVRMLAction</base>
    <filename>classSoToVRML2Action.html</filename>
    <member kind="function">
      <name>SoToVRML2ActionP</name>
      <anchor>da250044234bf17eaf2096ffb19ad79b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoToVRML2Action</name>
      <anchor>e9dfb4df29e6659a3e192e5a4e6d190d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoToVRML2Action</name>
      <anchor>da938ee7d871b1f3f8e14174fb341518</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f517d4470706c767964634e273c22ddd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>bc6e4019d577981118a66d611d80f325</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>7fe000fd660af2b4d3c117f16a89932e</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>f8dcb257b57ea121250d8dc638a86a16</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>12fb9499cd961643ef2e719950050063</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>03e981f2324daa0199f1f28090e26ada</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>3ccf42b9a2083faf59be34fe33083c9b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a4cc54345c6eb7d018d84c1dcd61fa13</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>441e2ef02901cadc1a03f460d8fde1a6</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>7ed681262a6e1b92ece3712b355c325a</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>21a34a8b047c54344ab7058325fc90aa</anchor>
      <arglist>(const SoPathList &amp;pathlist, SbBool obeysrules=0)</arglist>
    </member>
    <member kind="function">
      <name>getVRML2SceneGraph</name>
      <anchor>8cb032d7a73eefc86c4c869457e94eaa</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>reuseAppearanceNodes</name>
      <anchor>b575be05157126fe8c66b443bc9d0d89</anchor>
      <arglist>(SbBool appearance)</arglist>
    </member>
    <member kind="function">
      <name>doReuseAppearanceNodes</name>
      <anchor>425c3f22d778405b6109b7ba1bc82b24</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>reusePropertyNodes</name>
      <anchor>0e6471e6a88fd8720e67fd34c89d7963</anchor>
      <arglist>(SbBool property)</arglist>
    </member>
    <member kind="function">
      <name>doReusePropertyNodes</name>
      <anchor>3eded0368bd48a8d4fd299206e91e4df</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>reuseGeometryNodes</name>
      <anchor>e6adaa8a8190c272b5c46ce29efed2fa</anchor>
      <arglist>(SbBool geometry)</arglist>
    </member>
    <member kind="function">
      <name>doReuseGeometryNodes</name>
      <anchor>c81b54e7b44d6b291b89bcd3080eaad8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>beginTraversal</name>
      <anchor>e48577473eb32dafeb9d825876c224f3</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoToVRMLAction</name>
    <base>SoAction</base>
    <filename>classSoToVRMLAction.html</filename>
    <member kind="function">
      <name>getVRMLSceneGraph</name>
      <anchor>fc915613b4b78e8cfe46185dee582abf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>expandSoFile</name>
      <anchor>70718d7f514c02f33c0a8ab40e507e97</anchor>
      <arglist>(SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>areSoFileExpanded</name>
      <anchor>344f19ea4f92f99265411ddad46d5cf8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setUrlName</name>
      <anchor>27ed38cc6371e7e4ba90843394003f0b</anchor>
      <arglist>(const SbString name)</arglist>
    </member>
    <member kind="function">
      <name>getUrlName</name>
      <anchor>db1c9a4beb4ea6b0a05e96ebe4b440d4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>writeTexCoords</name>
      <anchor>0804ab84099ba9aa4f767252be3c64cf</anchor>
      <arglist>(SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>areTexCoordWritten</name>
      <anchor>8c9bc1d39a10eabe3fbffecaa05ebd20</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>expandTexture2Node</name>
      <anchor>b0549643dab3cdec79a191559c273bea</anchor>
      <arglist>(SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>areTexture2NodeExpanded</name>
      <anchor>f9660fdff2144a0e42f1c7f81c54ddb6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>keepUnknownNodes</name>
      <anchor>1601843f353bd0c6e551f2643236e864</anchor>
      <arglist>(SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>areUnknownNodeKept</name>
      <anchor>de02f6362ef538ec56e9040d7b9a09b6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>convertInlineNodes</name>
      <anchor>d6aca30a042f538c753a8db4a82a925f</anchor>
      <arglist>(SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>doConvertInlineNodes</name>
      <anchor>85f86a67074b0149a585b36843ceee5a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>conditionalConversion</name>
      <anchor>a2ca7bdb1e7045587a59f6e8e765f4b2</anchor>
      <arglist>(SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>doConditionalConversion</name>
      <anchor>0343519dfe654131ed90fa4d26c5641b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setVerbosity</name>
      <anchor>ecdaacc31757258a25af6cb4e26a1f96</anchor>
      <arglist>(SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isVerbose</name>
      <anchor>4152ef369ce449b96615040bb35ccd0d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>SoToVRMLActionP</name>
      <anchor>c3eb8dca9811b344ac99f4307e55dfcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoToVRMLAction</name>
      <anchor>cc08b167cffde33b4c6d52544a470793</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoToVRMLAction</name>
      <anchor>594ff7f46cb0dcdebc9fb4429a669bdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>634d2e44aa6491200e3581f82fd02c56</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>0b98a22f874e15d609f88102b07217f1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>c0df94a3e5b074caa12af293e1da6265</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>47f756490237caf733073a93fcdceb11</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>e0853d23af42f8538c842503a8335c1b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>ea3507d93fa7882a9f119ea11497a218</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>2745841fce4e620ebc7e21b38a99c1da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>2b9b5920c8126c8684567418ef3ffd60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>dc181fc090c32154320df859b2f0a7e8</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>497e262d0da5975e96ac1e97c052db4f</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>600823f8c03175fbe7798dbc7bdb3996</anchor>
      <arglist>(const SoPathList &amp;pathlist, SbBool obeysrules=0)</arglist>
    </member>
    <member kind="function">
      <name>beginTraversal</name>
      <anchor>66a505d879aa7f4935483691ba54312a</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTrackballDragger</name>
    <base>SoDragger</base>
    <filename>classSoTrackballDragger.html</filename>
    <member kind="function">
      <name>XRotator</name>
      <anchor>8b54d4236ac449fe6b7b5734732fa61f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>XRotatorActive</name>
      <anchor>7682d57776d54583b7b3457faadb28f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>XRotatorSwitch</name>
      <anchor>b5c24ba38ff38a2e3c696889818e56e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>YRotator</name>
      <anchor>c7ffeb8b707a9c3597532714b5b52163</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>YRotatorActive</name>
      <anchor>de120cf6680eaeb2485604384413ac3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>YRotatorSwitch</name>
      <anchor>f4f662e886e0947e9bd0dd4c75d746f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ZRotator</name>
      <anchor>60bfb91e84f8342a6c6c303f5aec18aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ZRotatorActive</name>
      <anchor>f4ea46f2f62de5224b2a524ea7a3177f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ZRotatorSwitch</name>
      <anchor>79860da8bb189ba9688336b4bb4b5973</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>antiSquish</name>
      <anchor>df0e551a8b601412c9d059823a40c74a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator</name>
      <anchor>8f6560af16b32f82ed423790085b9219</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotatorActive</name>
      <anchor>802f964e45106e019dfb11fb8c70d0ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotatorSwitch</name>
      <anchor>35de1a23f7a755fddc681ea2803605fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>surroundScale</name>
      <anchor>e97c1eb07c3611c916035457cb8f5aaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>userAxis</name>
      <anchor>69aa94862a9aa9856b417fb1cc775db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>userAxisActive</name>
      <anchor>6f58a284045d37693aa43271a1bd73d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>userAxisRotation</name>
      <anchor>2e93d08a05773927fdecb9bcf60a7bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>userAxisSwitch</name>
      <anchor>583bde52d7751d367c43af6265167b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>userRotator</name>
      <anchor>15baa37d913941c4804a629094050de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>userRotatorActive</name>
      <anchor>a1407e303f8f9b3d7b08dc420cc788c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>userRotatorSwitch</name>
      <anchor>d8b8ffb539e5867081faee1cbe55d52b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTrackballDraggerP</name>
      <anchor>a56a255a673b113afa3c11543434ff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTrackballDragger</name>
      <anchor>22f69efbf7cdb0b910a2eef36d75c3e7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTrackballDragger</name>
      <anchor>806240543c168a14bfc95770f55e15a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>8990246c7e875e433e3c5d9ef6d2eb4a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>522f398dbfe8ccbb0c9e427d3c3b5384</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>81f5065f062785ca9ad2dcaa8a7979c4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>508c33941ee17f0d49ba1d866963ab57</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>b5b3e83d493308d41e505c5cd4c9477f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>2b1876c1f7d22a8bc2866d14d64ca10e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>1d2f047227a2aed7adb7aca2c87247de</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>57bfb9e880c35cf4a49a0ecc3a9edc41</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isAnimationEnabled</name>
      <anchor>00900521586fa18ce56b945a413d95c1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setAnimationEnabled</name>
      <anchor>ed7560d09ea9c6ab9b5690f82bd9670a</anchor>
      <arglist>(SbBool newval)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>63db6c64e38e176d5e0640271d4bb702</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>353d48e9572f39fb410f87e52f4fc41c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>17d2d3c4e27d32a7774b709f23da4ebf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>361a7f1ec245a23461448cbc782f0468</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>48c00073a2aa13bcb930b582015d8c0e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setAllPartsActive</name>
      <anchor>473a7aa0a474d101d07f91a0178ff116</anchor>
      <arglist>(SbBool onoroff)</arglist>
    </member>
    <member kind="function">
      <name>startCB</name>
      <anchor>ef00d938eca46ceddf49f5ac72cd92a9</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>motionCB</name>
      <anchor>6d553ce06b309efd685e3b981974493e</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>finishCB</name>
      <anchor>094391f50d81edf841c5086bd26c1df2</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>metaKeyChangeCB</name>
      <anchor>c212f88c34cade98c555c0cb2889b577</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>399d635608d7b8c77ec19dab0f5e8a2b</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>5b93bd2cb9cb1fffe874fe15b2b61fe3</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>0d42dcfdf0a2b32f7347dcb48d862a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>ee98d39387b19b563eb48abc660f1f9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotFieldSensor</name>
      <anchor>a02522c1c54386b4e3d8a2ae82c12756</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFieldSensor</name>
      <anchor>7e32d3dc10e32e962340a9b9cbc542d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTrackballManip</name>
    <base>SoTransformManip</base>
    <filename>classSoTrackballManip.html</filename>
    <member kind="function">
      <name>SoTrackballManip</name>
      <anchor>212915fe1be3ec6e49e79af2f8cbf3c4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTrackballManip</name>
      <anchor>e837635b15e4d2183bd15015166306f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ff50aa138202dde81a4fbc3faa4ef5fe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>99ad97cbd015940912e69031b4e666f2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>5c7146bac1fceb164a148888cd554643</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>9379a86d18192eb10c936ee83bfcd18a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d26825f55c83bcaae103e2d709fabf4b</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTransform</name>
    <base>SoTransformation</base>
    <filename>classSoTransform.html</filename>
    <member kind="function">
      <name>SoTransform</name>
      <anchor>ee314730f294bfc896e56681b71fe736</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTransform</name>
      <anchor>0727452cecd58c765d49b4191e1b8c03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>deec6a24310507a85cf4281208ca892a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>4fbaab62c7dc3bfc670e0a60778f1c61</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>1385bf673662ffcafc4be089f5d3f6c8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>1362008813aa6f572d72137bca6ce8bb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>9ab379078ba46a6fbbae12ad6831b356</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>pointAt</name>
      <anchor>e96ad1b916606f3ba482ae92f5ba18bf</anchor>
      <arglist>(const SbVec3f &amp;frompoint, const SbVec3f &amp;topoint)</arglist>
    </member>
    <member kind="function">
      <name>getScaleSpaceMatrix</name>
      <anchor>63f9dab20f9a27e3e384147bd9a8f148</anchor>
      <arglist>(SbMatrix &amp;mat, SbMatrix &amp;inv) const </arglist>
    </member>
    <member kind="function">
      <name>getRotationSpaceMatrix</name>
      <anchor>cafdf80acf9d67ccd27daa8c481f5c70</anchor>
      <arglist>(SbMatrix &amp;mat, SbMatrix &amp;inv) const </arglist>
    </member>
    <member kind="function">
      <name>getTranslationSpaceMatrix</name>
      <anchor>4b68f1284bc29f13c6d9707433cbbaf1</anchor>
      <arglist>(SbMatrix &amp;mat, SbMatrix &amp;inv) const </arglist>
    </member>
    <member kind="function">
      <name>multLeft</name>
      <anchor>37046e7f913d40f99a7002ad6dcea62f</anchor>
      <arglist>(const SbMatrix &amp;mat)</arglist>
    </member>
    <member kind="function">
      <name>multRight</name>
      <anchor>e4bc3cc7d17a0d75a94653e2dcde270f</anchor>
      <arglist>(const SbMatrix &amp;mat)</arglist>
    </member>
    <member kind="function">
      <name>combineLeft</name>
      <anchor>d66dc0b2f6b2c7ce996e6ac87c1efe08</anchor>
      <arglist>(SoTransformation *nodeonright)</arglist>
    </member>
    <member kind="function">
      <name>combineRight</name>
      <anchor>09c8cda47698d289028330d7f4ed5d85</anchor>
      <arglist>(SoTransformation *nodeonleft)</arglist>
    </member>
    <member kind="function">
      <name>setMatrix</name>
      <anchor>6320cc1f0d5c6050ce5d68f474fd4516</anchor>
      <arglist>(const SbMatrix &amp;mat)</arglist>
    </member>
    <member kind="function">
      <name>recenter</name>
      <anchor>f170765422c7cac5088448c295750376</anchor>
      <arglist>(const SbVec3f &amp;newcenter)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>290ff634766ca5b27b1583644dfc6dda</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>79c0d7040d7a8457eec11b5f39d89adc</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>1b0fd85ba23cde2fb6f1e0c5e901fa20</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>c3417b4a37c719cbdbd93edbc7b5a5b7</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>659b88712cf2c7f109cc28eb000bb904</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>24eff17c4295739f58c13cc9def340a4</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>9b133b39f6c92ef0c11bbd37f18ae6bc</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>f836257673b4b8ab61d7bc4807c8f69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>357007d906d1680a72cd73cf974a6869</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>a809e7560e35a236d792aad44ebe01c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleOrientation</name>
      <anchor>64249aa497425cd98e6f789a0f0ffa89</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>center</name>
      <anchor>25a62186a483f0b79f072532e6c88a6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTransformation</name>
    <base>SoNode</base>
    <filename>classSoTransformation.html</filename>
    <member kind="function">
      <name>SoTransformation</name>
      <anchor>3ea84d9186777f1a3f657abb60e31025</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTransformation</name>
      <anchor>81c406afcde1940b52cf610b7b615f81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>764638a94a6b776df3ed4d9e17778226</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>54ace5dba750d0b4eaabbab707d2f5d8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>ae06a3ede10c9adb9933f88d8076573c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>5628bf084dd4bdbc827d40ea3b1a6b53</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>77387a2b8c474a55f972c7c9d1c9c0fb</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTransformBoxDragger</name>
    <base>SoDragger</base>
    <filename>classSoTransformBoxDragger.html</filename>
    <member kind="function">
      <name>antiSquish</name>
      <anchor>91d62b23e7bddcf0e1fd17f8af8d5169</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator1</name>
      <anchor>b9fb8ae364368caa725b78be8a3deedb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator1Rot</name>
      <anchor>89d7fa8e93398a352942ec3710f5703e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator1Sep</name>
      <anchor>94c900600838efb5b6ebbe115a5e3273</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator2</name>
      <anchor>bf79d45a2cb8343f72b5ac69e102f74e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator2Rot</name>
      <anchor>8a0773217a962aa254223d856aeb59dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator2Sep</name>
      <anchor>cafa701f98ffcdee15a2b6e4af95ba37</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator3</name>
      <anchor>d953ac7ac862d9771fb06f8218457527</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator3Rot</name>
      <anchor>107edc6eb0d241d1f0c0c9b84a8e7100</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator3Sep</name>
      <anchor>f4607a04e79b0c1d6b36cc9d4c343dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaler</name>
      <anchor>a02cc91efd18c8a00849e6cc882fed4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>surroundScale</name>
      <anchor>f43efbe5d279545d3350feb874389796</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator1</name>
      <anchor>673fbb9587c712c181e11a2085973f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator1Rot</name>
      <anchor>1e93765e4432190a22ff221b20b3a1e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator1Sep</name>
      <anchor>5cef5f7759104b642fc90d6af124660d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator2</name>
      <anchor>cd6b0813edbabc51bd7edb8e84461dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator2Rot</name>
      <anchor>f5983332f417951b9d5c45190498ae4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator2Sep</name>
      <anchor>ef62dd1a3224fa008e572ed9f140a731</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator3</name>
      <anchor>554ad3bacb4efa3179421a9521a64553</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator3Rot</name>
      <anchor>f6c29a002f1064b39cf0f5e954590729</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator3Sep</name>
      <anchor>4e6f4ef52f778e0ec5d497dce7d3fee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator4</name>
      <anchor>39c2627a7f46dc2a44f6bc884dd7d8ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator4Rot</name>
      <anchor>2f10e20f994ab09f8081d2cf9437bbf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator4Sep</name>
      <anchor>f548b6513b3e79c19a8413e812cab5ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator5</name>
      <anchor>22e9344fd64eb64ce962beeb17e02cfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator5Rot</name>
      <anchor>c551963e68636e1280abb0bcb902c53c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator5Sep</name>
      <anchor>d39a9bb145ba9b5ed680c25a5a485840</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator6</name>
      <anchor>713d43657c254e423e2b51facd6fe152</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator6Rot</name>
      <anchor>95a1603041b33a6cb8812e7b968be474</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator6Sep</name>
      <anchor>4ef972be7d06ca056220258926cead70</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTransformBoxDragger</name>
      <anchor>2f83c931ec3de0c670f1f7c9985e62d3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTransformBoxDragger</name>
      <anchor>067742d406b4819d6d01231cd4cd0bb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>cb321c5383735e01798b55e93fd62441</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>38d1bbb3e5c82cc69e66d1bd931b3629</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>2bbf0681353a08e492f103c8505f5e90</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>7713613a1b810b7fb7534786126232c6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>f6625f38d69750724e047e90b2c8a663</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>e989ea8dc3caa720252a90d30e1fc415</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>375a4e540b7ac984e085d1cc84d430c1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0b47d412b0916dad46601646a814a4c4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>8d4ce924eea3bb34564d78cd61e6e32f</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>82d32a084014ab40b30151da895473f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>invalidateSurroundScaleCB</name>
      <anchor>044772badd5a39118306170be81f0ec9</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>ae8b7911a85e997097fb1413bf3c1965</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>4b188ca3d2228ad3512e15f99b53dce8</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>b13644d4005af49dc79dbe24935ff205</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>33b173d3dd35e1dcbf6064f49b39ae76</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>63e0976d3a951ed4a394b4ab92b5a49a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotFieldSensor</name>
      <anchor>400029604aa1b57510b69afd59ef054a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translFieldSensor</name>
      <anchor>b23a5523cf09a0a71e87c7d77c4fa541</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFieldSensor</name>
      <anchor>a6057570edb16712b345e9ac0255a15d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTransformBoxManip</name>
    <base>SoTransformManip</base>
    <filename>classSoTransformBoxManip.html</filename>
    <member kind="function">
      <name>SoTransformBoxManip</name>
      <anchor>0fd107292871def40115342f806ef476</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTransformBoxManip</name>
      <anchor>d396d5c4944781a68f45fcf7c7316381</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>b4655b3cff4ad1615cd098bc7da05529</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>d531bcfa2af84980ffac7c615c6ee1f3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>41659064c876edeba48d969db71d82fc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f5fcfd72900423601b33e7261e8a42ba</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>e3e830810c65a7da11f3038b8a81b7c6</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTransformerDragger</name>
    <base>SoDragger</base>
    <filename>classSoTransformerDragger.html</filename>
    <member kind="function">
      <name>unsquishKnobs</name>
      <anchor>801badbd5b2eb426dc161ae044b41950</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isLocateHighlighting</name>
      <anchor>c7d92236b113847876ab51f50635259c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setLocateHighlighting</name>
      <anchor>3f2fb85f41f39f5b0bbe3f7f106f9392</anchor>
      <arglist>(SbBool onoff)</arglist>
    </member>
    <member kind="function">
      <name>getBoxPointInWorldSpace</name>
      <anchor>c1b29bf2c2073bc53acb240679582786</anchor>
      <arglist>(const SbVec3f &amp;pointonunitbox)</arglist>
    </member>
    <member kind="function">
      <name>getBoxDirInWorldSpace</name>
      <anchor>336420de404d2fa525d5611eed835114</anchor>
      <arglist>(const SbVec3f &amp;dironunitbox)</arglist>
    </member>
    <member kind="function">
      <name>getWorldPointInBoxSpace</name>
      <anchor>52fe25c5c14fbc4f8ab4d7b4de174dd8</anchor>
      <arglist>(const SbVec3f &amp;pointinworldspace)</arglist>
    </member>
    <member kind="function">
      <name>getWorldPointInPixelSpace</name>
      <anchor>148e97919ce5582a5be8d6885957aba0</anchor>
      <arglist>(const SbVec3f &amp;thepoint)</arglist>
    </member>
    <member kind="function">
      <name>getInteractiveCenterInBoxSpace</name>
      <anchor>068e8d7c8d3bb5e3666274d2d7cc2c28</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setColinearThreshold</name>
      <anchor>6e83e146cc9d92857ac0959f4a287b30</anchor>
      <arglist>(int newval)</arglist>
    </member>
    <member kind="function">
      <name>getColinearThreshold</name>
      <anchor>21ba1151b5f587e441ce8dc497ab6716</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>minDiscRotDot</name>
      <anchor>04b6051cc007acfe6ef7d4315554e1f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>updateAntiSquishList</name>
      <anchor>7b631c6f6c415bab2eb9c8a33603262f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setAllPartSwitches</name>
      <anchor>b16b884956d03f045117465737e20761</anchor>
      <arglist>(int scalewhich, int rotatewhich, int translatewhich)</arglist>
    </member>
    <member kind="function">
      <name>axisFeedbackLocation</name>
      <anchor>0747f33609ea3911b898c4f344f10969</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>axisFeedbackSep</name>
      <anchor>f803f6658a8d37d78b9fbf85d6847343</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>circleFeedbackAntiSquish</name>
      <anchor>5c257941efb6da462808dd759ec708a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>circleFeedbackSep</name>
      <anchor>e77feebf619a4fb4f88033ae5eaa4967</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>circleFeedbackTransform</name>
      <anchor>42e44d43a05f7b920cf7069c12b2aeda</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>circleFeedbackTransformSwitch</name>
      <anchor>1abfdb00f2bd4a5b0b993f4f892128a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>negXRoundWallFeedback</name>
      <anchor>f84282476e5367ddded8de54e5f4ebb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>negXWallFeedback</name>
      <anchor>1d984ad731e6e85bc2f3f935f85e9393</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>negXWallFeedbackSwitch</name>
      <anchor>ad804facee1c84cd3b7ef7d264cc5f36</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>negYRoundWallFeedback</name>
      <anchor>9e77ddf32541dc7602c913b61646ccc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>negYWallFeedback</name>
      <anchor>9a6cc47d8b89d230b9deb8ffab0c9e7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>negYWallFeedbackSwitch</name>
      <anchor>ec9987cfd0695344b8bd35ec94947c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>negZRoundWallFeedback</name>
      <anchor>6ca8e3f2912ecdeb23748ecbdbfcaea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>negZWallFeedback</name>
      <anchor>616eac1f734f80b7ba52598df4c146dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>negZWallFeedbackSwitch</name>
      <anchor>2e051ef575a965fc8d9622ecc929fae0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>overallStyle</name>
      <anchor>6a8c4561d836997ee0fa540b76ab9e51</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>posXRoundWallFeedback</name>
      <anchor>03350fe01bc777fc61cbd8a3915deafc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>posXWallFeedback</name>
      <anchor>9018a33b8d4c15361f13e9bef6bca5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>posXWallFeedbackSwitch</name>
      <anchor>6d5cfe8d665db1dacc7a2678827dcaa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>posYRoundWallFeedback</name>
      <anchor>6f815a5c21b612cc4d9659521c948fc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>posYWallFeedback</name>
      <anchor>ef13ea058720edfd31061a3c0df99ed8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>posYWallFeedbackSwitch</name>
      <anchor>b2f4646d852488ce96a1eb70ffc4dbc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>posZRoundWallFeedback</name>
      <anchor>00b3a9fb7b7638f3711d5d6b5b10fe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>posZWallFeedback</name>
      <anchor>91b85626787316df81e7f3f6c78cbd81</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>posZWallFeedbackSwitch</name>
      <anchor>963cb2fcd1cad9016d9fb3eabd75097e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>radialFeedback</name>
      <anchor>2683371c054c632dd5d0a3a731efc8ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>radialFeedbackSwitch</name>
      <anchor>c92111993f3d61aa3f80edfa552343a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator1</name>
      <anchor>15d1e209eadc9790166583ea2fc5fe4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator1Active</name>
      <anchor>dd3735843c0f93d96ee3fc2ba2945fb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator1LocateGroup</name>
      <anchor>a111e90f2c7d874f327847a380d38cb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator1Switch</name>
      <anchor>0b51743e2485d08bbbf0cea60e16a266</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator2</name>
      <anchor>f38965459aa219388797532175a11459</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator2Active</name>
      <anchor>d729e0bc03816642b74ac3d28ccab33c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator2LocateGroup</name>
      <anchor>c374b95f9a0396023eb783b5ff90270c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator2Switch</name>
      <anchor>1d7088243341e2cbf034527bc80ef804</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator3</name>
      <anchor>90f17a17fdca5f099c39cf96afcc62fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator3Active</name>
      <anchor>116d3dd71c7349381065d0ca8c76b910</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator3LocateGroup</name>
      <anchor>d79271fb4e8dded2cdabe138efd45803</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator3Switch</name>
      <anchor>7911087c05828bd438c7a3c5c4ee7c11</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator4</name>
      <anchor>9700c8095fc1594ede05efc7f14c3084</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator4Active</name>
      <anchor>39de3394c21a02a6898bed6ed0153322</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator4LocateGroup</name>
      <anchor>e8852efa41f3d0b66d98cb7f42169a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator4Switch</name>
      <anchor>1e1c7e993d41936c576ee5aeef1920a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator5</name>
      <anchor>a41a3bb727097169ef35a506d4feba6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator5Active</name>
      <anchor>df264724399ac7ac0804e9c4605d99a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator5LocateGroup</name>
      <anchor>cc795f250057993fe5e7a680db3b0678</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator5Switch</name>
      <anchor>36d402f5fb82b50312ec26100489de61</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator6</name>
      <anchor>97000bf96520ecb12701445734be2873</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator6Active</name>
      <anchor>78e1815b1cfebec5c8ef733f0046c461</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator6LocateGroup</name>
      <anchor>f592b0e7c226a471d1e0784687165b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotator6Switch</name>
      <anchor>41ea8dae4da527a457382a307795ead1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotatorSep</name>
      <anchor>9dc1bb34b91b5c6e4ef49e4e5f9fdfb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale1</name>
      <anchor>99b6775340f8d2c1a9414641251914bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale1Active</name>
      <anchor>c72e137ae052292472501c7434fa7942</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale1LocateGroup</name>
      <anchor>03bbc907bae5589d84d43e45607a0327</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale1Switch</name>
      <anchor>7a98ca6c0f2fea5a9d06345cb082ae56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale2</name>
      <anchor>7c6fb526c8c4301824264f31e7a6a828</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale2Active</name>
      <anchor>f1f8ba1a80a78ca784b19d78b5da7c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale2LocateGroup</name>
      <anchor>03aec76a66c655d38416e64c651eba2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale2Switch</name>
      <anchor>eb4a78424a2fd29b87d022c7f9e77c2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale3</name>
      <anchor>8a198c676d889b4a49ad036be8872450</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale3Active</name>
      <anchor>25be9c7233a6d37f251981ae447b1cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale3LocateGroup</name>
      <anchor>fc043496e228714f8aed3c17a6018912</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale3Switch</name>
      <anchor>cc88d40539b6bf714171c1aa13832b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale4</name>
      <anchor>2e56a87c751e62fdb23b503941fee180</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale4Active</name>
      <anchor>bcb725a7cb5b4164c2e51e48001662b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale4LocateGroup</name>
      <anchor>e3fadad982e59222787d6ade75e8475c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale4Switch</name>
      <anchor>5742ee44d21db7e502e11411013fad93</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale5</name>
      <anchor>cd60bede67715dbe647045a7d6b7ed73</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale5Active</name>
      <anchor>e645298432644e0a02fefefbe9ebd34e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale5LocateGroup</name>
      <anchor>5d11b2da9498c98a321dfb1251c73d11</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale5Switch</name>
      <anchor>ac3108970e358c2c2f156055e8e575d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale6</name>
      <anchor>8b719b592bf07bef7392ed182be28946</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale6Active</name>
      <anchor>22affda36a591cedc985555c9132bc3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale6LocateGroup</name>
      <anchor>0c1e818a67c3246d03de68f94d06de7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale6Switch</name>
      <anchor>22af3fb2f5ec617209d1d18f06f94984</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale7</name>
      <anchor>2c2e2b89c75ce3b187cbfc578c4cd45f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale7Active</name>
      <anchor>8195c3b03aa75549c5364180b7cce40f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale7LocateGroup</name>
      <anchor>e1b9d1f53bd9094e5179348e6afcca57</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale7Switch</name>
      <anchor>886059db42b327da415ab4b734b18e96</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale8</name>
      <anchor>5e0220ec7ede894b153762c440e11054</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale8Active</name>
      <anchor>16906330edd933fdfbcb38c85187994b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale8LocateGroup</name>
      <anchor>c930abe888575757db9ff0c92e025733</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale8Switch</name>
      <anchor>54b4d825db007a3068b9cc5392faeb24</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleBoxFeedback</name>
      <anchor>781bbe38abb392ae85e03a2abf797175</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleBoxFeedbackSwitch</name>
      <anchor>4f3116678b7bfb9cc20ad25bc8fd3766</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleSep</name>
      <anchor>ab99e9923d2ab16ad816a3ee7c619c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>surroundScale</name>
      <anchor>b665ebc3b720e5c2d16ecd56967e5e25</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translateBoxFeedback</name>
      <anchor>97cf59bfa18dd81eeaf6b194cb98d161</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translateBoxFeedbackRotation</name>
      <anchor>9cebf92b54fc776abe5fb8ad1887f16e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translateBoxFeedbackSep</name>
      <anchor>5514f1debfbcd9dd8aa181619fc6be02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translateBoxFeedbackSwitch</name>
      <anchor>595e3448000f184f4c44b09220cc225c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator1</name>
      <anchor>beaad956c77f2ebad12879dc8279e105</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator1Active</name>
      <anchor>8f3b7601cbd8721217b9db3bb4f9cd43</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator1LocateGroup</name>
      <anchor>f3d2deb6e37bf52aa1f2fae18b6a90d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator1Switch</name>
      <anchor>a63c466854193bb26bcf3084e3848157</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator2</name>
      <anchor>33eee5c9fcb11157f8ac46d209f977d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator2Active</name>
      <anchor>152656a214bc9c3f9c7e9c3a29e9448c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator2LocateGroup</name>
      <anchor>fbaa10b9dd41823bfedf82ba0541a35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator2Switch</name>
      <anchor>03f8e8fe65de64e5d249f30808b88ae2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator3</name>
      <anchor>5b5bef9599ca0c0c133ad9b048952dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator3Active</name>
      <anchor>2d8f580913d74a3abbac813f8ff7ea31</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator3LocateGroup</name>
      <anchor>fe338031bf8b861e3f657e691035f7b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator3Switch</name>
      <anchor>db73360f412f84658ceb70380ed8e18f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator4</name>
      <anchor>dabc6a853b0f23e28885fe7c1b7363fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator4Active</name>
      <anchor>e78c0e7426c732362aa5831b822e1d45</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator4LocateGroup</name>
      <anchor>1f06ef7b2447300ad57b12678bf5eed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator4Switch</name>
      <anchor>766b606cce3d74b464844a7708088352</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator5</name>
      <anchor>d568878ea318fdba086b8ff63d63cea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator5Active</name>
      <anchor>9ffc0f45e3819c72b429a0cd1b0a9b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator5LocateGroup</name>
      <anchor>86477ed11de286ccdb09eaca484b82c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator5Switch</name>
      <anchor>5f1d79d62056360f9b162ed7965e7745</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator6</name>
      <anchor>3ade5f769fc3171f47ab94eb019fee1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator6Active</name>
      <anchor>b0bf464104ec247f0433fa76a4200dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator6LocateGroup</name>
      <anchor>06170e0a1eb71f125fe8ccd56654977b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator6Switch</name>
      <anchor>3c05052c7b9837758dada7132d86aee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translatorSep</name>
      <anchor>1290a426f50e2f2faee279c21d744b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xAxisFeedbackActive</name>
      <anchor>92941e924e4288d064d19e8fbecf59c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xAxisFeedbackSelect</name>
      <anchor>263ab8e393527e5699292f2cc486a480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xAxisFeedbackSwitch</name>
      <anchor>7ea5cc144a512211d437ba66c9ed6108</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xCircleFeedback</name>
      <anchor>36227d1134936a72df452264f54116d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xCircleFeedbackSwitch</name>
      <anchor>489c51d609a38833f5b24f4eb8eb9ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xCrosshairFeedback</name>
      <anchor>2c28d1b67f5c8a18dc41841df5e3a966</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yAxisFeedbackActive</name>
      <anchor>80512c745474d5f36316851342b8e294</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yAxisFeedbackSelect</name>
      <anchor>ec4e7f430f61f5c7f079c99b354d2361</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yAxisFeedbackSwitch</name>
      <anchor>bc20445dbab18a40e3f3dae457d191b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yCircleFeedback</name>
      <anchor>042b4de47b0d8c0e30f54510620493f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yCircleFeedbackSwitch</name>
      <anchor>5f063bd9ded72c512d5971658bdbc2ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yCrosshairFeedback</name>
      <anchor>ae198ea1fa74c90e399147cddf87b922</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>zAxisFeedbackActive</name>
      <anchor>4f6b4b179406be8181354b08834e3e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>zAxisFeedbackSelect</name>
      <anchor>83280974c596e851da55c5fe515f2adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>zAxisFeedbackSwitch</name>
      <anchor>892a8de1feccc05f13b2baa26ba81993</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>zCircleFeedback</name>
      <anchor>5adafa606bfc37c34e6395ccdda87567</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>zCircleFeedbackSwitch</name>
      <anchor>03e84c3101e51c5059494214c25ba43c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>zCrosshairFeedback</name>
      <anchor>670c0aa486f176e5315f0b48400a8743</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTransformerDraggerP</name>
      <anchor>05868cb74e5f9defe2fe12ba46e88cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>State</name>
      <anchor>9825d5a31d3c729607cbe603cc9729de</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTransformerDragger</name>
      <anchor>aefd9ade573a8557be06e7e89e4ad047</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTransformerDragger</name>
      <anchor>7c8f86fed756e6a3339242f603df53a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>795e103769565b5dcebf0361ab8cdbd3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>d6575027a6c1ef86611fc268a6438fa4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>3623500b88d5f9ea398d2774547256bf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>c979db2446ace49bb29ee98a4532843c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>de0437eec84234fe89148a7b8257baa8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>5ceb785fd50409cf509607cc2785509e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>1b11e75cb0df2d27f76ca9620ed40dd7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a72813231d56fef8ed88a0bb8c9f9470</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getCurrentState</name>
      <anchor>dafae81d62e863072b0fd9a7de56950c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>5a96fe363ef3976d9d2d06fb8f196527</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultOnNonWritingFields</name>
      <anchor>fb2072b9c629d4cdc9aafdfa313d31fd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>startCB</name>
      <anchor>e960d16f3d9cfcf1c9dd0522a17e85c9</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>motionCB</name>
      <anchor>bdf3235f81841a336c26c251c1dad522</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>finishCB</name>
      <anchor>c36185c45feb999fe863bbedbc40e05c</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>metaKeyChangeCB</name>
      <anchor>286ace9732652ec4f2b543b2439508a2</anchor>
      <arglist>(void *, SoDragger *)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>02fedef6a8a4c5f3654175a0f1711818</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>13324f74b79f93e79a3a1bb3809438fd</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>6a3c75add832daab20e9b5d2678b16c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>d7f5a69c3c3c6e3ed871b6e7fcbd00f7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>d89ddd11ae3c378cdb3bc7a586b2756c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getMouseGestureDirection</name>
      <anchor>825cacba654369871a0b839fd7699ae3</anchor>
      <arglist>(SbBool x_ok, SbBool y_ok, SbBool z_ok)</arglist>
    </member>
    <member kind="function">
      <name>getIgnoreAxis</name>
      <anchor>dbe2b2dde90aee795b72717e93d5fe48</anchor>
      <arglist>(SbVec2f axis[3][2], SbBool x_ok, SbBool y_ok, SbBool z_ok)</arglist>
    </member>
    <member kind="function">
      <name>makeMinorAxisPerpendicularIfColinear</name>
      <anchor>4341d5fcd19bfbb0dade41cf56d53da0</anchor>
      <arglist>(SbVec2f origin, SbVec2f axisends[3][2], int index_a, int index_b)</arglist>
    </member>
    <member kind="function">
      <name>isColinear</name>
      <anchor>0fe7ae500aa6bd13fd400e53718861ab</anchor>
      <arglist>(SbVec2f a1[2], SbVec2f a2[2], int pixels)</arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>9d97adc46c878ae41b89f3e6d9b8c5b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>612344bad5471fd851ad8e005462f06b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFactor</name>
      <anchor>b64d63c77e98e307e85c316a6853d4ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translFieldSensor</name>
      <anchor>dfeba0008fc32a6ea12430726c370611</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFieldSensor</name>
      <anchor>fb207ca702619e298f3d765ae1671317</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotateFieldSensor</name>
      <anchor>5378a65457eaba74c45914e11419999e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>antiSquishList</name>
      <anchor>8152204f253943257242a1f954c370af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTransformerManip</name>
    <base>SoTransformManip</base>
    <filename>classSoTransformerManip.html</filename>
    <member kind="function">
      <name>SoTransformerManip</name>
      <anchor>b01c937875f96aef1a7173b85dd52de9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTransformerManip</name>
      <anchor>293fd02a9c6b6704bbf9b717f6e79ca4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d7c33294734f9510a80272a78ac749da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>3ab0eebade8322c8ecf7c81d27d05ad1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>9bc4750480518cfb984e66ed116aaf12</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>583db8e8beab2152d611d7e04ec3e6af</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>8c8ef05d47f217198d2627ee5bcb261b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isLocateHighlighting</name>
      <anchor>fa53e0437d3610427cc32d7a04e1d2fe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setLocateHighlighting</name>
      <anchor>4d56cc04a9598abca70405e4cb191461</anchor>
      <arglist>(SbBool onoff)</arglist>
    </member>
    <member kind="function">
      <name>unsquishKnobs</name>
      <anchor>77a5a8bef8b98b3238d9db994db32cc3</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTransformManip</name>
    <base>SoTransform</base>
    <filename>classSoTransformManip.html</filename>
    <member kind="function">
      <name>SoTransformManip</name>
      <anchor>d34ed99c114a7f31b210c9018e628c40</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTransformManip</name>
      <anchor>df21f6c34015e174969d25b54aaa3808</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>0541a4a1e6a768ac54dcc51bbfb308dc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>aa55a6f0f4c26bad187d96613fca8775</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>96fcbc766d2d30dd926acadc449b6f89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>9e5d74003ff1905441396c9202cb8767</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>56a5a8d947087ce2c1d2f3a0cdcd26f7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getDragger</name>
      <anchor>0df7cf0b388b8f23600a5c8f5a7be41b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>replaceNode</name>
      <anchor>a3035a324a6d39c037f1754e61a8cee9</anchor>
      <arglist>(SoPath *p)</arglist>
    </member>
    <member kind="function">
      <name>replaceManip</name>
      <anchor>84dcf0cb3e159ac1fdcfc23a2411528a</anchor>
      <arglist>(SoPath *p, SoTransform *newone) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>65ee82324fe763ebbb67db148362f052</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>445883ede479f83c6067350950ea0ed4</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>576c1ef21dfd9a12e7d8bfb2045c29d3</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>ea2aec22ec5044fdf7713e0742dc962c</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>841073e74c32900e22a0e3e2ca124b0f</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>6b5dbf7417c79665eab27a94a4d19578</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>65859a478f91ffd2b557da90793b01e0</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>9f9f91b4b12c88f80559951dd28f367c</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>732b82f220281d1c376bbf398601863a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setDragger</name>
      <anchor>342d5abdfc9a61e883459ef4529d7af7</anchor>
      <arglist>(SoDragger *newdragger)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>ea958acd64a43b0461bc104708c451c3</anchor>
      <arglist>(const SoFieldContainer *fromfc, SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>transferFieldValues</name>
      <anchor>95639f7c920ff38f9d603a4afc0c6e47</anchor>
      <arglist>(const SoTransform *from, SoTransform *to)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>03c9f1f0f7bebec4e9598a811748c40e</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>fb1c212fdd2179fa29ec7721d3447328</anchor>
      <arglist>(void *f, SoSensor *d)</arglist>
    </member>
    <member kind="function">
      <name>attachSensors</name>
      <anchor>c84ee0d4eeee8d727b75da2d843d18ed</anchor>
      <arglist>(const SbBool onoff)</arglist>
    </member>
    <member kind="function">
      <name>rotateFieldSensor</name>
      <anchor>8685cd2bfa5494b5cda66d21498178db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translFieldSensor</name>
      <anchor>d1abf8317db57c15e3b5d359b0c6efd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleFieldSensor</name>
      <anchor>20a6aa319d0becb44755fc51c7aa87e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>centerFieldSensor</name>
      <anchor>fb882172a345c4b3ec2a3a3ad467d5b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleOrientFieldSensor</name>
      <anchor>4731f0b05d5e14902980402573798ce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>children</name>
      <anchor>4bb8e2b4b526986090bdf739e0903e9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTransformSeparator</name>
    <base>SoGroup</base>
    <filename>classSoTransformSeparator.html</filename>
    <member kind="function">
      <name>SoTransformSeparator</name>
      <anchor>9447cf3feb7a9ec031d6fb432594667a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoTransformSeparator</name>
      <anchor>383d755cfc1b8f63092038a6f3060151</anchor>
      <arglist>(int nChildren)</arglist>
    </member>
    <member kind="function">
      <name>~SoTransformSeparator</name>
      <anchor>43ec59016324f3aba80d3f8f7782fec7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>fc9d36b3deda8f6f2056b2719043a03b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>26f7c7a71c76c1d97c9659560764fa09</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>c276c9b649b99862c3287d5c9adde4ee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>6c15443c8d019f0ed7957b03f2e9df53</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>95897303d8346234233dc0d533fa0f49</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>86073506786f508d595f2632604e0bee</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>4e4b32f713beb1ee566b8b5a692a300a</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>c276546b3e03072b4ce6ec42efb59691</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>f081c77489d9a6dc8f14ac197f5ea640</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>aff524378699df79642f23e2dd7d7c31</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>cc1d11a86608b193db9b367fd699ae43</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>7cc362c0ed04cf9624f23e96cb4d8cbf</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>eeb0541dff8998b519ba580d275232e5</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTransformVec3f</name>
    <base>SoEngine</base>
    <filename>classSoTransformVec3f.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>05cbc57f53a277b3fd2c268b3f7e1703</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoTransformVec3f</name>
      <anchor>fc9a11fdd55de846ec2308ed3db81a8a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTransformVec3f</name>
      <anchor>adecfc752be7c46d7eb8005c2c6b19f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ad9fd6a6753268dad670578b784e4c3e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>bc8e283dbba20d81ec5eac68beac3697</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>5e28c3be11de90738c28b13a43dbfb8d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>3e8ee1e58b63733a2290b930256c716f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>d4c3958c3f511abf3846120e47718083</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>4ccce9d81cd3e187038993f3f5a782ac</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>2e29b3dd7efd3a8e04f4f465743f56d4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>vector</name>
      <anchor>e8323f236e1cc448ff3f2dbb3c0179a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>matrix</name>
      <anchor>1146278035c096012c90dc4e075f68fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>point</name>
      <anchor>31fa491efb4ece7524a0b8d439c53c06</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>direction</name>
      <anchor>a5d6794f9d11f73b276a0c84f899887d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>normalDirection</name>
      <anchor>f9fc6b552e3e5333ee9e8cbe61f30ad7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTranslate1Dragger</name>
    <base>SoDragger</base>
    <filename>classSoTranslate1Dragger.html</filename>
    <member kind="function">
      <name>feedback</name>
      <anchor>c3da94c96a6139353ed252448cca66be</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackActive</name>
      <anchor>a23dd46d0430fba4ea72e9256e518e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackSwitch</name>
      <anchor>7e5ab7114736889997abf75d68f55557</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator</name>
      <anchor>342214747a10ee11763f88d7b7d8f6c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translatorActive</name>
      <anchor>5b00c6439c24fa0edf1cafa694cfff2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translatorSwitch</name>
      <anchor>5dbef1b905e46537cffb26990500b16e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTranslate1Dragger</name>
      <anchor>4572f91b8880e3b539f0ca9aac63115a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTranslate1Dragger</name>
      <anchor>dff97069127cf9b8335d0e3057b9c351</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>4e8552689ed8a75577d2033ce52b36f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>56de82bab4b69708a7c84248bbd98850</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>212d2317574e26a0fbbf62df19d404bd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>52f64563310b4790fa0ad95968e8d89d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>22319f8f33366dc70aad01e29e5138e1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>0a298eba34d2a57bfd059a043c540945</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>ae37e2f6b5d9a4024e333defd8f2679a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>57237e461503554d63e44043b1dd4a4a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>0ace89f3ba3431b849a5a2958acc305a</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>startCB</name>
      <anchor>c7bc97110eee728a6bf8fb63c99552e3</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>motionCB</name>
      <anchor>e242d0118589912bb4a757f3ea0d4267</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>finishCB</name>
      <anchor>2f41e425546f8495c279786f7d179b30</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>615cd0f47f6a7396f34cccb61aec2da1</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>d282857cd89a095fa7de48ee6bef0080</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>92785a3b06efe5c17f13067773c90949</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>0e9620f7adac429254be2973de039854</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>c0ef26a04a71f2636c0ffaadc7a4140a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>64974280a576a036499031149ba700f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fieldSensor</name>
      <anchor>8fd147ba3487a7cc2440ce96a61d2eb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>lineProj</name>
      <anchor>0178f754b69f7165d1bf7ca68bb97352</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTranslate2Dragger</name>
    <base>SoDragger</base>
    <filename>classSoTranslate2Dragger.html</filename>
    <member kind="function">
      <name>axisFeedbackSwitch</name>
      <anchor>629c2f45720c10085a02b44ca4b88a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedback</name>
      <anchor>e70317a71a77e8ac3c03dbad0b966dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackActive</name>
      <anchor>3e4bb2bb59f7ce32c2a3828ac886fc08</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>feedbackSwitch</name>
      <anchor>c07614ef667f3eab6c98dc56e787c234</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translator</name>
      <anchor>a4eb8c24c19bc800a0ac4bfbfb641549</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translatorActive</name>
      <anchor>916334fd72f1aa9c85ed28fc7c73b85b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translatorSwitch</name>
      <anchor>ddf805486f0f6d2d1f116874d55af7e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xAxisFeedback</name>
      <anchor>05133b63423f998eb5d215d505321018</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>yAxisFeedback</name>
      <anchor>f2d580f529faf357c33deabb8cdc110b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTranslate2Dragger</name>
      <anchor>e73a533e36fcd51ddfa9525e0065284b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTranslate2Dragger</name>
      <anchor>6a4218c922b156f128dd179463477f39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>74adc634f83164ecabb40771fff17301</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>7075e0bf259aaf06edf672182d05583b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>d6be45fbb2737929cd28ca2a49ce2e06</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>1e50d9e0625bbf57a62337f2319c1c9e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>2e872678bd4ecea50441b46b21e2ebd7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>6ec578d249ae2e0688ff0e0007c5d7bb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>6989d77ce5896cb515df93e4725f790c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>5a6cf3fafb2aa08e33e1e06e6869ad28</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setUpConnections</name>
      <anchor>d19acf54248120d71be8d276e9bab9f2</anchor>
      <arglist>(SbBool onoff, SbBool doitalways=0)</arglist>
    </member>
    <member kind="function">
      <name>startCB</name>
      <anchor>45f9f9c870b38001d1215fe06676a6e5</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>motionCB</name>
      <anchor>379178cb680ddeaa5960de01637cba24</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>finishCB</name>
      <anchor>cd5dc7f28ea4bfa726b5b710cec0d3c5</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>metaKeyChangeCB</name>
      <anchor>e0fbb31c2a2d1bb5d24a1af72dc693c5</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>fieldSensorCB</name>
      <anchor>1ed66f0506c8400a819ebed3528128be</anchor>
      <arglist>(void *f, SoSensor *s)</arglist>
    </member>
    <member kind="function">
      <name>valueChangedCB</name>
      <anchor>2b661fc0b991a2ea20fe73c52183131c</anchor>
      <arglist>(void *f, SoDragger *d)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>9f5dd4ff1dee5d2a6e681534727441a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>baeab902a79c8ec0affea34ef1dfdd27</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>b13fa50f566b65a037aa16d98e4e2cf1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>520d3bb910fd1965f00d08b1239d0983</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fieldSensor</name>
      <anchor>5c65bbc7e3841d567fda6731a85e1d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>worldRestartPt</name>
      <anchor>d2b69b0d2b084fb6fcd0671b54553b86</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>planeProj</name>
      <anchor>d70fca7b6325f044675dd754d8029ce1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTranslation</name>
    <base>SoTransformation</base>
    <filename>classSoTranslation.html</filename>
    <member kind="function">
      <name>SoTranslation</name>
      <anchor>f6e41e8b3707a211addc723baec1c5aa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTranslation</name>
      <anchor>91e8adf5f8850681f5cee237eb928eb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>26c681c5c1bf8d4ad3a24030df00d02e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>6da7369ec3e6ee5594a737a9e7d75499</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>22c5d8255a66d2a6c6fd79486f0dac83</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>fca672e5def46bc78303fd1deaea2299</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>77786e031ca1d53c8e563551d9eb7936</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>da85a1c1b76bc5cff92e87661cf0ad51</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>9d4ef82fd0e97dd059ad4b11578d8e65</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>2a9e82dd55148ae4312ceeb35ba2b758</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>5739d30a3a8acd401ea10180f76fca9f</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>ae7f53ea7be83b408d2e1e1eb54af8bd</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>497695b6baa1077e5ead36fc93a539f9</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>33df6c2fa2f6d481847f9173d2f6b149</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>854b33585bc5271410059beac21531a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTransparencyType</name>
    <base>SoNode</base>
    <filename>classSoTransparencyType.html</filename>
    <member kind="function">
      <name>Type</name>
      <anchor>58e29a623706a68dd3df042720f0a29f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoTransparencyType</name>
      <anchor>9595d27d3c8a4e0197c4ca8564a69e5a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTransparencyType</name>
      <anchor>d4e4ce0b7ab6dc2c8bbd75cab8c4abfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5803d6844a14e25f093bd9fafce3da5f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>bc357c2985f4dc03c01f8b0147922f21</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>cb3088ab520969c71a6942ae14cc8f75</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f49bba7c4980bef318947e916d041055</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0781127fdbfa64d913104c14e52cfa59</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>9fbdba3dd648424faa07a996ad9151cd</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>ce32a038e07bf51f164c6d4702cac1a4</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>9504395a236913b3086c9c1b1228b501</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>value</name>
      <anchor>2a6d579c076626d6beefd5c6f5bb24e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTriangleStripSet</name>
    <base>SoNonIndexedShape</base>
    <filename>classSoTriangleStripSet.html</filename>
    <member kind="function">
      <name>SoTriangleStripSet</name>
      <anchor>ee24fce4a080fe54a2859eca8819492f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTriangleStripSet</name>
      <anchor>47025bb1883c0702953423f5cab9ef9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ae463d34f1ee7cb0d1aefa3d37a0db50</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>75e4cb705db5be28679f483f53833ce8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>6234553c08981439c34a5be14490a817</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>58358662595cebdb9001a3b760ddc0c6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>9e48cec648106e1406ae1a62fb1a1e40</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>082e4b85f6102a6857d92046242f923c</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>a5236879d7ff8df12bda1c14656fc58b</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>526a264fe5107784d739c350c592c4f5</anchor>
      <arglist>(SoState *state, SoNormalBundle *nb)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>370730065c45cc35a13763b35f081e62</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>18cbbae1c08be88debe726bc6654b7b7</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>5290d11d39f504ac182dfa7e41560de4</anchor>
      <arglist>(SoState *, SoNormalCache *)</arglist>
    </member>
    <member kind="function">
      <name>numVertices</name>
      <anchor>2a23abcfec17ee852a2863d242ed1b1a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTriggerAny</name>
    <base>SoEngine</base>
    <filename>classSoTriggerAny.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>dce1bfa894cd61ec57c6b77640c81bcc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoTriggerAny</name>
      <anchor>baf7f16270023b7c69baea216d8e48fa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoTriggerAny</name>
      <anchor>a17681f73c31a91d150ec06f68eb71a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>fa6796b2f783bed5e76b92ebd9e01db5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f1143749f87a78acf6c5986596172d58</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getInputDataPtr</name>
      <anchor>3f6a103cfaed94c7ffd5931257c02e09</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>b036aefdd9bfea9210dc2734f91c93f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>27a71a781841d90fa9e43766e4cf7e2c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>9098eb073cff962fd4d278f975506b73</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>001194f9ec1b6e0957de9a50b4388ad3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>input0</name>
      <anchor>c2f4b27ba5ed0db6580b72a6f3c8cc78</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input1</name>
      <anchor>46af4d77fc97e66587863c1004880e59</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input2</name>
      <anchor>749b67a2a51edd23edd70494bcad33f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input3</name>
      <anchor>1b72a48dedb9931e6c51f432cf72bb1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input4</name>
      <anchor>cfe8f0b8cf54318cae79541d192f91c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input5</name>
      <anchor>c36dcfd27d7fc5d087e9cf925e450f25</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input6</name>
      <anchor>6d488438c4bffd9b20d806ed08c066b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input7</name>
      <anchor>a4dc8664dc977d488495b5752e435302</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input8</name>
      <anchor>d6eb0a047d9d13ac16cfe8d36db45713</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>input9</name>
      <anchor>ca9f2ceb0f11bfde383aee81b3ef787b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>output</name>
      <anchor>951748b23e9e3272ee799c3d9a05d286</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoType</name>
    <filename>classSoType.html</filename>
    <member kind="function">
      <name>instantiationMethod</name>
      <anchor>d4e992c9f4f237e8b1f90f2c7d9ea0e0</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="function">
      <name>fromName</name>
      <anchor>16f1f08d4b1ce3f503193afc65adb29c</anchor>
      <arglist>(const SbName name)</arglist>
    </member>
    <member kind="function">
      <name>getName</name>
      <anchor>70d3e5e79eaf6fbea2d17d10acd3a404</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getParent</name>
      <anchor>7e0a5dbf0f2608f06d2c3caf89147861</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isDerivedFrom</name>
      <anchor>47d76d1214d6619378cb3f526f84acaf</anchor>
      <arglist>(const SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>getAllDerivedFrom</name>
      <anchor>4fe130354575c729054120bc398985a4</anchor>
      <arglist>(const SoType type, SoTypeList &amp;list)</arglist>
    </member>
    <member kind="function">
      <name>canCreateInstance</name>
      <anchor>7a2c76fb3ad9c6aa435ce7144e38f0d7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>createInstance</name>
      <anchor>de14200baeb5a24d96f609dd35ca9d5a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getData</name>
      <anchor>a367cd2fa878465342ebad636f459f87</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getKey</name>
      <anchor>58025bc3f4893c0894124ab7e84901ed</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>operator==</name>
      <anchor>3eba0d7f90d55a73951a250536282d01</anchor>
      <arglist>(const SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>operator!=</name>
      <anchor>fdcfd8c229a6417812ef0604aad8b880</anchor>
      <arglist>(const SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>operator&lt;</name>
      <anchor>9cac9297261115f78f0717e2967b9e95</anchor>
      <arglist>(const SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>operator&lt;=</name>
      <anchor>ce52d81bf1ab231950a6802b2e48c071</anchor>
      <arglist>(const SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>operator&gt;=</name>
      <anchor>1d8885de7c0a45c318203dbbed374687</anchor>
      <arglist>(const SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>operator&gt;</name>
      <anchor>a09aea578fd4fc296770ca6512c30b37</anchor>
      <arglist>(const SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>createType</name>
      <anchor>7745b12001bf4f690a4f85a3add36077</anchor>
      <arglist>(const SoType parent, const SbName name, const instantiationMethod method=(instantiationMethod) NULL, const uint16_t data=0)</arglist>
    </member>
    <member kind="function">
      <name>overrideType</name>
      <anchor>149bd128fc5f3d7dd68c2aad41d1f7ba</anchor>
      <arglist>(const SoType originalType, const instantiationMethod method=(instantiationMethod) NULL)</arglist>
    </member>
    <member kind="function">
      <name>init</name>
      <anchor>4900790cb69fea0b427e313b72b71b4a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>fromKey</name>
      <anchor>a4393cacc51ae15107ba15f7207426c1</anchor>
      <arglist>(uint16_t key)</arglist>
    </member>
    <member kind="function">
      <name>badType</name>
      <anchor>08a5653a56fb7a1999eea6bf42a787f6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isBad</name>
      <anchor>330d23e8ba545dfdafc733d25132d119</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>makeInternal</name>
      <anchor>6b19939a099ae72b8c1e8c472eaf33b2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isInternal</name>
      <anchor>025b931ccbf5f20054c43e4df3006098</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNumTypes</name>
      <anchor>77a7edd33c300deb2aeca8641521ff82</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getInstantiationMethod</name>
      <anchor>9165197329f22058d5b34816ba30d6ec</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoTypeList</name>
    <base>SbPList</base>
    <filename>classSoTypeList.html</filename>
    <member kind="function">
      <name>SoTypeList</name>
      <anchor>423c69204767b1dc4035ad90f0961105</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoTypeList</name>
      <anchor>c397dd08d4a6a2c617f02ec1edae492b</anchor>
      <arglist>(const int sizehint)</arglist>
    </member>
    <member kind="function">
      <name>SoTypeList</name>
      <anchor>9de58b3985afd2fcdf3b10e865a8cc08</anchor>
      <arglist>(const SoTypeList &amp;l)</arglist>
    </member>
    <member kind="function">
      <name>append</name>
      <anchor>254aa4cd0438896953dc3edd03ef6fff</anchor>
      <arglist>(const SoType type)</arglist>
    </member>
    <member kind="function">
      <name>find</name>
      <anchor>2713e96326da53ff7db21aff389b9d47</anchor>
      <arglist>(const SoType type) const </arglist>
    </member>
    <member kind="function">
      <name>insert</name>
      <anchor>e6ea0c2a6293f7cfbe41f5d3da7bcd06</anchor>
      <arglist>(const SoType type, const int insertbefore)</arglist>
    </member>
    <member kind="function">
      <name>operator[]</name>
      <anchor>55bd2da5390e2b016ca9bf0ca610da49</anchor>
      <arglist>(const int idx) const </arglist>
    </member>
    <member kind="function">
      <name>set</name>
      <anchor>7f5d6f49a1a47f7113b7ad6663ffcbe9</anchor>
      <arglist>(const int index, const SoType item)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoUnits</name>
    <base>SoTransformation</base>
    <filename>classSoUnits.html</filename>
    <member kind="function">
      <name>Units</name>
      <anchor>73e9abb855f619e3fe22894fad707edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoUnits</name>
      <anchor>4228c9591d7ed73023c6e06b0e2ebc71</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoUnits</name>
      <anchor>3cbd1f8310f96411faf8f2f8ca1c2e16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5354fe3b701e62d8cb08ead44c2126b8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>41dbed684fcc93ebad343d54a4c5f128</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>957c498f9a766a15eb802fd0584f919b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>2620e0e6a85e54462eb7eaa135d4d522</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>b40112aefac0062f0bcc05435bd14fdc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>2e3f830f5e74631050a8903eaf1a1366</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>562cea31cad758ff555da60244952faf</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>6a88420757cc7f7ed26ef66d8d8fe47e</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>27a9614b150474bbe4356268cc754ff2</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>97abf130989e4982ed50b4184f55dae3</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>0f35a38df21126538ac05b4c6bd8196e</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>dba83e449b733ca4c97534b337ae10da</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>units</name>
      <anchor>d4eab30ab199ad174827c4b5dd050c0b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVectorizeAction</name>
    <base>SoCallbackAction</base>
    <filename>classSoVectorizeAction.html</filename>
    <member kind="function">
      <name>beginStandardPage</name>
      <anchor>df0599525a69b8974e24e49a02c8c539</anchor>
      <arglist>(const PageSize &amp;pagesize, const float border=10.0f)</arglist>
    </member>
    <member kind="function">
      <name>getNominalWidth</name>
      <anchor>f8be6b94113398a1cee6654a34097da1</anchor>
      <arglist>(DimensionUnit u=MM) const </arglist>
    </member>
    <member kind="function">
      <name>setDrawingDimensions</name>
      <anchor>4aa9f3548ad6ed2a2345a80a89b74840</anchor>
      <arglist>(float w, float h, DimensionUnit u=MM)</arglist>
    </member>
    <member kind="function">
      <name>setStartPosition</name>
      <anchor>1d8b59c78d66f45f8a3c7297a0b0edc9</anchor>
      <arglist>(float x, float y, DimensionUnit u=MM)</arglist>
    </member>
    <member kind="function">
      <name>getMiterLimit</name>
      <anchor>68ed93ce1bdd4085d15e791fdc5c6f5d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>SoVectorizeActionP</name>
      <anchor>e1147ff2b6af77d7668ec218a9ff124f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>DimensionUnit</name>
      <anchor>c07b28146ca5ccb7afa3a560e2d4c822</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>Orientation</name>
      <anchor>f5b4dae5c682ec7a8d4ec1246ec2e2f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>PageSize</name>
      <anchor>7fc8ac7c81ca974b55807f39f715f83a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>0</name>
      <anchor>7fc8ac7c81ca974b55807f39f715f83ae5796440e222f2864e7abdc656979277</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>1</name>
      <anchor>7fc8ac7c81ca974b55807f39f715f83abf76f945847e5190a1837670381b8ba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>2</name>
      <anchor>7fc8ac7c81ca974b55807f39f715f83aa7dfa7c834023e6dac083d4d6b100652</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>3</name>
      <anchor>7fc8ac7c81ca974b55807f39f715f83aca6f13741e987b4c4b94cb6e980593e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>4</name>
      <anchor>7fc8ac7c81ca974b55807f39f715f83a3a0760c9451c3e62d56668452ed7fc04</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>5</name>
      <anchor>7fc8ac7c81ca974b55807f39f715f83a73fc34f6ac8929bec158a8522d15a862</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>6</name>
      <anchor>7fc8ac7c81ca974b55807f39f715f83abc2575f581a7fc88fc726f6860aa196f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>7</name>
      <anchor>7fc8ac7c81ca974b55807f39f715f83a726975b0d145a3b1cf9a00e62a50c66a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>8</name>
      <anchor>7fc8ac7c81ca974b55807f39f715f83a0623b6aedb6f8330d5b6c3bfb253d65e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>9</name>
      <anchor>7fc8ac7c81ca974b55807f39f715f83a46d4049d062aa87dd3e7b849c7941c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>10</name>
      <anchor>7fc8ac7c81ca974b55807f39f715f83a1359610ce17c214cfd15f9573dc1a771</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>PointStyle</name>
      <anchor>1945e3dc46d9004454f6be5e90947f8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>IRCLE</name>
      <anchor>1945e3dc46d9004454f6be5e90947f8faf2712ae869d411e9bb5abc19613f0df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>QUARE</name>
      <anchor>1945e3dc46d9004454f6be5e90947f8f5fad4d4fe72d7cb27bcc861f697b1b53</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVectorizeAction</name>
      <anchor>36a60fe56b8e533bf44cba92a0400b19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVectorizeAction</name>
      <anchor>a4c61beb77a645cd9b4f36be04d41a36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>c8c7b763386d01722b4bd04a819f1e14</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>780550d162482dd5808bc0c9db40c992</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>d781513f48ddcc954e98b79a84fcaf15</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>5f7a063737e4e95288bbcfea19b7227e</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>fc82e32d64315c09b580d5c54c08f13d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>73a083a47ea8ff1ba460621e12d4aeb1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>50cf20e7a0e1a68ac4643d9e21c59d15</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutput</name>
      <anchor>faee47012cb2e9bbf90e4120fc66dd37</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>fe60e4a699f83a6de20d907a88101116</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>2334e87ea188bdff9d427ac193cdbabf</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>05f24215a4bc5181420ba6ad84e95d38</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>apply</name>
      <anchor>fde36f484e6d9f81981c0dee17ca82cd</anchor>
      <arglist>(const SoPathList &amp;pathlist, SbBool obeysrules=0)</arglist>
    </member>
    <member kind="function">
      <name>beginPage</name>
      <anchor>7b6f705de8320c9667329a54cf40c1dd</anchor>
      <arglist>(const SbVec2f &amp;startpagepos, const SbVec2f &amp;pagesize, DimensionUnit u=MM)</arglist>
    </member>
    <member kind="function">
      <name>endPage</name>
      <anchor>9e399efdcc1a05b5dbe0346e7d5220d3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>calibrate</name>
      <anchor>a485eedafc71a9d1c45ab66b28519073</anchor>
      <arglist>(const SbViewportRegion &amp;vp)</arglist>
    </member>
    <member kind="function">
      <name>beginViewport</name>
      <anchor>a36735f1077ca7102ce223617d13df27</anchor>
      <arglist>(const SbVec2f &amp;startpos=SbVec2f(-1.0f, 1.0f), const SbVec2f &amp;size=SbVec2f(-1.0f,-1.0f), DimensionUnit u=MM)</arglist>
    </member>
    <member kind="function">
      <name>endViewport</name>
      <anchor>5ba2d871f0a4b735a082bdc8833bf300</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setOrientation</name>
      <anchor>a080256adbcf2311a6e73846eb062d7c</anchor>
      <arglist>(Orientation o)</arglist>
    </member>
    <member kind="function">
      <name>getOrientation</name>
      <anchor>466ee474c8abf128d570259750c6dbb3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setBackgroundColor</name>
      <anchor>7916e8d0cc643bac003b1738bb0e2248</anchor>
      <arglist>(SbBool bg, const SbColor &amp;col=SbColor(0.0f, 0.0f, 0.0f))</arglist>
    </member>
    <member kind="function">
      <name>getBackgroundColor</name>
      <anchor>fc614fa2e1e74b4d8e90e2f74b2522e6</anchor>
      <arglist>(SbColor &amp;col) const </arglist>
    </member>
    <member kind="function">
      <name>setNominalWidth</name>
      <anchor>fc6caea4d2d8fda0583ddddf46acb52a</anchor>
      <arglist>(float w, DimensionUnit u=MM)</arglist>
    </member>
    <member kind="function">
      <name>setPixelImageSize</name>
      <anchor>cee61960e4525f49a016343433b100db</anchor>
      <arglist>(float w, DimensionUnit u=MM)</arglist>
    </member>
    <member kind="function">
      <name>getPixelImageSize</name>
      <anchor>1ce946a7faee98e289c5acc73c34b12b</anchor>
      <arglist>(DimensionUnit u=MM) const </arglist>
    </member>
    <member kind="function">
      <name>setPointStyle</name>
      <anchor>899ba21b934ac060481b89df170c06a3</anchor>
      <arglist>(const PointStyle &amp;style)</arglist>
    </member>
    <member kind="function">
      <name>getPointStyle</name>
      <anchor>c75a1f415cdd054ca1294b8af89632fb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPageStartpos</name>
      <anchor>8d8b9f3938f1ca2e136063e74431b409</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPageSize</name>
      <anchor>bc4ec75b7a52f111b9a4b22ae276c412</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setDrawingDimensions</name>
      <anchor>a9387c841cd2c018a8e4e580437667d8</anchor>
      <arglist>(const SbVec2f &amp;d, DimensionUnit u=MM)</arglist>
    </member>
    <member kind="function">
      <name>getDrawingDimensions</name>
      <anchor>43f0c19163a2158418083648bec13413</anchor>
      <arglist>(DimensionUnit u=MM) const </arglist>
    </member>
    <member kind="function">
      <name>setStartPosition</name>
      <anchor>9cadf6163a009475a5b95756213848a4</anchor>
      <arglist>(const SbVec2f &amp;p, DimensionUnit u=MM)</arglist>
    </member>
    <member kind="function">
      <name>getStartPosition</name>
      <anchor>ffeb3ed0c04811a6c9ae100161e53810</anchor>
      <arglist>(DimensionUnit u=MM) const </arglist>
    </member>
    <member kind="function">
      <name>setColorTranslationMethod</name>
      <anchor>b2c6fccd7627e5df4accb9acd2b31b6a</anchor>
      <arglist>(ColorTranslationMethod method)</arglist>
    </member>
    <member kind="function">
      <name>getColorTranslationMethod</name>
      <anchor>a9462207f761a3a20755fb3f49a5ee99</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setLineEndStyle</name>
      <anchor>74a770a39bb94ef3e0c4c1a1146ed595</anchor>
      <arglist>(EndLineStyle style)</arglist>
    </member>
    <member kind="function">
      <name>getLineEndStyle</name>
      <anchor>82d24d29cbef48b1a4c9b96334f31bb0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setLineJoinsStyle</name>
      <anchor>c60b8ce09de15238a6fc4db84e7fe307</anchor>
      <arglist>(JoinLineStyle style)</arglist>
    </member>
    <member kind="function">
      <name>getLineJoinsStyle</name>
      <anchor>bdfb8028e2f050805abfb92a7e049adc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setHLHSRMode</name>
      <anchor>90193bc873d92108373eb781b692da3c</anchor>
      <arglist>(HLHSRMode mode)</arglist>
    </member>
    <member kind="function">
      <name>getHLHSRMode</name>
      <anchor>e89520407fbb190a67842be7d83d3362</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setBorder</name>
      <anchor>45f08a44b28830dbd90ea216191e5c2c</anchor>
      <arglist>(float width)</arglist>
    </member>
    <member kind="function">
      <name>setBorder</name>
      <anchor>24a3685b8f73309b72e86157667d5888</anchor>
      <arglist>(float width, SbColor color)</arglist>
    </member>
    <member kind="function">
      <name>setMiterLimit</name>
      <anchor>57e2e496b704825f785e162ebb3f3063</anchor>
      <arglist>(float limit)</arglist>
    </member>
    <member kind="function">
      <name>setPenDescription</name>
      <anchor>d5871a5a14f2660203494874dbb70870</anchor>
      <arglist>(int num_pens, const SbColor *colors=0, const float *widths=0, DimensionUnit u=MM)</arglist>
    </member>
    <member kind="function">
      <name>getPenDescription</name>
      <anchor>9266be1ae98635a9dd96409bcec4215b</anchor>
      <arglist>(SbColor *colors, float *widths, DimensionUnit u=MM) const </arglist>
    </member>
    <member kind="function">
      <name>getPenNum</name>
      <anchor>7b79fd263d61efa903d9294d38f8755d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setColorPriority</name>
      <anchor>1ec820270d7b03c165b04602efb50bcb</anchor>
      <arglist>(SbBool priority)</arglist>
    </member>
    <member kind="function">
      <name>getColorPriority</name>
      <anchor>a5c3d843916ee51349239fd3be82cc6f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>enableLighting</name>
      <anchor>68835613d8b5e490b67c19c9f2fedff3</anchor>
      <arglist>(SbBool flag)</arglist>
    </member>
    <member kind="function">
      <name>isLightingEnabled</name>
      <anchor>fec1d8fe1d9bf0e2e0bf213a436bd5db</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setOutput</name>
      <anchor>772d9f7757a94df924b41a902f0efa7f</anchor>
      <arglist>(SoVectorOutput *output)</arglist>
    </member>
    <member kind="function">
      <name>pixelsToUnits</name>
      <anchor>5035e536bdbf4366cf9ac6367d70c70b</anchor>
      <arglist>(const int pixels)</arglist>
    </member>
    <member kind="function">
      <name>printHeader</name>
      <anchor>bf1106083ea7ea62afd61b3365adf8ed</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function">
      <name>printFooter</name>
      <anchor>4eb81eaf6d8519398f188e0ffc53871f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>printBackground</name>
      <anchor>106f129923de79829598ccb9d3371bd8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>printItem</name>
      <anchor>0d713882c3a01e57593e192c000131c8</anchor>
      <arglist>(const SoVectorizeItem *item) const =0</arglist>
    </member>
    <member kind="function">
      <name>printViewport</name>
      <anchor>c7d4827426855449038b54db05618e68</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getRotatedViewportStartpos</name>
      <anchor>1206a5478b630fcd5f17bd3dc5d9b5f0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getRotatedViewportSize</name>
      <anchor>8c77118544c50b439fba030881b0a1ef</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getBSPTree</name>
      <anchor>a8f4114167b69af0dde3cc8801b6e7bd</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVectorizePSAction</name>
    <base>SoVectorizeAction</base>
    <filename>classSoVectorizePSAction.html</filename>
    <member kind="function">
      <name>SoVectorizePSActionP</name>
      <anchor>f0c98cff3fb31758d762f5fa309ff0fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVectorizePSAction</name>
      <anchor>a7adbb9b58f6a7ca7a926b8ac88f3adf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVectorizePSAction</name>
      <anchor>4a0a6f2a65d59dfac5c59fe711fcadb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>b60d6e2c7826d4265ed3da843deec6bc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>003ebaef012cedabd3fbc89d1c5195c5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>84f7e824ef28fc17eefc8708fe5ddf91</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>0e8895ce07e67d8c184fdf96e278a4eb</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>c4c5721d95f80a21709c57ce19c61333</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>44f9c633dc5ad99eb9962e5c2ac882e1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>e111472a84e4592dbc11aae17f404570</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>ef793a13fef9fc25d2d6a29f7fa716c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setDefault2DFont</name>
      <anchor>a6c5daa662b5c82cfba94c9f5648444d</anchor>
      <arglist>(const SbString &amp;fontname)</arglist>
    </member>
    <member kind="function">
      <name>getDefault2DFont</name>
      <anchor>e80666ed2413de697b0a7025a3e392a5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setGouraudThreshold</name>
      <anchor>cd4450ea6b1803cb530afcde1fb4ffd7</anchor>
      <arglist>(const double eps)</arglist>
    </member>
    <member kind="function">
      <name>getOutput</name>
      <anchor>7333bf9d813750d672e395266f955274</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getPSOutput</name>
      <anchor>0c2561cc8dfd98ede39250afc020f25a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>printHeader</name>
      <anchor>40cea3361f95b291613b753b9716da3a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>printFooter</name>
      <anchor>b9a4f84258fe93e967ae6dd794f412bf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>printBackground</name>
      <anchor>43f6f09e9901aa30dd692f52ca69aa8d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>printItem</name>
      <anchor>c9a2a8c974fb1560481c64706c8d5664</anchor>
      <arglist>(const SoVectorizeItem *item) const </arglist>
    </member>
    <member kind="function">
      <name>printViewport</name>
      <anchor>740f63d51bdecd99b047bb0e4a118f1d</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVectorOutput</name>
    <filename>classSoVectorOutput.html</filename>
    <member kind="function">
      <name>SoVectorOutputP</name>
      <anchor>e6c465187b0997a3ad0d73d84bc9fcce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVectorOutput</name>
      <anchor>b17c6218fe19f5636c8adb2787da056c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVectorOutput</name>
      <anchor>ce1948df767acc89dcc5a7edc2fdd2f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>openFile</name>
      <anchor>549c1a37d36a38f188b767cab728b4af</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function">
      <name>closeFile</name>
      <anchor>358eba46a36e6bb2e3738215e78bfdfe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFilePointer</name>
      <anchor>c926cd1f547382b0cebb351baaa72118</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVertexProperty</name>
    <base>SoNode</base>
    <filename>classSoVertexProperty.html</filename>
    <member kind="function">
      <name>Binding</name>
      <anchor>e1f992082c87c0ecf261cac7966c257f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVertexProperty</name>
      <anchor>9209e60fb34b7cf6bfbce35aa6329846</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVertexProperty</name>
      <anchor>225cc1bc982088407a565f3eb112e800</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>6714047d376e3507fb39ae21f3c558a3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>81b9c33259f49b612c168efe9eda22bc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>1006d35a6535426215e6b992a623cce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>44a1862d5fa778bb76e0c6ef8a35a50c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d228d845cae125f093dc98f247a4470b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>e0cb327fde4ac03f8d6eb537948c3da9</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>8b074e98a7148c647589aeecb6f5ea66</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>441af7fae0de0dde84741a18605ac702</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>ada84a66098cc1db82cfe0adb12ebcf9</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>3dba84f4df710d889a398527aaa1f447</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>262ff8ba5962a9c9c19c9af5f39400cc</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>d062599d13037ae06bd765b459215287</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>vertex</name>
      <anchor>b749824eac1b6d52d1e8423c4c188b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>texCoord</name>
      <anchor>b7573e322d6fa4903c17204c04476303</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>texCoord3</name>
      <anchor>b41630937a56e39988550112cf23b046</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>normal</name>
      <anchor>2c5a32722c7ef09fa10c150d140de054</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>normalBinding</name>
      <anchor>60cf16c8607fe5cd120e1edb6286501f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>orderedRGBA</name>
      <anchor>863e26ab8c979e8e7f99a124add086cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>materialBinding</name>
      <anchor>0d554a89d4e1d378e4049b83357971d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVertexShape</name>
    <base>SoShape</base>
    <filename>classSoVertexShape.html</filename>
    <member kind="function">
      <name>SoVertexShape</name>
      <anchor>a90b9edb2d4d453fb20d1b7468f4138f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVertexShape</name>
      <anchor>510bcea1c8c353b3551d971585ae6020</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>00af434fee3ac123d8d2bbb432e6e339</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>b6fd1500c0d4ee1f5b87e0773ed5c2aa</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>5421531132eb73de8e0b67f14f9d40e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>776f2f9246f9feffcccc8197ae332018</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>4d51efdef9bfe43be21f647da4ed2bb4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>521c79967921b647a5c2e02bc0d608cc</anchor>
      <arglist>(SoNotList *nl)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>22bc8b3ae7009fcbbc5bf99f41ee92aa</anchor>
      <arglist>(SoState *state, SoNormalBundle *bundle)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>f0ae8d1b8709aa495af414ac0bbde3e0</anchor>
      <arglist>(SoState *state, SoNormalCache *cache)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>c1e619dc424153e58f6470576165e4c4</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>shouldGLRender</name>
      <anchor>2c46872df6b144062bcffeb4ba3c10b6</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>setNormalCache</name>
      <anchor>9a99c2660751edb60c49e86c73851b6d</anchor>
      <arglist>(SoState *const state, const int num, const SbVec3f *normals)</arglist>
    </member>
    <member kind="function">
      <name>getNormalCache</name>
      <anchor>f5fbb02a3e906ef3ad5571d0bff4e8a4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>generateAndReadLockNormalCache</name>
      <anchor>32374ed7072ea5ac7fa76ee7e267f69d</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getVertexData</name>
      <anchor>fe7215c3d3203261cdb546352d161cab</anchor>
      <arglist>(SoState *state, const SoCoordinateElement *&amp;coords, const SbVec3f *&amp;normals, const SbBool neednormals)</arglist>
    </member>
    <member kind="function">
      <name>readLockNormalCache</name>
      <anchor>45ba7effb15dde33e0f040c2432c5a5a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>readUnlockNormalCache</name>
      <anchor>2c594579d1fbc7ff57e0070b14d95305</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>vertexProperty</name>
      <anchor>1498e2ce09250c39efc589303119cfb8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLAnchor</name>
    <base>SoVRMLParent</base>
    <filename>classSoVRMLAnchor.html</filename>
    <member kind="function">
      <name>SoVRMLAnchor</name>
      <anchor>a4b1cf45e10bf6bb0841629910d33b82</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLAnchor</name>
      <anchor>7e6f345e2acd07bb5f27c33dc04dd1b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>293cb21c20c925e302fe9a62db3a73ef</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>1b7b85534e7b1bd5874e5ab633995856</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>528dad6f436d1bcdda8298179edd4169</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>18396d94790bc827e9f03c387e54ce1b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>55db1551768a7fe8590ffa2e3b1539ff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setFetchURLCallBack</name>
      <anchor>7e7282394296b7a11b0089cac1f7891b</anchor>
      <arglist>(SoVRMLAnchorCB *, void *closure)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>edacb689989e8f38d45b516c08ba0498</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>url</name>
      <anchor>655d1792053708ef8dd6000d90ae2846</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>description</name>
      <anchor>2e0b8fb3f1918dd509800afdb011042f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>parameter</name>
      <anchor>ed76a28529c2efcc8007cd5996146fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>bboxCenter</name>
      <anchor>b104e4b7a16a9954bd7c8e793a1716f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>bboxSize</name>
      <anchor>fefa17ab1fabdd7fae490bfcd5afd950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLAppearance</name>
    <base>SoNode</base>
    <filename>classSoVRMLAppearance.html</filename>
    <member kind="function">
      <name>SoVRMLAppearance</name>
      <anchor>417578d565012308470a83e6b8974bc7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLAppearance</name>
      <anchor>8957094f29822b1593a128bbfa442344</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>239577587290b4462ee16f2de025dd82</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>a9652c2ed5d0afeb33c1996c69ee6364</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>e6dca56485232f6b0634932852433a9c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>0d024af71506eb3add07a20ba43e6c8d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>85805b5e1a5f2dee78bc6c7d12412b8c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>7f5b88eab2dece2b96e0b27eeff537fc</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>945188dfcb5d4661f9b11bf0637a494f</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>f61ebea276c6fb3b5ac51e8171c05ef7</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>f1df4cdc04488650a9c146a8168b0c2f</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>2fcc1203206c3b08231e059b8d7357e0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>a6475b23b0b43e12826205e7768c3933</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>241f870f2da7f05fe0f1e9b929278355</anchor>
      <arglist>(const SoFieldContainer *from, SbBool copyConn)</arglist>
    </member>
    <member kind="function">
      <name>material</name>
      <anchor>ee92ba2327c810931c1f0417bca4c675</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>texture</name>
      <anchor>5a0927b74cb151cd697d9417cb1bbf2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>textureTransform</name>
      <anchor>e7a7cffab0d28d8e18dbfa20ae55703d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLAudioClip</name>
    <base>SoNode</base>
    <filename>classSoVRMLAudioClip.html</filename>
    <member kind="function">
      <name>open_func</name>
      <anchor>46b5fcd08459dfec28f0fa8d7d3ba5fc</anchor>
      <arglist>(const SbStringList &amp;url, SoVRMLAudioClip *clip, void *userdataptr)</arglist>
    </member>
    <member kind="function">
      <name>read_func</name>
      <anchor>cf0472638c268fcf3da13aea2225c63b</anchor>
      <arglist>(void *datasource, void *buffer, int numframes, int &amp;channels, SoVRMLAudioClip *clip, void *userdataptr)</arglist>
    </member>
    <member kind="function">
      <name>seek_func</name>
      <anchor>138067dd74f05a6d4bd20a29f9cb7674</anchor>
      <arglist>(void *datasource, long offset, int whence, SoVRMLAudioClip *clip, void *userdataptr)</arglist>
    </member>
    <member kind="function">
      <name>tell_func</name>
      <anchor>969c45bea6d98654bb4edd169deda9a8</anchor>
      <arglist>(void *datasource, SoVRMLAudioClip *clip, void *userdataptr)</arglist>
    </member>
    <member kind="function">
      <name>close_func</name>
      <anchor>f04cf2a7a09db57b7caceab9984bcb59</anchor>
      <arglist>(void *datasource, SoVRMLAudioClip *clip, void *userdataptr)</arglist>
    </member>
    <member kind="function">
      <name>getSampleRate</name>
      <anchor>0a3ade86862e47367375cfb9046de1ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>setSubdirectories</name>
      <anchor>11391e4e52d824bceca5429338d1f833</anchor>
      <arglist>(const SbList&lt; SbString &gt; &amp;subdirectories)</arglist>
    </member>
    <member kind="function">
      <name>getSubdirectories</name>
      <anchor>7d63a70fc2c8bd357d0a1ac1fa682546</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>setDefaultPauseBetweenTracks</name>
      <anchor>a15acf976c0462e413024f6532d2df68</anchor>
      <arglist>(SbTime pause)</arglist>
    </member>
    <member kind="function">
      <name>getDefaultPauseBetweenTracks</name>
      <anchor>00ec3dd978d9f5de48c6092a8f002815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>setDefaultIntroPause</name>
      <anchor>9522112aa9f497519beac754cb48c126</anchor>
      <arglist>(SbTime pause)</arglist>
    </member>
    <member kind="function">
      <name>getDefaultIntroPause</name>
      <anchor>246c5356e66bbd7f54563098165f133d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>setDefaultSampleRate</name>
      <anchor>c8dfed91a7c8d3652816bdea0ad05f32</anchor>
      <arglist>(int samplerate)</arglist>
    </member>
    <member kind="function">
      <name>getDefaultSampleRate</name>
      <anchor>f4ac2eb8f480472e38a71c37803ab07f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>setDefaultTimerInterval</name>
      <anchor>2793bb29d1b0c11b9d41771672135fbb</anchor>
      <arglist>(SbTime interval)</arglist>
    </member>
    <member kind="function">
      <name>getDefaultTimerInterval</name>
      <anchor>72354e14cd6e469dd4ab79db48c0f6eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLAudioClipP</name>
      <anchor>73e5a95830e5465e7366d296c94974fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLAudioClip</name>
      <anchor>681f6b1fb4d52e10e4f4b8b6e5af1f64</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLAudioClip</name>
      <anchor>0065953b2802454f61f1de545ff6e06e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>39cde5d95e6436de8941b0952ae7a402</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>2140d1ca6246814d0d997c80accd44a2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>1da0b2094898a9b2562de7a4d8f42056</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>147f9e804a64216f1dbdc04610ab59bf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>2831523aef146478fe77371c6bcafde5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>open</name>
      <anchor>fe6198dde9f8ddee42487853dd3f7eb3</anchor>
      <arglist>(const SbStringList &amp;url)</arglist>
    </member>
    <member kind="function">
      <name>read</name>
      <anchor>606542ecf4f1e95969391017ba60b5a6</anchor>
      <arglist>(void *datasource, void *buffer, int numframes, int &amp;channels)</arglist>
    </member>
    <member kind="function">
      <name>seek</name>
      <anchor>ee030b650cda87dd96cece13b07f85d9</anchor>
      <arglist>(void *datasource, long offset, int whence)</arglist>
    </member>
    <member kind="function">
      <name>tell</name>
      <anchor>0073833e784578df1c14724124c45ba1</anchor>
      <arglist>(void *datasource)</arglist>
    </member>
    <member kind="function">
      <name>close</name>
      <anchor>f403effbd3eabf1067d0f6fb8e8d6866</anchor>
      <arglist>(void *datasource)</arglist>
    </member>
    <member kind="function">
      <name>setCallbacks</name>
      <anchor>01a0a94edea3e02e7daf44a7491f367c</anchor>
      <arglist>(open_func *opencb, read_func *readcb, seek_func *seekcb, tell_func *tellcb, close_func *closecb, void *userdataptr)</arglist>
    </member>
    <member kind="function">
      <name>description</name>
      <anchor>e388c19b9324349d0498bb4ae10ac5ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>loop</name>
      <anchor>3983cd64411e3f64dd3f1af1acffb866</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>pitch</name>
      <anchor>48ba211831de526d07fafb63ba1e9dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>startTime</name>
      <anchor>fbb12cba6b586f0a50707b7dcf330645</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>stopTime</name>
      <anchor>f805356fd4676241006a788327b6a169</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>url</name>
      <anchor>01b0f006a62977e9d1e38145008bd64f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>duration_changed</name>
      <anchor>6fcc85520ddc4a6f399e829e71f6a5f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>isActive</name>
      <anchor>aa6bb5c5a2eb2441de6a9a7cb9de2746</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLBackground</name>
    <base>SoNode</base>
    <filename>classSoVRMLBackground.html</filename>
    <member kind="function">
      <name>groundColor</name>
      <anchor>081530972c4f1849255c3771f4624e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>groundAngle</name>
      <anchor>2c892bca6a935e10b57b27cd64e9a649</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>skyColor</name>
      <anchor>b135162f1ec7af8aceafc05941913b9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>skyAngle</name>
      <anchor>a31b8a83c7c7212c44393fd075861c94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>backUrl</name>
      <anchor>9b5a8083cf4b271e886f3fd62515e841</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>bottomUrl</name>
      <anchor>96353ec2a58e7c0425148dfef45b5f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>frontUrl</name>
      <anchor>ad70af310551a87eccd45c94c24e430b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>leftUrl</name>
      <anchor>cc2960d649865e8b232c992430b3b06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rightUrl</name>
      <anchor>2c478a632395a5d06758196300154172</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>topUrl</name>
      <anchor>dfdf6e05a746c4b8157b5d6c6e587860</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>set_bind</name>
      <anchor>b9ec04f5ceca9a19ed43ee683a248324</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>isBound</name>
      <anchor>5c1ea79c96a382e7076ecaea995204a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLBackground</name>
      <anchor>46c8c0387355bdef6a2c5f9c630bed8a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLBackground</name>
      <anchor>cf0e891be3d85009ee8e7e8a6d8fe4ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>90f42930393d22fc7d20f0ce3aa7c3b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>672d2659495307d5e00df2f05fbfbb89</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>6cd671189b7692a74054f5e9ae01edc2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>39a832937320bbb29586ad353e5b9119</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>da38554e30272825a10cc412f0d9a445</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>6cde19c7dc1529a4500d4ddbdadea88e</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLBillboard</name>
    <base>SoVRMLParent</base>
    <filename>classSoVRMLBillboard.html</filename>
    <member kind="function">
      <name>SoVRMLBillboard</name>
      <anchor>08dab472f7bdae384281d2ee7ce2e1ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLBillboard</name>
      <anchor>fc6bce81f3008844ba466e67a3ec4914</anchor>
      <arglist>(int numchildren)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLBillboard</name>
      <anchor>3268315e8dac8dc83fcc1f25c1bd7454</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>bb787834107b2b3ba9432cde89499967</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>c6e94561ddcef32332f80d6d5b37212c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>20e8fc6ae1fcb30a19765ef776634bed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>8f81025a398e1e7ee5ed1e5a2da63823</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>4716d99326f63c03c475183e027d5992</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>bf9cc28064f5f59499e1fbcb8dae2539</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>749863b7ec3246d97b7f79fe64b09c66</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>1a53d50d15941ca265fb71811d2ed39a</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>b35fecd29163ec9eabcbb3731aa3d1b2</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>09354c5b935b5e1289b5b1c280c29356</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>b3cfc5193d3af8dac900e643004e296c</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>c15402947bc721bb0fa1201457025bc3</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderBelowPath</name>
      <anchor>6f113f5bf223fd68c40c8ab6e9a65722</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderInPath</name>
      <anchor>6caca80902a6213967b3d131a9a97cce</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderOffPath</name>
      <anchor>36685da969f034d678a18efc4117dd7f</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>e6ec8ed8d73ef86d2d6c9e6bd43aaab0</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>axisOfRotation</name>
      <anchor>6eae673b28c15e326a3d69d073ab2824</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>bboxCenter</name>
      <anchor>b2afd5e2a19a8a4ede855060f48dfe35</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>bboxSize</name>
      <anchor>0067a78be925a2142830e5389c672721</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLBox</name>
    <base>SoVRMLGeometry</base>
    <filename>classSoVRMLBox.html</filename>
    <member kind="function">
      <name>SoVRMLBox</name>
      <anchor>c2b3e30fe2dc96674b33b43fffb33e80</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLBox</name>
      <anchor>87d2db3f60a8e7b1b0394bdeac788bce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>68140c25ee7d8076f5aa06b8b0478938</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>1c8b44d2b8d7fc5b1f3b9c0f4b4beced</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>4f6dfb854fabca6972237a8e4de18490</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>75e32be91af1fa94a652405c1eb1f12c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>06d4321982ada4aeb7d28534d35c4274</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>1884075a97693e0fbec5bfe92783a584</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>88f96493cd43da3502e31edae7d5a40f</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>f9623bea3556fb1f77e8296f7c4e6bb7</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>9b64d5788148a620ed2881acea1eeb08</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>bb8921ad351502da43bfc5504fc301ac</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>size</name>
      <anchor>c27b4bfbb66d747b6b1e652d11a55d7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLCollision</name>
    <base>SoVRMLGroup</base>
    <filename>classSoVRMLCollision.html</filename>
    <member kind="function">
      <name>SoVRMLCollision</name>
      <anchor>343d9ad30b1ee63ccffda3e0e44f527a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLCollision</name>
      <anchor>5e842590cdd7c6eaad526e87852596d0</anchor>
      <arglist>(int numchildren)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLCollision</name>
      <anchor>e8ccc84633f6aaa63b2d4c02cd5df018</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>b37ad409fc3bbd8a2ead62b8fde3c597</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>35d03169c5b9c737d70418a694088f51</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>ec0e8c750b59b72ed7bbdbe909573ed5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>18885eb15424480971124febd39068c8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d7ea75988949b4d5ca384ca5cab6dc97</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>a6b0f482087b103163489dd797237381</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>e1c548660fea3409c80584f5acba1d58</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>collide</name>
      <anchor>6e77e76247390a34a71060d22c66674c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>proxy</name>
      <anchor>6b1a5b50585a58d512fa8b83dd36091e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>collideTime</name>
      <anchor>384725f991882f6c089c5d65dd4410b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLColor</name>
    <base>SoNode</base>
    <filename>classSoVRMLColor.html</filename>
    <member kind="function">
      <name>SoVRMLColor</name>
      <anchor>a57ace2f9592c7b32b50ff4dcfbe96a7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLColor</name>
      <anchor>73a919db9a5745ae65b94a726bbaefac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>04d27209198f52bc20b33f40e8cd5c0c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>02bc80c3620e0e509cf95c3ff077f300</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>ea9ff8c5c95e27c8a80e636b537e3dfb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>16ddbd9c181b4997c6438edfe6e1d139</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>716e6a843eb2c8e64a5001c5fd39640b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>227bf6c85766623160b7198e058b43c4</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>9a975c68739022c4c0df2548182ba6ff</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>2ed36744d6c638930a8c2351140ad7dc</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>color</name>
      <anchor>f110fec359048bd1bd2c2b5185b069a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLColorInterpolator</name>
    <base>SoVRMLInterpolator</base>
    <filename>classSoVRMLColorInterpolator.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>978966a369cce80dbd63d1618d77ab3a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLColorInterpolator</name>
      <anchor>7333a749a292966e50bca95349f67d7c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLColorInterpolator</name>
      <anchor>dc07c061f64adb6448d22548e3cd6307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>7b0a3b582ff29b2d1acd6d94774902bd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>78a22bdc5dd097999cfb8e5e852c7b9b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>9e90f8c072d1641f03910b4634db2b80</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>86ed578e8fe84a079a79ecd20573ee46</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>def3a32a199cda512b9be9fe1ef86dba</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>71b0bce36bc768fc6bfe151a152c748d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>874c45dd0bc205fce185748cf44c3502</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>keyValue</name>
      <anchor>e487f470703b111ca01e33f88bab5127</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>value_changed</name>
      <anchor>fd87fcd652e7ce805429a8d721021396</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLCone</name>
    <base>SoVRMLGeometry</base>
    <filename>classSoVRMLCone.html</filename>
    <member kind="function">
      <name>SoVRMLCone</name>
      <anchor>e5a532e32fb09cdca0acdfc45f765fb8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLCone</name>
      <anchor>77352cebd06ce128f49a6f03eb3e532b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>f619f9901cb2015d9c4248d7e5c0db58</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>ce06fc923cd7651482dba6af832e2c97</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>d3762c9494c9e406a5768cdab9670d70</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>8bed471d3cb8d591092fb61752a08d96</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f235159970bbcacc4c5a53562d73de7d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>e67548a0ef64b3850323c28f2e980135</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>9464bf9e1b29830f89f568d30790742c</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>fed3a787fc8b2e1bf913b5f509274251</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>79703bc34113698ec6d2831acf068e1e</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>9e60c2f7e638e2b199a41e2f63314b43</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>bottomRadius</name>
      <anchor>07d7aa8928f151fd07fa492b9ae8cd24</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>height</name>
      <anchor>f8788558b8df13623d16dc76101c6602</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>side</name>
      <anchor>c98131a280461621ef9b3a6b4ca1f65e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>bottom</name>
      <anchor>66faf5d7cf434b6eb65e0a481dde2cee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLCoordinate</name>
    <base>SoNode</base>
    <filename>classSoVRMLCoordinate.html</filename>
    <member kind="function">
      <name>SoVRMLCoordinate</name>
      <anchor>91fa3bcf5f82775a034fae50da4a60ba</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLCoordinate</name>
      <anchor>27b8da97682b4215b2841f994c0bdd17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>6a72649c41cf2e4005b0162388544c1a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>bc0eb5c34d1c0bc379245a4b48aaaffd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>33ba656ada86c8f7fd037c2cbc550171</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>b60cd131282ecc777dc6453de320a9b6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d348f301bd724db7373e09e325f9a280</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>d93e7c962285ae3596efe76c33facbd8</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>ea91a19683cd7eb076fd281dd82a2135</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>a9ae499996ae3bed3b385c289b4452a3</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>2200bf74c4ee14e2a7284ef69f0a94b3</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>e3d15744d8754a9f7e1cf6037e9955d3</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>point</name>
      <anchor>f54c9a9bd64b67d2bd75a26c96c762e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLCoordinateInterpolator</name>
    <base>SoVRMLInterpolator</base>
    <filename>classSoVRMLCoordinateInterpolator.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>f8d4b3617c755491fbb48af231b73a3c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>keyValue</name>
      <anchor>2bc49d844ec54924d9f85baf020f12c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>value_changed</name>
      <anchor>a52fbf1bec210270824db492b6080dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>3a18c72ae15cf5b4eea6ea69e2ae5a1a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>5808f2cf367a7aa32a7bf13d676b7857</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>710158c991678312bd0e26d64ae97e31</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>dfa932ec194c0b5e84f8bdf5bde3d35e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>e332a82e48354ce598e2c4b54218ec3e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>47820aee01c083c6f16178195f26fc5c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>ef5393a6839ea42cf30c5b7998b04077</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLCylinder</name>
    <base>SoVRMLGeometry</base>
    <filename>classSoVRMLCylinder.html</filename>
    <member kind="function">
      <name>SoVRMLCylinder</name>
      <anchor>7a4a4c9f5354e94bf4c4ec523c524f39</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLCylinder</name>
      <anchor>aa12227078228e0152894afc68835a65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>87bdbe425d7f1f08ad012221fc7f6530</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f17ec5036eaae4271620de92a8f969e0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>44c104e4b72d6c780c0477d5ab2fb845</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>4b85ec06e68c979deda2bf837c479ee0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>5f641559800f75c352bfe73648129536</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>d8ea8210837ebdc1cd4f77902d647604</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>f7ec34dbd86cf370a437f70cd7815662</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>d7cc319ca10aff5255b92c161510b4d5</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>af4cb6507ff9993387f37934028b5f03</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>eb815f07e4c983d3745ec073aadfdf63</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>radius</name>
      <anchor>d7ec456db93bf11b1b1e1b8e565d64ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>height</name>
      <anchor>bdbaf27a8843aa6024c637cb20b8fce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>side</name>
      <anchor>97c53d11222ab783ed840a01ef8e958d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>top</name>
      <anchor>82d8042a1ca47200f6e3a3cede8e823a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>bottom</name>
      <anchor>291fe9664fa7e8e693c91547f289fb0b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLCylinderSensor</name>
    <base>SoVRMLDragSensor</base>
    <filename>classSoVRMLCylinderSensor.html</filename>
    <member kind="function">
      <name>SoVRMLCylinderSensor</name>
      <anchor>2983e1866b74fe3e1ce8543c0c3a0d5d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLCylinderSensor</name>
      <anchor>a6bddffcdc70f141eb74022de1fc4017</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>b9dc02a3f8c0f77e9779867231fd8a00</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>3d8422c390616624e1b869adf65a7d98</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>d21180704f5fd426961b0bfbd80c8f6f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>9e1dee9450b76850224fce35b020564f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>7ed1d4e16af8fe757e68468cf29434aa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>bb8b6beb57dd678e33c0ac967454513e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>23f86bac089665f66ebc1039fc5d4e3e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>dce8766b703c151d1dc76f5618f0cd0b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>diskAngle</name>
      <anchor>6d15fcb871dde4d62e821b6f81e6b877</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>maxAngle</name>
      <anchor>a0f8c4c40cd22a4fbf9cbbd841075e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>minAngle</name>
      <anchor>5d1749cd183f854227f98dc9a23596e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>offset</name>
      <anchor>f24c72833855c27d712de7470eedd880</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotation_changed</name>
      <anchor>0b4411df3decbdf8425e052d0b982132</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLDirectionalLight</name>
    <base>SoVRMLLight</base>
    <filename>classSoVRMLDirectionalLight.html</filename>
    <member kind="function">
      <name>SoVRMLDirectionalLight</name>
      <anchor>730050f7bdfd1becfb8f8cd6ba238f4b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLDirectionalLight</name>
      <anchor>204f1d2272828f5d95524d50a5ed9016</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>af29c78f387c864e7dd4ec2d72bf5663</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f914f60619214ba82c32a6d8fd5c0a87</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>8f52fa768ec777fb3b915e98a00af2ad</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f0959a0e5c1536f3257ed61b167f455a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6237601c6c43080f057d0f368c39cfeb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>3f43e4f0902e8fa6d661aa1aac9e1e07</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>direction</name>
      <anchor>54c10b930a2f77e81716323970cacfd4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLDragSensor</name>
    <base>SoVRMLSensor</base>
    <filename>classSoVRMLDragSensor.html</filename>
    <member kind="function">
      <name>SoVRMLDragSensor</name>
      <anchor>b81ead7bfc709ab53c08a690f33099ff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLDragSensor</name>
      <anchor>2ce25dfffcb38ba5aa35736508f3683b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>817744599184c1798beb2d91ce232f53</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>28b79257433a12aca3225472f7076f0d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>cf8d958aeb894e3f89cfb9d517656e85</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>4e393ba3dda48eebe2cd3e8c21a999b7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>4d1edea66748efd9058e42b70c3bf142</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d272656214d031809c1e74e684005d40</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>e1d71390276f2ac5ee1b555e009d8193</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>b1c5aa1d9c137442a015d589368ac446</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>68b183b88bfcee7cd96d9c30c9a65166</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function">
      <name>getLocalStartingPoint</name>
      <anchor>b0e3e00b17f2145a3603b223e0f5cfc1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getLocalToWorldMatrix</name>
      <anchor>b9712abff974c3d92e9cba187468cbc6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getWorldToLocalMatrix</name>
      <anchor>7ca5437c6fede98d5107626a2dc23bda</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getViewVolume</name>
      <anchor>a5a94bd5df3027cf0e3c7e4814ec8c28</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getNormalizedLocaterPosition</name>
      <anchor>06ccdc588c9dba176a1d7499427c9fb7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>trackPoint_changed</name>
      <anchor>c57f2580f6f6bb939683133fde27c478</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>autoOffset</name>
      <anchor>0ed66a1fc9b97c577b2d4be38cd1ac87</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLElevationGrid</name>
    <base>SoVRMLGeometry</base>
    <filename>classSoVRMLElevationGrid.html</filename>
    <member kind="function">
      <name>SoVRMLElevationGridP</name>
      <anchor>5c34deb1505b02a91c0526500d35a9dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLElevationGrid</name>
      <anchor>298f77a2a4ea876ff060fc040dee8508</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLElevationGrid</name>
      <anchor>4d7cb37b53669fae6fcbea5f96cef497</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>34bd6e80cd5c6d79ceb9ef2aac3b0020</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>0381381211267d4488146a9a5586f9d8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>7bef806db7d12585e762f07d42a652b3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>0798a773448ae90f47bfe32aab6d3b56</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>55b069604466574e32eeb11cf3c7b2de</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>c1fda8e60c09a40b2058cbd7d531caa2</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>001c2a58df4e9555288966cdf102c43a</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>0dd0292415102af8593beedb27620c02</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>0deea7273da00e9147825e68d26d591a</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>a198ef2f04ad6b8ca118b664e4574d88</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>654e92d6e16812b4b90157eb948b62d0</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;bbox, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>ccw</name>
      <anchor>ac1bc6b7a8b354e2f6605dcad32e78e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>solid</name>
      <anchor>09278ac8bbb0071a34fc1f8c87068996</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>creaseAngle</name>
      <anchor>86bf224b46866978cbe5365b180c6fd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>zDimension</name>
      <anchor>cb38ce52c15e41f2de672815fb1df9a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xDimension</name>
      <anchor>6c0209bf28d982d8cbe8755d264844af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>zSpacing</name>
      <anchor>4fd1d1f4bff069a5a30d525c9b8c0ee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>xSpacing</name>
      <anchor>0c1d776299001713d3f5f0da994f7eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>height</name>
      <anchor>7c243df28c7fb9aa42df9c58414d2af1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>texCoord</name>
      <anchor>90f090e3e3e82ec6d56ee073637440d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>normal</name>
      <anchor>13dcda5929d09d7a85756c7b64c321ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>color</name>
      <anchor>146f9217088458eb8541073aba23fde3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>colorPerVertex</name>
      <anchor>d9007f182baab51119638e48e208dc05</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>normalPerVertex</name>
      <anchor>236aac9596059ad89860c972a4177f9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLExtrusion</name>
    <base>SoVRMLGeometry</base>
    <filename>classSoVRMLExtrusion.html</filename>
    <member kind="function">
      <name>beginCap</name>
      <anchor>017ff1edabe41ed8da91cdce2b679d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ccw</name>
      <anchor>2e8c4c06b34c0e51a0fa862e61313a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>convex</name>
      <anchor>2133ae23698617edbe13bc516c2c3810</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>creaseAngle</name>
      <anchor>4165db547204653fa55236b988ee6f89</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>crossSection</name>
      <anchor>7221575ba59c467d6a1a9c4c923f904a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>endCap</name>
      <anchor>ba057a3e088414a06c19a11780aee387</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>orientation</name>
      <anchor>620663b4dd5a384975d535eb03fc163d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale</name>
      <anchor>9526e6b55d8e91e7dd222b87ca38bec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>solid</name>
      <anchor>d874a757b87fac1239ad1cd4b1a31db7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>spine</name>
      <anchor>5500f1c21b4b635ec97b882a8afb4c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLExtrusion</name>
      <anchor>2e9871642eafd8329e9348664c2346f6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLExtrusion</name>
      <anchor>efaa2b3a3cc77b2927f7d5ce4690ab11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>c86bc2a586dae90025d75588763dafd3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>481bb397f9059c5ec157a21c059b2102</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>0ddb838c41fdd8aaf8a5af4537de04f5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f78a2b35409c8ef43810562148009812</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>5b2bd9ab027ecd6f599d41956b4505cc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>ed99e266538f5713c292366a289b0c86</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>a9de24299445cd44e5cb1a630b905f10</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>414ae8fb52c0ba0d669a66f854fa5098</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;bbox, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>1a80d77bd5684698e3efcd682234850e</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>98de0dd0d2e6a09c202c76b9ee68a08d</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>createTriangleDetail</name>
      <anchor>3bc79a87d02e1b0aab66db0840ca046a</anchor>
      <arglist>(SoRayPickAction *action, const SoPrimitiveVertex *v1, const SoPrimitiveVertex *v2, const SoPrimitiveVertex *v3, SoPickedPoint *pp)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLFog</name>
    <base>SoNode</base>
    <filename>classSoVRMLFog.html</filename>
    <member kind="function">
      <name>SoVRMLFog</name>
      <anchor>ed43851b1836bacd8e18a82375604205</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLFog</name>
      <anchor>81791fb8028da56408198999652a30da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>86b64b1e5c1b2ae98de332b85cc83eb4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>7e6106f565a8603a0a9fdcc5096a6ede</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>6afe695ed9da3501c536d00aa04186c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>5479894c9e71b0fd4c6f4db5badee57d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>fa43929f58027511feb4e178b99b4ac3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>0ba38452cb86592b7b7a049b3e8e9ccd</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>fogType</name>
      <anchor>6a2f6a009454cbe2357ab3d56fd5b369</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>visibilityRange</name>
      <anchor>78dc52c559aa4ce9abdf182d3d7d2e49</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>color</name>
      <anchor>05c88d07fac245d4b368c4b57abfa3e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>set_bind</name>
      <anchor>3447044972e1a01dbdfc7082a5d8b2c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>isBound</name>
      <anchor>d6dcb8aacac8464162a2042a332a56b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLFontStyle</name>
    <base>SoNode</base>
    <filename>classSoVRMLFontStyle.html</filename>
    <member kind="function">
      <name>getFontName</name>
      <anchor>2a3580053f449d3871e70e18f4513fb5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>size</name>
      <anchor>d4cd395ee297ecfe2e2df3f73f8bb9f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>family</name>
      <anchor>8cc0555f1d44714244a6e1b64966d9c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>style</name>
      <anchor>7b3379a7bbadd2980ce8263bfeaa684b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>horizontal</name>
      <anchor>ed9a17930b4e77b02f212000c9fd48db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>leftToRight</name>
      <anchor>dd1818e567af1e7d5c8de3be327c8cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>topToBottom</name>
      <anchor>a950db2900e6a33e218aab5fbfcc1fda</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>language</name>
      <anchor>a6914c0c779cd07a89203c06522ee426</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>justify</name>
      <anchor>6726021ff0dcea7ac8cf3dd50e587d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>spacing</name>
      <anchor>d8bf2744affa7e33fa890a85a80b816f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLFontStyle</name>
      <anchor>6c6d3389450f8a865abd321f0dec32ad</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLFontStyle</name>
      <anchor>65395159d168be8c0a14822436c555c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>c40be8effbeef755db274f310c171986</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>3028eaae580d695533dd4c0b5279e084</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>fc0c02f262691aeeb31e89507e398858</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>9e93326078e940f5730c7e2a02ed9d6a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>0adfd47fdeead67db9ffea9a58247fc2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>f7dfa1578a47427da42f8d12982987ae</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>089bfac3bacdbbf20783b3d6092ef52a</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>cf3ef515553b0f7b165dddb29126fda8</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>9e65bc769324815287f5cf01fb93ccd4</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>60de83c55666d64959c07c25970fb9eb</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>9de203b2c267f719475eaee9c852bb48</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLGeometry</name>
    <base>SoShape</base>
    <filename>classSoVRMLGeometry.html</filename>
    <member kind="function">
      <name>SoVRMLGeometry</name>
      <anchor>1249729d7829c800928aa609e2273e02</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLGeometry</name>
      <anchor>3ea4a2d656eb563718faa43138666950</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d65270d8591f961b5eea6c922fdec600</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>277a86f904a86382b39b2358ff7fff16</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>e988c13aea732b5a3b8c51bf73e7db47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>810ee0f09c9fc13d4261dbb94b0c2dbd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>4e16d715e085318082f4afb81c9aa5df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>cf9d848589e057362aa463a56f72b355</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>3e2115d010d723bd949974b3856dca09</anchor>
      <arglist>(const SoFieldContainer *from, SbBool copyConn)</arglist>
    </member>
    <member kind="function">
      <name>setupShapeHints</name>
      <anchor>cbe5def39d0a938a1f10b9a204bd3ad4</anchor>
      <arglist>(SoState *state, const SbBool ccw, const SbBool solid)</arglist>
    </member>
    <member kind="function">
      <name>shouldGLRender</name>
      <anchor>7ee86523c13aafaa473184882fe083a2</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>34ce5ee822aaba41ec71875543767ac1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>978c768df07910d74e8086a965fa8683</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLGroup</name>
    <base>SoVRMLParent</base>
    <filename>classSoVRMLGroup.html</filename>
    <member kind="function">
      <name>renderCaching</name>
      <anchor>071498e508620b3377ecd0a0a8ff7244</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>boundingBoxCaching</name>
      <anchor>a5b52c42e661e05aae3dd4228225de7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>renderCulling</name>
      <anchor>169edad2eee311f8bd1d976bb0d2b8a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>pickCulling</name>
      <anchor>77b4ac473a3ab1bcbfb1e4a09cbd6187</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>bboxCenter</name>
      <anchor>fe7c850a2cc633e20ccb929b6f0756fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>bboxSize</name>
      <anchor>7eaa898f776a826ef0c237964a378db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>numRenderCaches</name>
      <anchor>d16e6a5df90e6731ab5f9033ee8c4e05</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLGroup</name>
      <anchor>e981a7a94eae2e1390d2316186196a78</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLGroup</name>
      <anchor>54e9e2a21856da98166e6ce22b0058e3</anchor>
      <arglist>(int numChildren)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLGroup</name>
      <anchor>176c761bf3360780ca214cd3a1d7c019</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>49a3235ab7357005942d3943a57bdc47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>034e62f9963706c7500dabeb4bc0853f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>82965e9593fdd911dccef64249503b59</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>4ed276802849b53d5b699929df2efe49</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>e2fa9d0f47bad53f0b1dde26609670ea</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setNumRenderCaches</name>
      <anchor>359c5178bc0c2879b9163bfdcc867487</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>getNumRenderCaches</name>
      <anchor>691ab624b5fa31a320be9bfd0fa242ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>382b94e1fc0d2a1067f6a4fd3adcd0dc</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>a1c764daa811bb84c33158de30b969f5</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>10f7262f363a3407372948637732749b</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>ef4b3271396fc741c30fdc72ea11ba00</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>d37ce35b5669a9d9db2d4c36b76c9cef</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>4aa4936341cecaa2386d1c2f13b9d840</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>c487dbd5feb7871bfde43e4883fda344</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>5a2c5bd82ca57625c0def475ed4d841c</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>4bfc319730bc1a1fc0c494727dd5b68d</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>125c581459bdbc58572e07a92997b0ab</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderBelowPath</name>
      <anchor>64d868c95ef244957538eb9a32d50eae</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderInPath</name>
      <anchor>a542400a28cffd35942f0e41c24a46fd</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderOffPath</name>
      <anchor>38a393de67a1c424f6c2ed167eecfd44</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>fe1f661e8caae17549c7dd0a303229b5</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>cullTest</name>
      <anchor>051cd9adf1479c2c214aa3597a6e2160</anchor>
      <arglist>(SoState *state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLImageTexture</name>
    <base>SoVRMLTexture</base>
    <filename>classSoVRMLImageTexture.html</filename>
    <member kind="function">
      <name>url</name>
      <anchor>d48bdebbde97eca2b69e142adacdaa08</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLImageTexture</name>
      <anchor>24d473e359ef43b05e49ecbdf7eaee7f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLImageTexture</name>
      <anchor>951821b44ab2be65876383122afed873</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>71b4409cafa78582abc915af6281802f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>d79544483fc1f7a13fd48a3ebeb41fff</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>d8fcf1b3fa1b810b348a84138efc15dd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>184885ae010d0bb7e222c263ca45e48e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f485ecfa26d41a493dde3264dd1525b7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setDelayFetchURL</name>
      <anchor>7781aad2bd49b16da0d53f529021c099</anchor>
      <arglist>(const SbBool onoff)</arglist>
    </member>
    <member kind="function">
      <name>setPrequalifyFileCallBack</name>
      <anchor>0b2aed4d660b05f10294d1796d192307</anchor>
      <arglist>(VRMLPrequalifyFileCallback *cb, void *closure)</arglist>
    </member>
    <member kind="function">
      <name>allowPrequalifyFile</name>
      <anchor>6f58b7ef9258737be5e5024151e83d04</anchor>
      <arglist>(SbBool enable)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>a60a6c1df54e54030b31fe501a9141d8</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>94446f15fe5e43a9e9ae447c1d59fa25</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>ae9ce2c06e5c9808155a61d355cf7aee</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>b8454ef54593b8f012faa255430724fc</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>setImage</name>
      <anchor>6d2e5655db315bc237f30a1ee21a628b</anchor>
      <arglist>(const SbImage &amp;image)</arglist>
    </member>
    <member kind="function">
      <name>getImage</name>
      <anchor>977418b568ca658bafc13897db15e968</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setImageDataMaxAge</name>
      <anchor>ca83156b7b0f93250a13cb980435f0da</anchor>
      <arglist>(const uint32_t maxage)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>ea38331b932611fc4415a1fa2b77a6d8</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>getReadStatus</name>
      <anchor>a7929b2334a4e5bcc7dfb0deda28d744</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setReadStatus</name>
      <anchor>339eb286f857ee408e233bbc0f584647</anchor>
      <arglist>(int status)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLIndexedFaceSet</name>
    <base>SoVRMLIndexedShape</base>
    <filename>classSoVRMLIndexedFaceSet.html</filename>
    <member kind="function">
      <name>SoVRMLIndexedFaceSet</name>
      <anchor>8b3e04e48e99eae472f8a805cac1cddf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLIndexedFaceSet</name>
      <anchor>d50d34b811cad0e4fc01e710d06fd607</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>0dbdc4d47fde96595d9a81c0ac94a171</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>9803bbffdedaba8e97e8b4845057432a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>c6ee46b08fb3a3457e33e810e8713f78</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>fbb7388baac8c6a7493fac204020b67c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>34898bd95e0e69b7a501b7ba2f9b4c81</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>694a42c1bb80a2dcacc71f0c6104f60e</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>26311205f56a075a6fc9adc56152dfd8</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>8cea640c4e28f580b1e2a44b7250ecca</anchor>
      <arglist>(SoState *s, SoNormalBundle *nb)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>7a073913fd0bc70135e3c8900b1252e0</anchor>
      <arglist>(SoState *state, SoNormalCache *nc)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>a4aac1eea940f4993ee10bd5f738163a</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>ccw</name>
      <anchor>f9d6ee8de9b2140bb40d382a4a962c08</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>solid</name>
      <anchor>1aba1f317454f8bf1e4441ca9ce579ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>convex</name>
      <anchor>333792cbe18b684c0a5e930ceed9a901</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>creaseAngle</name>
      <anchor>afc6f44a47e2100e729d1fd8c5c1e7f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLIndexedLine</name>
    <base>SoVRMLVertexLine</base>
    <filename>classSoVRMLIndexedLine.html</filename>
    <member kind="function">
      <name>coordIndex</name>
      <anchor>d827f056df8c4d7995b4930949fe1ae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>colorIndex</name>
      <anchor>d1ad7842df0415bafc4317cf14df11f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getNumVerts</name>
      <anchor>21c8671eda283a50e4ea1f4eff96fd8c</anchor>
      <arglist>(int startCoord)</arglist>
    </member>
    <member kind="function">
      <name>setupIndices</name>
      <anchor>9d5d09d9edf50a7bd355911def002539</anchor>
      <arglist>(int numFaces)</arglist>
    </member>
    <member kind="function">
      <name>getColorIndices</name>
      <anchor>7c66b2f941dbffac8c5069ceb458af21</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>f2d99493a92c63c94ab675e3e04fdbd1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>855d21710dacf33570ab6cf4567442ff</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>179bc61ff3ae255adde5a9320a40a9d5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>65b92b1a00bc408afa053f03188f06ba</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>eb365b5d0440f38087ab7fa4785c865e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>fa4f265c876116d86a593657d5b565e3</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>045e5e972d397119999185a0ba9e4620</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLIndexedLineSet</name>
    <base>SoVRMLIndexedLine</base>
    <filename>classSoVRMLIndexedLineSet.html</filename>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>4f99af4071f0ecb345958e0fa73f4eb9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>433f055c6a9f740d80737617f960e3bd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>636b4547b9c9fd484a46dd1867a0bf91</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>c68b71b0005964a63acccd47b000dbde</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d060703b580270e5d36f316db0d8bb6d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>b17a4616c160c7764f8bf9a8a982a596</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>faec6c637491fb60211d995ada44f0a0</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>d83df5b9824bd8c03254df7a734b0f19</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>82ede737040aac2471ab0a9452e1a8db</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLIndexedShape</name>
    <base>SoVRMLVertexShape</base>
    <filename>classSoVRMLIndexedShape.html</filename>
    <member kind="function">
      <name>SoVRMLIndexedShape</name>
      <anchor>e23b13263a42fb81903d663b7c504e30</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLIndexedShape</name>
      <anchor>262f8271f54e2f0b00dcdb7ae1ade139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>f02e8f5c31df25d96977efd234913ac0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>eab0c29ff13128b6bf6d424b073a131d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>f6e435d9cdbf9a54c56b2105ca03f66d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>1f36908f74ddd7976f6ef5e3e946eb58</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>b036f2721b623b46116cda3c10e320fa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>5facb4facfa571071a762ad613194b73</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>cc94ee30222ef7341e19bc78b9c7ebf6</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>getVertexData</name>
      <anchor>4366e0b58045463f0d01925ff7cce089</anchor>
      <arglist>(SoState *state, const SoCoordinateElement *&amp;coords, const SbVec3f *&amp;normals, const int32_t *&amp;cindices, const int32_t *&amp;nindices, const int32_t *&amp;tindices, const int32_t *&amp;mindices, int &amp;numcindices, const SbBool neednormals, SbBool &amp;normalcacheused)</arglist>
    </member>
    <member kind="function">
      <name>coordIndex</name>
      <anchor>13ea8cfaa4d4d1a6b53744481dcc8018</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>colorIndex</name>
      <anchor>b8fcf28c572590b4af4d3c492d13d35c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>normalIndex</name>
      <anchor>05bf8640e603924c1791e2c5d0ed1551</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>texCoordIndex</name>
      <anchor>fdce0df08372e44c8bda8dd8f52c9dd8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLInline</name>
    <base>SoNode</base>
    <filename>classSoVRMLInline.html</filename>
    <member kind="function">
      <name>bboxCenter</name>
      <anchor>d4e644c34d14a409fd79a311166d54cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>bboxSize</name>
      <anchor>d4701f992d5f25003284339f171b3e01</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>url</name>
      <anchor>709fcb9467bc9dfeb2954927d5e85a53</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>BboxVisibility</name>
      <anchor>d53d79209d6a39c929c3025b673695c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EVER</name>
      <anchor>d53d79209d6a39c929c3025b673695c0d27f7364faedceaf429553ef533d3a72</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NTIL_LOADED</name>
      <anchor>d53d79209d6a39c929c3025b673695c0b438ce0ef5ed762d02fc5ebaf8ef4f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LWAYS</name>
      <anchor>d53d79209d6a39c929c3025b673695c0b33a4dedbe8bc9af4155265e6cc60a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLInline</name>
      <anchor>82eacfcbb552f788942d12ad7a9e38c8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLInline</name>
      <anchor>a07494e11d516189792365ec61eb3ffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>88c55708983fb7f0c0885da2e6d1d3f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>c59c56e139884b66f2c3bd262a36c627</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>aaef827e4258ca287b3c104093c8e0fe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>eff46ce36c83a8c92d91908cdafa00ae</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>2d3aa2b8b810b7a1dcd9d3f0fe73bece</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setFullURLName</name>
      <anchor>346ede7a3b6c43c0fe87dcfe0e6eddb7</anchor>
      <arglist>(const SbString &amp;url)</arglist>
    </member>
    <member kind="function">
      <name>getFullURLName</name>
      <anchor>75642ac91c353f79edc0d4cbdc814190</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyChildren</name>
      <anchor>10885ce92b1214d9ec4e70d52e34b81a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>requestURLData</name>
      <anchor>dde69cd6dbf423b1ff9400e3f2931cd8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isURLDataRequested</name>
      <anchor>120fe959b4ce2822eed7e9566e299505</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isURLDataHere</name>
      <anchor>4797f7eb18c985bda8214a8c286b92de</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>cancelURLDataRequest</name>
      <anchor>6c50befe43cd14353e8e6c4fa058aee7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setChildData</name>
      <anchor>9e216e6d52b239d4b247b92ec86c4175</anchor>
      <arglist>(SoNode *urlData)</arglist>
    </member>
    <member kind="function">
      <name>getChildData</name>
      <anchor>581aaa2eaeef1d6cf07679fb55d6924e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setFetchURLCallBack</name>
      <anchor>95fe7b1543642d09b58685ae80fe1917</anchor>
      <arglist>(SoVRMLInlineFetchURLCB *f, void *closure)</arglist>
    </member>
    <member kind="function">
      <name>setBoundingBoxVisibility</name>
      <anchor>3ab876a0c62b7eca3f84883c14de145a</anchor>
      <arglist>(BboxVisibility b)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBoxVisibility</name>
      <anchor>a6a9c11497cde5008177f4e2ae276252</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setBoundingBoxColor</name>
      <anchor>c74b150391318cc831c5d1c498d6bb8f</anchor>
      <arglist>(SbColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBoxColor</name>
      <anchor>071d0d3ff34f14c33610745a87a01547</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setReadAsSoFile</name>
      <anchor>5f6938836a017fa9b3aa8e6d19d91d69</anchor>
      <arglist>(SbBool enable)</arglist>
    </member>
    <member kind="function">
      <name>getReadAsSoFile</name>
      <anchor>bab96994d641539bf5f1e110f69730c1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>51d655faf4ec1cf2e1c137ba5a7bb979</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>c609228f1f882474a9d797703a0bf9ae</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>425296e7fe6031717012ce8a937c6e18</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>307464c35350f36841f569ae82708e46</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>22abda1f35f196fa0bdb5d6ef7ca1dc7</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>e9f360b1f4671de9bc905e4126ce789b</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>72fe69226a4df3007e622df8b1cce209</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>4c071001c0b16f0755705f4555220be5</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>3c9504d32cd748c1f500a4ab63bd2f3b</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>fd54d9960895b8a6faab83d479262a5f</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLInterpolator</name>
    <base>SoNodeEngine</base>
    <filename>classSoVRMLInterpolator.html</filename>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>a5e18bbbd28251dd6472d447ef383389</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>189bfcc69f78e2c650ca2341548c0147</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>c181412636f85635833b3a92c2abedf1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>97d1ff87867673dda75694bcf0f7e93b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>1cd3f3fb7bc887f6d850d93f78ad8fa9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>2a5c8ba946b3e44ac4d933912ea33e7f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>bbd9384d2f0de58ca7145e9e9e6ebd54</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getKeyValueIndex</name>
      <anchor>2f94367c6c840872d70fb4f3105706aa</anchor>
      <arglist>(float &amp;interp)</arglist>
    </member>
    <member kind="function">
      <name>key</name>
      <anchor>47633457c9b9c0554ca7a7390d4afff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>set_fraction</name>
      <anchor>4daa7dff0ab0cdf122a8bf91a48dfa77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLLight</name>
    <base>SoNode</base>
    <filename>classSoVRMLLight.html</filename>
    <member kind="function">
      <name>SoVRMLLight</name>
      <anchor>e7cd25854743fd0d0174eb8da2909a44</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLLight</name>
      <anchor>1e7df9e0af2184d65a056db03590a65b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>6da43c79b326b68d048a2d6968c4f75c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>dae035f4b1c29bde08ddf6c1c5a61b21</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>ea933685e93cb10272516ba83a3293d6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>fba1a9e71f9ec8879858432bf14fd3f4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a11c994112482b3caf817cf499e4b3c5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>10fa7d89c8c2ea1d89a968ddd65e7332</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>on</name>
      <anchor>0c3fcaae3ef801041794a5c44dcf6957</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>intensity</name>
      <anchor>68f520116001f60b183da454c0ec9664</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>color</name>
      <anchor>9a6da131c1fe87068d2c4ec75c73735a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ambientIntensity</name>
      <anchor>3e1e7c5cbfc6812e544a3a40b8f4b260</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLLOD</name>
    <base>SoGroup</base>
    <filename>classSoVRMLLOD.html</filename>
    <member kind="function">
      <name>SoVRMLLODP</name>
      <anchor>9beb1a76ee77259646675936a280dd8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLLOD</name>
      <anchor>3c8c29830493cc1f5c8f175166b19584</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLLOD</name>
      <anchor>38af223042db40f2dfa34ba1ddf921e1</anchor>
      <arglist>(int levels)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLLOD</name>
      <anchor>87bd06dd557ca768e65cdb7630e32f67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>f98d8e9deba9dc13d796f91011013dee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>5749946d5edda5771a338b5c4365dd98</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>56735f75a46207f68fcd5a7594d22ad5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>6badb5f1dd68bb8036fcf9546426728a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>afee9e26179bdecb60ba7caf980745b8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>affectsState</name>
      <anchor>e70ec41b5e8279bf031a591ce99a0e69</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>addLevel</name>
      <anchor>1e2ad5c6f82d32c3066d4fbe8330168f</anchor>
      <arglist>(SoNode *level)</arglist>
    </member>
    <member kind="function">
      <name>insertLevel</name>
      <anchor>749deaccaaaa38acfe29735cc5da1430</anchor>
      <arglist>(SoNode *level, int idx)</arglist>
    </member>
    <member kind="function">
      <name>getLevel</name>
      <anchor>8d3ac8c635f376a6ce2b6a0bd1683e52</anchor>
      <arglist>(int idx) const </arglist>
    </member>
    <member kind="function">
      <name>findLevel</name>
      <anchor>8cf98d0e993cf23408724565fa0102c3</anchor>
      <arglist>(const SoNode *level) const </arglist>
    </member>
    <member kind="function">
      <name>getNumLevels</name>
      <anchor>f04425dad2e022385187babf1f48d995</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>removeLevel</name>
      <anchor>d8c77c50caddff7b882eed3489c16328</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <name>removeLevel</name>
      <anchor>11dd860b663a28b34a8a594eda301c01</anchor>
      <arglist>(SoNode *level)</arglist>
    </member>
    <member kind="function">
      <name>removeAllLevels</name>
      <anchor>2f2e544eac9881dba8a580e49f659a89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>replaceLevel</name>
      <anchor>6c6cd5a1333466a8c86ba5423968d323</anchor>
      <arglist>(int idx, SoNode *level)</arglist>
    </member>
    <member kind="function">
      <name>replaceLevel</name>
      <anchor>09eaa735b64afb5ed148b7acfb63ec09</anchor>
      <arglist>(SoNode *old, SoNode *level)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>35058363a60e6f6925119ba2ac6f0339</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>a7a402b5baa54d1642081d30d451576b</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>7b71003c93594561420760533767ac68</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>1faec4e304e7c871b3fb36745648a83f</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>80704b90e838b66c0c717a384be83563</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>aa0babfa215a59c0211d0d79e8cf8615</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>61269891f5cc848e4a9db02f6f71552c</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>b66f2f934244fe96fdbf5f0f4f4a3341</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>e62ff630f1c42e50e612d342a1939bbb</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderBelowPath</name>
      <anchor>7bb1b274641b3f71144ceb5af781504c</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderInPath</name>
      <anchor>6b072fbf520fffa2bd563229f578abdc</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderOffPath</name>
      <anchor>e8b7846423052f178a540812fc0c9da6</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>addChild</name>
      <anchor>3eb70ed274f18691523ecc9f8b23b037</anchor>
      <arglist>(SoNode *child)</arglist>
    </member>
    <member kind="function">
      <name>insertChild</name>
      <anchor>de9c137f523fbac7c7e39d9d48f3e6f8</anchor>
      <arglist>(SoNode *child, int idx)</arglist>
    </member>
    <member kind="function">
      <name>getChild</name>
      <anchor>68cb21aa634a329ec8c7a0c56773a612</anchor>
      <arglist>(int idx) const </arglist>
    </member>
    <member kind="function">
      <name>findChild</name>
      <anchor>ca574a6cfb8fc95955ee18a8924618c9</anchor>
      <arglist>(const SoNode *child) const </arglist>
    </member>
    <member kind="function">
      <name>getNumChildren</name>
      <anchor>2c51772052e1d0782168d469230b31e2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>removeChild</name>
      <anchor>92ff6e24e58559eec42c5773e7463b9a</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <name>removeChild</name>
      <anchor>86269fb43724e3528f7a017b0b084fb9</anchor>
      <arglist>(SoNode *child)</arglist>
    </member>
    <member kind="function">
      <name>removeAllChildren</name>
      <anchor>48f274eb9427d79de2b07dad5defc652</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>replaceChild</name>
      <anchor>84b8cef2ce1ef3ae6c51a768a5e9b625</anchor>
      <arglist>(int idx, SoNode *child)</arglist>
    </member>
    <member kind="function">
      <name>replaceChild</name>
      <anchor>a96417982a15191a8e463f6a6a670e4b</anchor>
      <arglist>(SoNode *old, SoNode *child)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>89cfc7842d7c913dec199d06fcc4eb96</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>5eff7dd8da6d92b36e6dae99b1dd9310</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>38653993d875e6af822f36ddb3481388</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>c87ec4a85bee0c8fed5d912d98018c7e</anchor>
      <arglist>(const SoFieldContainer *from, SbBool copyConn)</arglist>
    </member>
    <member kind="function">
      <name>whichToTraverse</name>
      <anchor>acc0c4d2769f6c6e470f70991e45e6e3</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>range</name>
      <anchor>14c8ec09e99f52bb9efba69da0dd5513</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>center</name>
      <anchor>3e42863eeff9bc9c697d8b91894bb355</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>level</name>
      <anchor>9ff23ff7db8b5f2e15811df617ebe704</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLMaterial</name>
    <base>SoNode</base>
    <filename>classSoVRMLMaterial.html</filename>
    <member kind="function">
      <name>SoVRMLMaterial</name>
      <anchor>23ed288fff8e4e1bde8fd232a05556f3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLMaterial</name>
      <anchor>de0bf641e9a97a060406ebb4bd93524f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>7495b8b3ae859cfc25aa5822353b6223</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>1b90e395c93b64b201480d0aedd2684c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>6c4a1de1e92e6019dfdd43a8f3abf8f7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>150c93f5c2efa6b6518e1bfe0b8927ff</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>128bced852626403509daff4c13d9a71</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>4c3840327f1d28b5db3e4eb4e819bf07</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>e7a3aef291e465fc0e52ebaa6b48f607</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>d11e3be9c724d0748ef7bbc0586a5e71</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>diffuseColor</name>
      <anchor>d9d43dc7f80bbff103b38a8083c2b528</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ambientIntensity</name>
      <anchor>30e043072a799eb87e43781a55e3716d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>specularColor</name>
      <anchor>d4b392c9e053271298e44684ec515cdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>emissiveColor</name>
      <anchor>163db289a2fb0035cba31b71040a1dfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>shininess</name>
      <anchor>928cc4168441de4cdc516ad5fc7e9d97</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>transparency</name>
      <anchor>0b314ac72919ebd93fb42ca6c550d86b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLMovieTexture</name>
    <base>SoVRMLTexture</base>
    <filename>classSoVRMLMovieTexture.html</filename>
    <member kind="function">
      <name>SoVRMLMovieTexture</name>
      <anchor>4fbb34a21c72f6ae381b1483a919b0b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLMovieTexture</name>
      <anchor>6121312e226835a8002d4844f8cb6e00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d6bdc8766cf3cf9a8aa5bf03e75ca3a5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>6db49649b96bb34a4b9172c78222a0f1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>8f58502e69fe89145f578c8a9a50c89d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>50a42caa075768d1f411c6eb4d7d424e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>9cb2f06e7f6237c6e3dee5e6e5a0eb8d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>eb3a0a568bcf64cb58f5743c47c497ce</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>loop</name>
      <anchor>6b9b4189ebde712676db7b78bc90c058</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>speed</name>
      <anchor>cfa02921ab72dc8c32a0e4d2e7a78889</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>startTime</name>
      <anchor>1e189e2cb8cae81fd9b6d2ac7507cc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>stopTime</name>
      <anchor>0899b031f73caf2b3994b09edae449a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>url</name>
      <anchor>193b493ce5bf0f4f6f64d122a4db0c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>duration_changed</name>
      <anchor>ce8ff2579ece5418f955fb597ea5f585</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>isActive</name>
      <anchor>878815f9863da1ad61e9d5b98913209e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLNavigationInfo</name>
    <base>SoNode</base>
    <filename>classSoVRMLNavigationInfo.html</filename>
    <member kind="function">
      <name>set_bind</name>
      <anchor>75cd78e114af44fb566365f2ae9ecb93</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>isBound</name>
      <anchor>7aff1d976700226c3f1d3cee0c240ea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLNavigationInfo</name>
      <anchor>4a213ce5033413841168619778e88799</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLNavigationInfo</name>
      <anchor>d8ff7933a47fd08f783aa40c5c317053</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>c2a157ae792d65d7173953b90f4bf189</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>e656a27d06f0837dab1a3ccc4bcb876a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>87f47dcf87624092899a4c34a8dfbec7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>2b4650f508db719b34d368f3dcf541c6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f949560645aa06f4334d13bd71476d1f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>201b32996ec596e737fec44d0e67aca3</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>type</name>
      <anchor>ab4250ecb36c2acf735563b9d91f3d1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>speed</name>
      <anchor>9469e04cba0ceb693faa020e3c2678ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>avatarSize</name>
      <anchor>ade12b9eb610fc44e14bff252e8acad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>visibilityLimit</name>
      <anchor>1ca37a8c22092dbb0706f644d0c0cb2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>headlight</name>
      <anchor>ffb7e09e8acfdeccbbc1d26b145ce2d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLNormal</name>
    <base>SoNode</base>
    <filename>classSoVRMLNormal.html</filename>
    <member kind="function">
      <name>SoVRMLNormal</name>
      <anchor>42455718046082d764d51ab1dc7e7bc9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLNormal</name>
      <anchor>a41b22c76a5a703a6f336d31801792b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d20a05af638d86e55c2c14e4e29eb3a0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>4687590d5b732f0ac7c7e39b0cc97d88</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>5d0662546cd35f1a359bc50f30f7ad00</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>f3ca5649258e56077e08c9421a6b8d74</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f88f6bf9ec23fb93365c77eda3c5e267</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>120b769f40cf2a408d4405b0567599d1</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>b556a653c27b8414b3beccf7c5d75a5a</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>7b1040a9430663c8300a8c6920e86c33</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>fbe8e19a72915db1d5ba83386581a085</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>0101da74d010cbf6bb165cad5144c2fd</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>vector</name>
      <anchor>55a6e5c71e73b78392196491f69bab4b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLNormalInterpolator</name>
    <base>SoVRMLInterpolator</base>
    <filename>classSoVRMLNormalInterpolator.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>d3767891c432a99b4dff1a122596e660</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLNormalInterpolator</name>
      <anchor>46a3501439786e5d82b27fd4c1e2aeb9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLNormalInterpolator</name>
      <anchor>8c063a109fa74191bd1a8bf66d08f4bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>f0e72748f9801505218608d00bb9dd77</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>e3529492618ac554b53f87cbac889130</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>07c908c63daa8f5fcd5f487a84d6d2e5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>3baf730194cebf1b7c179dba422e43a1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>76ecd6de8665752b4c9024a65161e6de</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>ce349e1fde505bd07971a85e794f4d2a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a6416a7e6c399ca7f307bdaeefb8d67e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>keyValue</name>
      <anchor>302dc06fb397966a009775c909cf907f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>value_changed</name>
      <anchor>1fb52ef6b4a01eff067a889d678a0910</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLOrientationInterpolator</name>
    <base>SoVRMLInterpolator</base>
    <filename>classSoVRMLOrientationInterpolator.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>b370671d709e990ef3b35e969e029052</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLOrientationInterpolator</name>
      <anchor>1a9a2a5b16bd6065876e5b12ad5f3348</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLOrientationInterpolator</name>
      <anchor>4c8b2f8ee4ed0e09fe1decc2cc770d35</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>37d1ca265f82f569070c3488e9e7ecc9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>4ae49af20c56c4083dc9e6cb7f87af6c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>387577642fcde15cffb9e33f74e08ad9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>c1185e7574223e6a6dec4f679b9558d5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>679f91fc4ca72da86b29c44f9c5f45ae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>56fd354bcfe9e87a835c73ba425aabc5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>6951f740600a891647e516fee5e6c6ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>keyValue</name>
      <anchor>1b7a951e59b47a4abcfe5523590b08d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>value_changed</name>
      <anchor>c24a4da0cf54223bdbbae15990779303</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLParent</name>
    <base>SoGroup</base>
    <filename>classSoVRMLParent.html</filename>
    <member kind="function">
      <name>SoVRMLParent</name>
      <anchor>89cf05cdf1ba310539cf1edb3088e4df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLParent</name>
      <anchor>e7c5181165358da54af87e33d472dfb8</anchor>
      <arglist>(int approxchildren)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLParent</name>
      <anchor>1483b74f02317680fc8f4b16cee77f4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>fc4ded3ac98475c1195c2e5790130e34</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>bde7eb22215130276b5338c6e05526dc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>f8c692671a489a1a129bd717d86ba164</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>3b25ef46011fbf1ab5a0019d033efad1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>2f0b27464d05b385fb0386c8a66785e6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>affectsState</name>
      <anchor>a4fa98b0faa20e51ab0242b01949d708</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>addChild</name>
      <anchor>cb7adb11e13a8de6c57be39e430c909c</anchor>
      <arglist>(SoNode *child)</arglist>
    </member>
    <member kind="function">
      <name>insertChild</name>
      <anchor>d918c1c196ee41dfdcddf6bf4312cde9</anchor>
      <arglist>(SoNode *child, int idx)</arglist>
    </member>
    <member kind="function">
      <name>getChild</name>
      <anchor>9e3d851ef7fc5ab62e637434276448f7</anchor>
      <arglist>(int idx) const </arglist>
    </member>
    <member kind="function">
      <name>findChild</name>
      <anchor>8f3106836d01e0f778a5ea9b4d224b7d</anchor>
      <arglist>(const SoNode *child) const </arglist>
    </member>
    <member kind="function">
      <name>getNumChildren</name>
      <anchor>b9742a3d2b45ada986861671f5e691da</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>removeChild</name>
      <anchor>89002d27caddd6bca9bf3ff6205326f3</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <name>removeChild</name>
      <anchor>2ff385d9c93c7df1c3f16544c478cce7</anchor>
      <arglist>(SoNode *child)</arglist>
    </member>
    <member kind="function">
      <name>removeAllChildren</name>
      <anchor>029e9112733403d0c1342fe997aa1bb7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>replaceChild</name>
      <anchor>5e9425d0404c4630341c003ebf136a2d</anchor>
      <arglist>(int idx, SoNode *child)</arglist>
    </member>
    <member kind="function">
      <name>replaceChild</name>
      <anchor>79ed1b60a7b753e7f0b4a533aa5c8a22</anchor>
      <arglist>(SoNode *old, SoNode *child)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>f380b90d9d6474ab957bd26decd914ea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>79a427449b3867826e3156b30e76ff67</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>06dc040c6b705d87fa8b84cb30cc6cf9</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>030241c232ab7cb8aa1467f0f44d2268</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>e683b13b028cd2b084c42b22ea119397</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>updateChildList</name>
      <anchor>2a0aca7e6f330a7dbb31ee34131862d2</anchor>
      <arglist>(const SoNode *const *nodes, const int numnodes, SoChildList &amp;cl)</arglist>
    </member>
    <member kind="function">
      <name>updateChildList</name>
      <anchor>c9616e88edc302ca6e85fae3c1bb5971</anchor>
      <arglist>(SoNode *nodewithsfnode, SoChildList &amp;cl)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>f95b404de5f3d2c4ab8d3be675cc3ac2</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>a5245bd14d8b67408253d3b7d8352bdb</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>ee731ea5d71c7f3c24b4e4cb4577dfae</anchor>
      <arglist>(const SoFieldContainer *from, SbBool copyConn)</arglist>
    </member>
    <member kind="function">
      <name>children</name>
      <anchor>e3944cbc5c196fbe4c4a17c11a7aae9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>addChildren</name>
      <anchor>f4f153e36f9cd06bee689ced37b0f5d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>removeChildren</name>
      <anchor>5f0aaa164b318387a7f91f093a2529a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLPixelTexture</name>
    <base>SoVRMLTexture</base>
    <filename>classSoVRMLPixelTexture.html</filename>
    <member kind="function">
      <name>image</name>
      <anchor>96bd637f0c95d61c552293755fe58dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLPixelTexture</name>
      <anchor>910ed2734cd75cc2ae0bf2dc066e39c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLPixelTexture</name>
      <anchor>2925890cc1593c560f2122868682c389</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>62479d7fe04e77ca03c9784e4090a9ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>bb82b582e19c3994232632f79a72a2fb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>d186833b4960ad551c33792ca3f0017e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>5b62f122e0acbebd97efb3cddc53327d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>abde9ceee76157b9068fffe457a769d3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>2b8cfa1ad4847092fa52dc53db06b0de</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>6684d4fc1e01b14ce0e9538fbb0b2b5f</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>0b59f02474c1d7204f79bd065cb0bd04</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>dbe21c02648bbf7345b53033d8b71777</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>6f472aa8548f2d6c8b354811ba78f8ae</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>943b1499dd38021c117e0ce6c024ed88</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLPlaneSensor</name>
    <base>SoVRMLDragSensor</base>
    <filename>classSoVRMLPlaneSensor.html</filename>
    <member kind="function">
      <name>SoVRMLPlaneSensor</name>
      <anchor>c13050161d79c74ddd20309ed9b43cfb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLPlaneSensor</name>
      <anchor>f04632fab17952da62f617c2033d34d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>05b1ead1fc81d5ff056efda52c5ebe99</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>0324713c15914382240bf22985b77115</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>887633999f3fe5c2a61255cb50718f8c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>35360aeed20b5fb413cfb6f609633436</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>1b2cf83e9cf5484018f8777a328f78bb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>3c878a09eeef697d5ad011214d45b9bc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>8f845abc98253d4cd11162f07db57b96</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>57ae32196bbfab5e9912219e80fb0121</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>minPosition</name>
      <anchor>bbb6dca59f18675c41126560404223e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>maxPosition</name>
      <anchor>6474b0b5f30066f6f90333ba7da0fbef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>offset</name>
      <anchor>3d8e7a99d2b6c84c1909fc3f742b02be</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>translation_changed</name>
      <anchor>64ccee5c4fa2d174ffa68540118d479c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLPointLight</name>
    <base>SoVRMLLight</base>
    <filename>classSoVRMLPointLight.html</filename>
    <member kind="function">
      <name>SoVRMLPointLight</name>
      <anchor>6d1b81eb4506550cc2e22538cec2fa46</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLPointLight</name>
      <anchor>af1a9b62ae8b339ec9378f7f9d854644</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>0d88f4d0e3fde22db10171a07203784f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>9a822a9d805870a6d7499a882147b43a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>464e5d81287afd95e2f4b75075ba4199</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>d70bb59c9c011991d6dbb91c4fc4a652</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>e1d844adea9aa6ec0066e7b537479751</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>5c5354e03050e6261f628d71d4ddfb72</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>location</name>
      <anchor>ba9c6333e4e3a012a44a69a945b8b288</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>radius</name>
      <anchor>074b360514876e054a87e56963a8cdce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>attenuation</name>
      <anchor>8cc48a427c0b304a3adc3452decd70d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLPointSet</name>
    <base>SoVRMLVertexPoint</base>
    <filename>classSoVRMLPointSet.html</filename>
    <member kind="function">
      <name>SoVRMLPointSet</name>
      <anchor>8bdf091a45f5b41cd8b6de3bf92877af</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLPointSet</name>
      <anchor>a35c2bd67c1a4848a895f2176672acf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>bc6d07ff1da0c72027d0f7d8a10c94e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>4a91d32c12722afd117732079a066e48</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>755677a93932629ea3750a26ea63301a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>fab7aef2dc3528197202e157b0c014bf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>bcbfa0fd4340e9556979bcec7515368c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>cfa23c82a3ff1d68eebd93318497786a</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>2c643bd2623f74fab65d92f756221938</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>b660849647b657377727e44ff7a4caa5</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLPositionInterpolator</name>
    <base>SoVRMLInterpolator</base>
    <filename>classSoVRMLPositionInterpolator.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>7a3110c489a66fdd32139582741d46ee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLPositionInterpolator</name>
      <anchor>390e1729d6a47998317f4a3aec2820ae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLPositionInterpolator</name>
      <anchor>faf3ff17f1b7c542b032ef60d35826d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>de67c9f2a93f9fe119ea3e81b16b153e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>019335f611c7390fcaec9216860ec3d4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>03f23c5ca7bdfa61e7f7fdf9a12aa2de</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>2a17c84aa02285c63cb2ad167a8d442b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>9425d0a3bf6800e8ddd75ab404ad1c82</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>8ad5dc3f6a3839f9d021da685e329209</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d3993a1cca4d448d43cbadf4f63440d0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>keyValue</name>
      <anchor>8d62a2739d64c8e4f52e7e3158e85312</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>value_changed</name>
      <anchor>cd0923ad96906e42e36220b900430761</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLProximitySensor</name>
    <base>SoNode</base>
    <filename>classSoVRMLProximitySensor.html</filename>
    <member kind="function">
      <name>SoVRMLProximitySensor</name>
      <anchor>8326fbb2a834e38dc51895829df56acb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLProximitySensor</name>
      <anchor>339ad99105319b221a03243509450f92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>741b374245b597a6abf744b82626f1ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>86f12cd68c14da935b1e425faba44800</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>7c77aa35afb4255a27cec002939bfa3b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>7a9415abfac4317565d5eb719025dc6d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f4b4e40d1ffdbd26fd4b0de2cdfc5500</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>affectsState</name>
      <anchor>d771e93a2dbf2186319d13acd78f4f86</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>c425ab9dfbd788b1c9771175a074d511</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>d46798648cf7b65dd3f92bde7aa0d009</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>3e3a3c4650d210cd0a0980f77f4db06e</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>36b70462a7bae7a4bb8edd7630b9cf64</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>c3179d3dd0c2d5d58e6747230a9a7f5c</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>7a6d8c5980991380dff29f484e642b64</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>center</name>
      <anchor>9b182c5c5aa37e178f93f1574d6d8cdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>size</name>
      <anchor>82309d1aacd36886023a76e89d878b94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>enabled</name>
      <anchor>ea108fd2d564ee087e154a8485b74107</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>isActive</name>
      <anchor>3a260f82699ea69b86e23b9588f24fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>position_changed</name>
      <anchor>43b83a5834b222f73647be686a3b9c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>orientation_changed</name>
      <anchor>39221908c61d9c6264880916ba5c158f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>enterTime</name>
      <anchor>d6904ce53a287ecabc2c00026155884b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>exitTime</name>
      <anchor>6fda45f77514b7ae289c498528106cdb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLScalarInterpolator</name>
    <base>SoVRMLInterpolator</base>
    <filename>classSoVRMLScalarInterpolator.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>88b9fcb0f3eff89475a621ba7e965fa2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLScalarInterpolator</name>
      <anchor>0e07a45c36e74a2bcddc59831f9d5255</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLScalarInterpolator</name>
      <anchor>e8d5a27ff7746c14f8149ebd3f102d7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>fca89b5a6b8b03d4aea7092a339a920a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f90e233f982928b26fc461fb73601442</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>fe5c63faa70e340d3a9020503d617b7c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>38345e65cd2ad80d1627e3f21dd818f1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>eef326a5d3750993b8c475b4c2821c53</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>acc547bb86e6f2390b4f8fe5d203acfb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>88d626c01b00a9eaf603e1bb73679097</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>keyValue</name>
      <anchor>6c542ff407ed3e0c6080d0fddf26a31d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>value_changed</name>
      <anchor>b173b9a90723efb65824128506940ac5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLScript</name>
    <base>SoNode</base>
    <filename>classSoVRMLScript.html</filename>
    <member kind="function">
      <name>url</name>
      <anchor>621179d48c70e5de754f42800a612c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>directOutput</name>
      <anchor>edbd03e7766078ab394ef4a37883d401</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>mustEvaluate</name>
      <anchor>06ced3fde9a209ebebd8b36704c94533</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLScriptP</name>
      <anchor>0915945d679c534e663a2192799a49f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>326a4e524d62c11ab79983fc50e1d841</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>9da906018c99f2b506e538835f5ccada</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>9a18456b39587c8806c33f890653a474</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>d49fe6230250f68efa243b661d921eb2</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>a789135e4ea75409aeca898635b2c006</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>427de4f67009a9699fd2a88021fcbcc2</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>57677b15cddecab92db9b70f9954ae21</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>8d0e9936ac612db73baddfee316b6688</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>9b212245ad702d44723855266c8aa434</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>26dd9d8b67363953a5d210ca53eebe33</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>setScriptEvaluateCB</name>
      <anchor>054cf34321d25fd49f3d6502db23d5a1</anchor>
      <arglist>(SoVRMLScriptEvaluateCB *cb, void *closure)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>02518378b8d20f8c8c95352503396819</anchor>
      <arglist>(const SoFieldContainer *from, SbBool copyconn)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>be01703f8592ec2901d0f643112251d9</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLSensor</name>
    <base>SoNode</base>
    <filename>classSoVRMLSensor.html</filename>
    <member kind="function">
      <name>isActive</name>
      <anchor>25997a210de0c27df01a8e0048ade0de</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>enabled</name>
      <anchor>21ebbf02b71384dd07c6a311827d41b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>c11065df09a856e228f40876e61eaed5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>e235dafff0668ce76f40ac41ea105a92</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>574c6ac0086ef5c32aa81f3d61938406</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>c200df8485e91c56f98624451501d1c7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f9a1ece549156f58ea11333418ecbf8a</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLShape</name>
    <base>SoNode</base>
    <filename>classSoVRMLShape.html</filename>
    <member kind="function">
      <name>setNumRenderCaches</name>
      <anchor>6df3d36446c607079b9d0320b10d0759</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <name>getNumRenderCaches</name>
      <anchor>87ff40342dc10e4cc97655530d14e357</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>CacheEnabled</name>
      <anchor>a100ca2f9e5442727d71113adbad85c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>FF</name>
      <anchor>a100ca2f9e5442727d71113adbad85c6f73ea2c1267b746aca51e351eb75236b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>N</name>
      <anchor>a100ca2f9e5442727d71113adbad85c6b10a303d47ab6cf319e43c06719c398a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>UTO</name>
      <anchor>a100ca2f9e5442727d71113adbad85c66f6bba0db240fb8850965caa5bd95936</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e43e0e8eced10f754b903e7105f826d5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>4f30d5be9b3e15354ffd71213dc688e8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>1f4835d2fd8395b090e227163ec75c0e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>378fa27cd774ef66c8f55204c432312a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>abec375a0b9594382ee90ee3f0bffaf4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>affectsState</name>
      <anchor>f4785f6fa15f6ede0e32614bf019e62e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>44bada1e793770bbf4287bd70af15c57</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>31c99006ac4ba31af3a2b86924492f6f</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>369fc93b94f2c8a64683551791859327</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>c181d952d51961823c9a912e9605edca</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>fa6eb0a31271457b6aa46234f5443154</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>072409c5f82a171cbc5fea29a04bd3cc</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>beb1eeddc2c0171221c2411859f1b7d6</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>868d973c10fd6e7a8d7a6631e42d9acc</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>6901aa9ecf865300e85f759f8b3b7106</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>b59872ef4a00f400cb4ba60fe859ec51</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>2c6ec7451a852dc0d0e5828190cbab17</anchor>
      <arglist>(const SoFieldContainer *from, SbBool copyConn)</arglist>
    </member>
    <member kind="function">
      <name>appearance</name>
      <anchor>835cee2dff431953c6ceaa33b817dfab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>geometry</name>
      <anchor>d63c581b3ba3f8deb55dac04d1e43d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>renderCaching</name>
      <anchor>434f71cc04829d7f76d5b88f15293927</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>boundingBoxCaching</name>
      <anchor>4ed3d5c109f15de603a0deb2642121c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLSound</name>
    <base>SoNode</base>
    <filename>classSoVRMLSound.html</filename>
    <member kind="function">
      <name>setBufferingProperties</name>
      <anchor>c8e1e583174f035e5574315d72048669</anchor>
      <arglist>(int bufferLength, int numBuffers, SbTime sleepTime)</arglist>
    </member>
    <member kind="function">
      <name>getBufferingProperties</name>
      <anchor>4fc2a0fb3c0f9b560207362dafc5fd55</anchor>
      <arglist>(int &amp;bufferLength, int &amp;numBuffers, SbTime &amp;sleepTime)</arglist>
    </member>
    <member kind="function">
      <name>setDefaultBufferingProperties</name>
      <anchor>99bf4f13093db6e74ee63fa2d2534438</anchor>
      <arglist>(int bufferLength, int numBuffers, SbTime sleepTime)</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLSoundP</name>
      <anchor>f8c545aaa6fb0c5131b5ffff1a179653</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLSound</name>
      <anchor>4a9ae59b226f467fa7c87c166e9118da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLSound</name>
      <anchor>1626276a9d3a94e7c1628eadfde7455c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>999a13ae90e5a60098857d43c5955008</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>f7947df2296a64e06e5ef286917a50f2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>6af3b3fe15e32b387862cdc98fc6e3ff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>007569680d6e57ed9340d4e23bac56a2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>9e82a0bba226c1bc2971d9f1ccb9366b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setDopplerVelocity</name>
      <anchor>ac5a9efd4b80a91c0864daa717689b73</anchor>
      <arglist>(float velocity)</arglist>
    </member>
    <member kind="function">
      <name>getDopplerVelocity</name>
      <anchor>c9ac9c81c8b2df8bfd5e1777de3355db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>setDopplerFactor</name>
      <anchor>2dc21963e4ff38e8a14cd1fdf810cf23</anchor>
      <arglist>(float factor)</arglist>
    </member>
    <member kind="function">
      <name>getDopplerFactor</name>
      <anchor>e7ec369fdb5cddb608173986032a73bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>startPlaying</name>
      <anchor>9f078df5cfede11fbdd68236a10e7b08</anchor>
      <arglist>(SoPath *path, void *userdataptr)</arglist>
    </member>
    <member kind="function">
      <name>stopPlaying</name>
      <anchor>4dbbd83f86206eaf3c8eb28efda9a9fa</anchor>
      <arglist>(SoPath *path, void *userdataptr)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>335b11c2838a94b5f5ab13f1aeae9a06</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>source</name>
      <anchor>685771e42e9a6bdf169b965aef59a1c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>intensity</name>
      <anchor>5b223d9f5c81c650d837ed3ee3560e25</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>priority</name>
      <anchor>115c4570fa081acb7f2474cbbde42b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>location</name>
      <anchor>9209c110ffd5cf1226fd59b9a8cbba7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>direction</name>
      <anchor>515ec6e04a23f5f7e27768f17fcfa8bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>minFront</name>
      <anchor>6700821eeaf8b1bf1905938103aea9f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>maxFront</name>
      <anchor>688c96684d4a4d85d20a04f965bc6673</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>minBack</name>
      <anchor>7f092c629c91db1c56c5c868c00f5217</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>maxBack</name>
      <anchor>443d32437969a1d6cdc9221ca2f78adf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>spatialize</name>
      <anchor>a6974aef0559a8727b25d399dd78d5f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLSphere</name>
    <base>SoVRMLGeometry</base>
    <filename>classSoVRMLSphere.html</filename>
    <member kind="function">
      <name>SoVRMLSphere</name>
      <anchor>ef280d689481746d878cc4b5837052a7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLSphere</name>
      <anchor>9ea4f57ddc83c13b68a631a9e518ffef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>e36f28facd8e47836db6c2fbb46a00e8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>9dcbf67045382f1274e062066f6be683</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>aa49943798c91a1816415fefddf1f5d6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>55c279dcd80aea42aaf03117c08c85a9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>39485be94d041e41847c5b031d396f60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>50ad0a0cb50bf24475b16be396d60b51</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>45629510a0075f45281259901b683603</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>91fe265dfb51e287e6a30fa82ad36d7f</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>861649a7422cd875170e21a242375978</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>c226a9535711fe98f18ce964ba2adcd2</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>radius</name>
      <anchor>caa2a5f01e870855124e7ba06cb6c7ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLSphereSensor</name>
    <base>SoVRMLDragSensor</base>
    <filename>classSoVRMLSphereSensor.html</filename>
    <member kind="function">
      <name>SoVRMLSphereSensor</name>
      <anchor>9cb07744f654fb21dd5fda1a6026384b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLSphereSensor</name>
      <anchor>4582f1ae7c12de768a57fbd26b80d42f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d7351c4d86775d93aa5eb3be5e17a0df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>30ebdf004530c710b853034f3b12822a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>ff2836dd0dc0d8532aebd7ee3ee72387</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>cd7308d4166afd6c255b9ab229bd1704</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>3f81bed3cea975b058300db63cbb38bc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragStart</name>
      <anchor>b8929f2a862dea0698e4323040589e58</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>drag</name>
      <anchor>e504d4a82c735fa738517bfed397d250</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>dragFinish</name>
      <anchor>40e81d1963f438f22b65139dbd17caec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>offset</name>
      <anchor>950813e99e9be0ab8d651a540084f2d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotation_changed</name>
      <anchor>bbf9c6ff2fce9731ccb05ff1d4f7badf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLSpotLight</name>
    <base>SoVRMLLight</base>
    <filename>classSoVRMLSpotLight.html</filename>
    <member kind="function">
      <name>SoVRMLSpotLight</name>
      <anchor>5a1ab4cd021acd363e98e6a62332bc1f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLSpotLight</name>
      <anchor>d7c7c4b355176325e2ff7a991d303f7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>519676a134f4023d5b972d51a7e55686</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>8ef4cfc4b29cffb81b7e8a91eb7860b8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>703adc41daf9559e6d8a0409c215ab41</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>89999d05cd6774eb276acd134cc5a0ea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>b4165f5f822a0e9e47fb8fa3202fc5bc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>5e22cfdaad451532cbb40407cdacd784</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>location</name>
      <anchor>3896ebdedc6d67089eaf5df7922761cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>direction</name>
      <anchor>8b289d54536e854c2574a2023dec131d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>beamWidth</name>
      <anchor>56f645be340ce62bd7a49a1f180fc0e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>cutOffAngle</name>
      <anchor>cc177d979682d8670ebe32568500cfd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>radius</name>
      <anchor>aa107c11f195b6fb6d28dfb3e79d9a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>attenuation</name>
      <anchor>754ef2d3392bbcfddff4cab7fd909559</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLSwitch</name>
    <base>SoGroup</base>
    <filename>classSoVRMLSwitch.html</filename>
    <member kind="function">
      <name>SoVRMLSwitchP</name>
      <anchor>4aeff7adbd5700f84dc4c3b004ce2eb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLSwitch</name>
      <anchor>9dea685c0d06cf41bacdec8892bcbed7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLSwitch</name>
      <anchor>62fc7b8bd01663a932f043654ff8e74f</anchor>
      <arglist>(int choices)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLSwitch</name>
      <anchor>7249d65a36a381f6671d21abbffdc69e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>270b661e48277c406d678d908b2f6a57</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>bdcc0fda079b5de798a3c0db61841590</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>d9af8caf585066186bfb34b47d61ab57</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>9913501e8080c581cca20d0f642c5fd3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>71b3f743d36bf9dfbe2634da92c4c817</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>affectsState</name>
      <anchor>5b37eca81ea768c5821b1aefd24a2975</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>addChoice</name>
      <anchor>f496e1b610956686a1d75f84de5c510a</anchor>
      <arglist>(SoNode *choice)</arglist>
    </member>
    <member kind="function">
      <name>insertChoice</name>
      <anchor>a146c9cde3bad8469d0eb2835cd31bb0</anchor>
      <arglist>(SoNode *choice, int idx)</arglist>
    </member>
    <member kind="function">
      <name>getChoice</name>
      <anchor>ce13ad843d4ca4064309073736142383</anchor>
      <arglist>(int idx) const </arglist>
    </member>
    <member kind="function">
      <name>findChoice</name>
      <anchor>15ffb06579f339fd4fc7e9252e36f499</anchor>
      <arglist>(SoNode *choice) const </arglist>
    </member>
    <member kind="function">
      <name>getNumChoices</name>
      <anchor>e54398b8515c9a305da37b59a6fbbb8b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>removeChoice</name>
      <anchor>0d57fa28d593cb0c39ebc1822ee17f2a</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <name>removeChoice</name>
      <anchor>fc874289ddfe98c17e9fddcbf1157c60</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>removeAllChoices</name>
      <anchor>c2b7b540cb33f1fcf8a3a5978758ef76</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>replaceChoice</name>
      <anchor>456f2b881d245eb31431b661a863a696</anchor>
      <arglist>(int idx, SoNode *choice)</arglist>
    </member>
    <member kind="function">
      <name>replaceChoice</name>
      <anchor>aaff685a4bf5360439e9fbff6b066163</anchor>
      <arglist>(SoNode *old, SoNode *choice)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>5863fde32a26cd583a8030ce62ec7d5d</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>23a4cdac8e73d452b080b0ed555bbfd3</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>3a9778ddb4d8bafc61c263bc92b91a9b</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>cb2421714b1d2a4bf93a3e209f141286</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>d04de20135b1e790f7eba67b90e7c59c</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>73a8ef8be23b20fdb5aa0bf2b5fd5320</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>b65fdaf801d57086af9a3f60266b8ac8</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>967b2c76de7638a257741823574c9cf2</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>f7dc296d70c5cfe4fab3344f8d2d3554</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>c69430a5dc63039071d76a859be0fcb7</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>addChild</name>
      <anchor>3017ebafd8f7dd02f5e9efcb66b4bfd1</anchor>
      <arglist>(SoNode *child)</arglist>
    </member>
    <member kind="function">
      <name>insertChild</name>
      <anchor>513f49cf5455224d223cc9a57f83cb72</anchor>
      <arglist>(SoNode *child, int idx)</arglist>
    </member>
    <member kind="function">
      <name>getChild</name>
      <anchor>c4e891153096046d887bff19a02074be</anchor>
      <arglist>(int idx) const </arglist>
    </member>
    <member kind="function">
      <name>findChild</name>
      <anchor>56fbdc24ad7a327b64605f1dd511b6bb</anchor>
      <arglist>(const SoNode *child) const </arglist>
    </member>
    <member kind="function">
      <name>getNumChildren</name>
      <anchor>91217822b0d9b714ca26123656543125</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>removeChild</name>
      <anchor>12a40748ec5418f66409b0e66282bb80</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <name>removeChild</name>
      <anchor>404add4adc63d92e6ac6c35ef91fcd06</anchor>
      <arglist>(SoNode *child)</arglist>
    </member>
    <member kind="function">
      <name>removeAllChildren</name>
      <anchor>0ca0f303931964dc88b9278bff2cf860</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>replaceChild</name>
      <anchor>8c416686ff8e7a8a637bca34623c93e1</anchor>
      <arglist>(int idx, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>replaceChild</name>
      <anchor>aaf8e8ece3f525432ddf19d6c2cca567</anchor>
      <arglist>(SoNode *old, SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>b02edeec051e30254a538f6490f4b25b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>e0b74a0d6fca26becbf5aceafb5b486f</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>1747c3853571d9539dac98f1e28051f1</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>75ba44d55865eb2a931d103440f23655</anchor>
      <arglist>(const SoFieldContainer *from, SbBool copyConn)</arglist>
    </member>
    <member kind="function">
      <name>choice</name>
      <anchor>e2326c51230aa566dd08d9c8de5aa890</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>whichChoice</name>
      <anchor>4fb7e1426017494a24668de069cf2901</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLText</name>
    <base>SoVRMLGeometry</base>
    <filename>classSoVRMLText.html</filename>
    <member kind="function">
      <name>children</name>
      <anchor>aab208995fa215e391588a6007a7db3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLTextP</name>
      <anchor>efb6d314c0c5100edad03c3ef7298862</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoVRMLText</name>
      <anchor>77979d2767cb56a70cb7c994b1431bc6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLText</name>
      <anchor>fa16d614feb3d6f2ed3205e1b9f86f82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>514d0a87005c81387f3fda0b6b86685e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>48554f8a090ea9b973774e01e4c4e681</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>6eccbe55d38ca3c18e2b0e65a35fdb22</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>9660a084b75893e2663580528f56b937</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>c826b7e58f2a9f15673edbb2b2d27867</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>abb3f2afe8e59566357880218900650e</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>3c4b5c4e94a67cfa350545cfbb2bef75</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>9111dda6cb1b968fefd3991f77f71030</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>6b9ac47daa16d84dd0cf8a16c8a60cd1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>ff8cfcc781d1aeca2618e523b1ac2953</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>generatePrimitives</name>
      <anchor>77f1cea6757484969f75b806f1ed43c2</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>string</name>
      <anchor>24efee6697822a0704fd652890a37003</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fontStyle</name>
      <anchor>7ee0fbdb88554b32a90333b3d59d2834</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>maxExtent</name>
      <anchor>32da788e819e214fca0a7072f1c799df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>length</name>
      <anchor>a6efa406dfdac2583b6ea1498f9b2cba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLTexture</name>
    <base>SoNode</base>
    <filename>classSoVRMLTexture.html</filename>
    <member kind="function">
      <name>SoVRMLTexture</name>
      <anchor>0d938c35a057abe4b198f964ae605184</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLTexture</name>
      <anchor>0334b089e09ce53d26da8d29dcac794f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>d76e1ebf29a9290ab337859320995ff9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>a4ca99e24b0cc43c779e3fbcd65e2a83</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>4294963b186f8c80d84fdd0133de7273</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>af6224eb1980bf648a1f3816105104eb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>9f29e4da571cf47e8f426eceefb48b0a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>0f0758e5695a7526b6785220f97d2a14</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>repeatS</name>
      <anchor>0fc43d8947f2ff636c751b1160987827</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>repeatT</name>
      <anchor>e876c98d737a286575cbf563b801717f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLTextureCoordinate</name>
    <base>SoNode</base>
    <filename>classSoVRMLTextureCoordinate.html</filename>
    <member kind="function">
      <name>SoVRMLTextureCoordinate</name>
      <anchor>6837eb3bfdbd2299c33755a5cc0d1097</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLTextureCoordinate</name>
      <anchor>183dd50c307a940c632260da6ec6b61b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>edb1255ef795d9d529f930169b54ba19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>5cd5a05dfa911b65080ade86a7a5a3db</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>88c750c2fb0ef9e5b6ae87075f85da3c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>238c344ed2e1a77683e2216a712b18d2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>9d6cd081bcce2ec9b16855970a499003</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>1fdb77be01dda0621eeda40f3597bc07</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>8aa5ea1d5842fe487242b2b6722b8c1d</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>04e74eb56394c7b9a18857655e00eef5</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>51af0ae14a53a6e10e2323b2eabe4097</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>f63998c0a1795231c91e0ef33d687aa9</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>point</name>
      <anchor>bf43b93738a77d2f86961cabf5da9a77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLTextureTransform</name>
    <base>SoNode</base>
    <filename>classSoVRMLTextureTransform.html</filename>
    <member kind="function">
      <name>SoVRMLTextureTransform</name>
      <anchor>2bdcb78ccdfc547f1b4fb106c9dedd27</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLTextureTransform</name>
      <anchor>52cbf48349b3a7c97a92ecf3df4323eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>ad6a2d16ba1e95c5b748b93aec13a195</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>9a63c754902fadeab530f944963bfd0c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>40c5272d8ab8dbad83be6db819adea35</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>9d4c96c2cf863c4800fba626202e41c7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>3da61d8143eec4d7a4208978883cd8e1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>bf80a46c63d22bb9b9a63ae5592b400e</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>70b2e55c6e063d03263d381ed563906e</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>124ae5f5eb65094a21f6601bfc36ce93</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>d7fbc9baa27903b2db0c2e33063fa188</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>d095022ee4ff1710625490e94ef1ef9a</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>9489cb29c6f65d648f18d03fea090921</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>8ef14f4f774d62843f0fdcd91836ea45</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale</name>
      <anchor>d6e1773507743176e2a34dbf69ffaa96</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>center</name>
      <anchor>66759449706ca769a176ee7c8e6f286a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLTimeSensor</name>
    <base>SoNodeEngine</base>
    <filename>classSoVRMLTimeSensor.html</filename>
    <member kind="function">
      <name>createInstance</name>
      <anchor>09807cdf2282cdee07d5b7a75254a2d3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLTimeSensor</name>
      <anchor>c1de6c45b1af62ac3513c6450c8bdb5b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLTimeSensor</name>
      <anchor>48f1aa332d1a4096f1af81873372df2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>35c03908a23354849b2e94b29a31f0b9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>cfe63d2d381f37ff04f14e94915ba7bf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>0ca67f2633ce6b8d1c28b30a86873f95</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>68e4ae3683d13809956a09dd4d7b868f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getOutputDataPtr</name>
      <anchor>df549750380af3540ddd18e37473a679</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutputData</name>
      <anchor>d8ea39995833b2fd6a9eac47f089514f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>84e247bebad65052c7a715d032501632</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>43e28ac567f3dbd52bb0daa9c2404a14</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>c24136e7d2d62ef96fc389addf57c05e</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>write</name>
      <anchor>9cff8780e9b658c8d86ea38c079b68c5</anchor>
      <arglist>(SoWriteAction *action)</arglist>
    </member>
    <member kind="function">
      <name>inputChanged</name>
      <anchor>f1fda6386455ab736f53544e422cb720</anchor>
      <arglist>(SoField *whichInput)</arglist>
    </member>
    <member kind="function">
      <name>cycleInterval</name>
      <anchor>3a8298b9d2d313c60458e536dbc34351</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>enabled</name>
      <anchor>ba7e950b3889357709a82c9f0dba78ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>loop</name>
      <anchor>0d9ab093795a77626fceeeab84bc1810</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>startTime</name>
      <anchor>58ee7997b2ef219cbc653d85876d41e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>stopTime</name>
      <anchor>08037d651cb86af0bf55722b21a18a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>cycleTime</name>
      <anchor>7df2018e3b2b9aa234a5a5fb93d15f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fraction_changed</name>
      <anchor>5b43d3af42e796cd540c11c25a0cd71e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>isActive</name>
      <anchor>86d73335623a21e2465f82ef51a83a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>time</name>
      <anchor>b05b7a84ad2d7e3acb8a631c1c0e7401</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLTouchSensor</name>
    <base>SoNode</base>
    <filename>classSoVRMLTouchSensor.html</filename>
    <member kind="function">
      <name>SoVRMLTouchSensor</name>
      <anchor>277b91154f08a2fcdcf9aa198814b123</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLTouchSensor</name>
      <anchor>1d91955d7b6c97ca15fc739c9cc3129d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>483441efb92ed03b657493b4c8ba86b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>a4cf3913e8fb8445164fa2a5be3594a6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>0195376dcaa5c4671fb323ed4ff091f5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>a1c8408ec6ca9ea040167d835246c4ea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>814a65bfb55ce4003aead80416cbf769</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>affectsState</name>
      <anchor>e78f8e295ca34fcb84a4dbcc29d63488</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>509a2c47d551c5db32890a2480351bb4</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>36374ddd1ad625f947de592f53a491ef</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>enabled</name>
      <anchor>fe274706fb309fcf2664eaafb81ebf70</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>hitNormal_changed</name>
      <anchor>01bcc31ac42f8a1d43a1e675eb2cf279</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>hitPoint_changed</name>
      <anchor>b3e9a1a82f45e33b97d63e34fd3936c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>hitTexCoord_changed</name>
      <anchor>20b8523cda40ff9b0284d51de72d66e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>isActive</name>
      <anchor>f54c5568293044f35dd9e06056effaea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>isOver</name>
      <anchor>ee31622ad3ada5b9eeca2a8cd7061695</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>touchTime</name>
      <anchor>fc10b0a9c32ea599619145ea7a0a39d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLTransform</name>
    <base>SoVRMLGroup</base>
    <filename>classSoVRMLTransform.html</filename>
    <member kind="function">
      <name>SoVRMLTransform</name>
      <anchor>3cb0427cba49d7708dda0e5101920532</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoVRMLTransform</name>
      <anchor>6060b4444e645193bf731d638635c2db</anchor>
      <arglist>(int children)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLTransform</name>
      <anchor>ca09ba0e575d683e9d46de5f666f84e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>5cced4c008a3ea0a55d84bcdf46517c1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>8c820562d6269895df6bab91e354470c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>6e4caec5a241dacf6a00964818a41e30</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>2a36588629722606b65ab6fa3a95392f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>fe226ca5b7b934154b92e7ca6a3c2d7a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>pointAt</name>
      <anchor>3b4d43d58098348f458a81dac7320841</anchor>
      <arglist>(const SbVec3f &amp;from, const SbVec3f &amp;to)</arglist>
    </member>
    <member kind="function">
      <name>getScaleSpaceMatrix</name>
      <anchor>b62972571407b96d71567fd5788c5167</anchor>
      <arglist>(SbMatrix &amp;matrix, SbMatrix &amp;inverse) const </arglist>
    </member>
    <member kind="function">
      <name>getRotationSpaceMatrix</name>
      <anchor>3a13086a30769b7465de569b633acaa5</anchor>
      <arglist>(SbMatrix &amp;matrix, SbMatrix &amp;inverse) const </arglist>
    </member>
    <member kind="function">
      <name>getTranslationSpaceMatrix</name>
      <anchor>e20b9cb42d7845ef506ae0c94dba71d3</anchor>
      <arglist>(SbMatrix &amp;matrix, SbMatrix &amp;inverse) const </arglist>
    </member>
    <member kind="function">
      <name>multLeft</name>
      <anchor>57b70254d7fe1c0b51df9dc42796b250</anchor>
      <arglist>(const SbMatrix &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <name>multRight</name>
      <anchor>727b2b8c7d1563a561cb1af010b3418a</anchor>
      <arglist>(const SbMatrix &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <name>combineLeft</name>
      <anchor>ca5613fc1e55d68abd07475faedf1910</anchor>
      <arglist>(SoVRMLTransform *leftnode)</arglist>
    </member>
    <member kind="function">
      <name>combineRight</name>
      <anchor>5d63f393d1b95c3f9400e92c177b9e44</anchor>
      <arglist>(SoVRMLTransform *rightnode)</arglist>
    </member>
    <member kind="function">
      <name>setMatrix</name>
      <anchor>ace4bf71fcd41d230f666db71a01cfa8</anchor>
      <arglist>(const SbMatrix &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <name>recenter</name>
      <anchor>58aab05b8e75a5c4309624a6fd19e67c</anchor>
      <arglist>(const SbVec3f &amp;newcenter)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>882fefe64f7f65cb2ab4fb760e831a72</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>463543c9e4f5b056596cc53e6e32674f</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>5b25af4ac7ba1f9c9ce36a90364a7ef6</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>2d74ab2bb223438e64e8eac4bb4fc9e0</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>rayPick</name>
      <anchor>cc8a408b0bea2319c61ac88c3b4dc7f5</anchor>
      <arglist>(SoRayPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>ccb941a7846e2bf61f13fd20affd3c00</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>22c2ece60e28f91677c680392dd58357</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderBelowPath</name>
      <anchor>14fc845984e6b21de866a570e2c23b9b</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRenderInPath</name>
      <anchor>b2066d0aed37b9e9ddcbf2703740377f</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>c4a4f72d9accd8bf0194126e2a0d12fe</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>translation</name>
      <anchor>6bcd4143e1f5dc4a2b2e1d987dac0440</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>rotation</name>
      <anchor>ddc3a0539bed7ddb64e3a0b62f9443a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scale</name>
      <anchor>d6d1207e80e88bb0f38f346e9af6a54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>scaleOrientation</name>
      <anchor>c94e40d4509152e45fe352f5c295f5b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>center</name>
      <anchor>25c026af634a91cb9cea7ec6bf5a6e6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLVertexLine</name>
    <base>SoVRMLGeometry</base>
    <filename>classSoVRMLVertexLine.html</filename>
    <member kind="function">
      <name>SoVRMLVertexLine</name>
      <anchor>368ba67a0b9f4bf0e80c182c94863153</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLVertexLine</name>
      <anchor>c62b078b9f52d4f865ecbdba7b1fa58a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>87bec4c18082e3543d89d4f0b812d9a2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>b4b0ab0d51861bd605b22ae37cc771d6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>642f9a2b291f514e8ae1aa5d6b05bf43</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>b71a82ceea4aac430db284c72a8bdfbf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>f76fab3ecd3a33337ed11f600b291580</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>78c1d5abc55a7d5d5c1c41d128947969</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>ca38539875d2b1134c91669686f53400</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>3a1c8fb8d522df83ff486e16850f7699</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>831788b396b8f8199c19a685f9a6edcb</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>274b41d83192c82176ff2243b84d67bd</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>136970b38fc84f03cec183966ace2aae</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>shouldGLRender</name>
      <anchor>acdf4937e9ea4f5017a2221789faf2fc</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>coord</name>
      <anchor>62b406c7e856e0be8362d81647f05ce7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>color</name>
      <anchor>4ef412d7e14f577838f955a57848d3b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>colorPerVertex</name>
      <anchor>0fe2645af8007a153590728b3fe1d762</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLVertexPoint</name>
    <base>SoVRMLGeometry</base>
    <filename>classSoVRMLVertexPoint.html</filename>
    <member kind="function">
      <name>SoVRMLVertexPoint</name>
      <anchor>466706f70b4960d45bfcd1f57a365b95</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLVertexPoint</name>
      <anchor>03b0a60eafd3f663e2034b503ab05ea4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>4ad35cc2a4ed8ae8b90f19788f45cf32</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>509f00056a7f85510fbdf446006fc3de</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>fc4cfbdea4ef9e52d8a922febbd8c0c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>a3a86d18004549994c8ffb0f97beb7c3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>09630f289496ffe234414c4ea6b37f9c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>dce69e91b2a95860f948b18956c8d72d</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>33a5351f7f0cbaca0cae4d206642ff84</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>a2cae0b739e41ed480d5e2c1e6741b85</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>9b2dfaf059262bff209aeb47a524ff83</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>c0f7d2b6b079a4480525243f200ec51e</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>3263cefd6dd95d1ef182e5074d24f912</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>1ba3270b1f95847d8c4ccb414fa5985d</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>shouldGLRender</name>
      <anchor>1e60d5dc1d50975264122ba767a90d92</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>computeBBox</name>
      <anchor>0c04dccbaa54eaea471d8727692ed838</anchor>
      <arglist>(SoAction *action, SbBox3f &amp;box, SbVec3f &amp;center)</arglist>
    </member>
    <member kind="function">
      <name>coord</name>
      <anchor>63d8e420f283d419afc2c69c69738e8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>color</name>
      <anchor>28bcebbf0abeb58ae8b13a5f3b2e5800</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLVertexShape</name>
    <base>SoVRMLGeometry</base>
    <filename>classSoVRMLVertexShape.html</filename>
    <member kind="function">
      <name>setNormalCache</name>
      <anchor>5402505028b7e5f87c1c925aeec92d48</anchor>
      <arglist>(SoState *s, int numNormals, SbVec3f *normals)</arglist>
    </member>
    <member kind="function">
      <name>getNormalCache</name>
      <anchor>b3e5c406efa61e1202bf6844e5af4cf5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>SoVRMLVertexShape</name>
      <anchor>e840f9b64433ed85ef747cf4f9706745</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLVertexShape</name>
      <anchor>97b1c04fbcf93b400eef6243935f661b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>822439df383c8b3b604b1652e784070d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>1ca94fadaf2e1186abc0ce82ebc95409</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>7c3890f5b623a22be202d4f78c8e3609</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>2f8f96060839bcbdf33e636a44be5de2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>be1bcc39cd58f95581a4f17180785b15</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>b5de75bbe9b3c7b7eb410a97ec1c754b</anchor>
      <arglist>(SoState *s, SoNormalBundle *nb)</arglist>
    </member>
    <member kind="function">
      <name>generateDefaultNormals</name>
      <anchor>4b7670362a45993067b59eeaf3ae12d9</anchor>
      <arglist>(SoState *s, SoNormalCache *nc)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>a60494383ef2d6304cd5538341c7b4d8</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>584e3bf7d8addc544062e182e97043b1</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>396ca6a13f9b146f68484c7674159cc3</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>ea258e23f77795a0baa961f72cc7fd7c</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>e9508b5fc768c0fa47f90d2b8dbda42e</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>notify</name>
      <anchor>d2e438368abe6fb40f4c912490e176cb</anchor>
      <arglist>(SoNotList *list)</arglist>
    </member>
    <member kind="function">
      <name>shouldGLRender</name>
      <anchor>68ac7889b1a9aada07385b60ea123b11</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>generateAndReadLockNormalCache</name>
      <anchor>5d18b31ca5a3c5a1758c0bb45b756f6f</anchor>
      <arglist>(SoState *const state)</arglist>
    </member>
    <member kind="function">
      <name>getVertexData</name>
      <anchor>029f30862c97a1be285faf4baf997f07</anchor>
      <arglist>(SoState *state, const SoCoordinateElement *&amp;coords, const SbVec3f *&amp;normals, const SbBool neednormals)</arglist>
    </member>
    <member kind="function">
      <name>readLockNormalCache</name>
      <anchor>820f747097d2c5c0cad633a3c1cce62b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>readUnlockNormalCache</name>
      <anchor>edad4ad2668360229fc6a50b500101d8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>coord</name>
      <anchor>7c717d8590b4b4c7aa949cbb450bf4d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>texCoord</name>
      <anchor>46fabe9d5b58ba72d629d8bd6a634889</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>normal</name>
      <anchor>0626b40f24dc971527035c680af52813</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>color</name>
      <anchor>0a15befdc06e301bdea041539b24f4a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>colorPerVertex</name>
      <anchor>4bee626d10f23a70941417a9f7312d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>normalPerVertex</name>
      <anchor>d26f29ad789978575ad061a8a6c7b3e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLViewpoint</name>
    <base>SoNode</base>
    <filename>classSoVRMLViewpoint.html</filename>
    <member kind="function">
      <name>SoVRMLViewpoint</name>
      <anchor>87350da2d8b9ea8c844eace2e679ba36</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLViewpoint</name>
      <anchor>5c70dd6ccb8fbd2a7ff417a439987b7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>068897f9c86db09ad57724c69ed8524e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>3ee156c46d9116f11d71f81813847623</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>d06f1c45da1f75a3519d50b34eac6629</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>4e63b994eb12512598d012d9ca02d234</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>c24a080789e01a3c8431e2017acb84da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>387c2544498e570c151fa60aa80b769d</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>position</name>
      <anchor>e2ad0bd390aba927898dedfe15248f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>orientation</name>
      <anchor>c77c46575b6c0896f9781714d5de1088</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>fieldOfView</name>
      <anchor>4d2924ed0bc18ae401757ec38aba4376</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>description</name>
      <anchor>f143420228111539c80ef9e55f525c92</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>jump</name>
      <anchor>4add4ec8a888ff30e3872cebd7b71231</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>set_bind</name>
      <anchor>747eed7031d65fd425f56003ee9a7900</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>bindTime</name>
      <anchor>c547590bd2008a8fad1eef79db1cc432</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>isBound</name>
      <anchor>bda9023f7c95c808cd915913f8da580f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLVisibilitySensor</name>
    <base>SoNode</base>
    <filename>classSoVRMLVisibilitySensor.html</filename>
    <member kind="function">
      <name>SoVRMLVisibilitySensor</name>
      <anchor>21557cd67fe0c42afd497b7a6ca910ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLVisibilitySensor</name>
      <anchor>3c18d5cf30e682fb285d1e1cffcd76bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>6f9aeb27006728f22c0cb9ed7178fb7d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>3eb4f6d28464616b07da6dd6d0191ee8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>9b0bb15613d35fb9a5b8034abf624071</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>c1f723c634c7939e2a057ea8c4364792</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>d61434f3c3f91fc7a842c2d95b1512be</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>2b2841814fd43c1a7f7516ce0b67e152</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>center</name>
      <anchor>96379fdff96d8e5bab3c5c9066199992</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>size</name>
      <anchor>83cd13893f63f85ed28d21ef8902f05c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>enabled</name>
      <anchor>3297b60923a0d02171985844b310a7fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>enterTime</name>
      <anchor>368f163a0210e1b12461eeaf83ee62c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>exitTime</name>
      <anchor>bcc93123e4f56a0ea2c42ebfed4d5bdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>isActive</name>
      <anchor>0df795fca86af3c9a72fd0efd9dddcef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoVRMLWorldInfo</name>
    <base>SoNode</base>
    <filename>classSoVRMLWorldInfo.html</filename>
    <member kind="function">
      <name>SoVRMLWorldInfo</name>
      <anchor>a4300f5c91e7eb53b773b71098a5d0b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoVRMLWorldInfo</name>
      <anchor>cfc7fced42b99050b5ce2f272d93ee4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>91c535d5643b62bbce6b4be589456bd5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>4d32baec56eb2d2e248d3d72460acead</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>80151349a2ac8b663b8160dfd89e4fef</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>e7e7bed391afb01a9d5eb90fdfbc6ed0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>fd2becf8eec8affa5099d0d2aebcbce8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>title</name>
      <anchor>cc5089449bf7ca7f3fa71b65aa58136e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>info</name>
      <anchor>91baa3c51e3ab78defe089a67aad0961</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoWrapperKit</name>
    <base>SoSeparatorKit</base>
    <filename>classSoWrapperKit.html</filename>
    <member kind="function">
      <name>contents</name>
      <anchor>8a511724bb7265474dea3f2a2e830e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>localTransform</name>
      <anchor>c67dbf3a9b4844dd733e37c15e3bf60c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoWrapperKit</name>
      <anchor>da263e36e88802b46b5e85f5e07c8e35</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoWrapperKit</name>
      <anchor>c4cecf97816e2c93e04422ba0a7e2e96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>4ab34a2389a38c3f14439871a0655d4d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>86b6e33321bf617f46d7502b17049a4c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>0045d28ca84dcc4f18fa0eef19dea171</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>7a7692f0297dd2050fa9006610661c5e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalog</name>
      <anchor>e9dab1b38a225566ec9f7a7975982a7d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getNodekitCatalog</name>
      <anchor>ddaaed5bd49f53880d16ca36a9cf934d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassNodekitCatalogPtr</name>
      <anchor>4420dd812fc4e219679026bd457ee912</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>184394dc25381e2d5c06c512c429d9fe</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoWriteAction</name>
    <base>SoAction</base>
    <filename>classSoWriteAction.html</filename>
    <member kind="function">
      <name>SoWriteAction</name>
      <anchor>e3870bc0cc5a2850cde8b2f37db28577</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>SoWriteAction</name>
      <anchor>92cd196abb1a9729ee6423ab954f3280</anchor>
      <arglist>(SoOutput *out)</arglist>
    </member>
    <member kind="function">
      <name>~SoWriteAction</name>
      <anchor>8752e3957379b1df20373b770fe64eaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>ff156b105dec5ef66da8f40c4588b44a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>20389e2e842353b05e03c66d6321a9f5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>addMethod</name>
      <anchor>8e175f9bcfd8ece3ca4d99a3cddc6c0e</anchor>
      <arglist>(const SoType type, SoActionMethod method)</arglist>
    </member>
    <member kind="function">
      <name>enableElement</name>
      <anchor>4d2d5806041ed71baf0418d249b94c0f</anchor>
      <arglist>(const SoType type, const int stackindex)</arglist>
    </member>
    <member kind="function">
      <name>getEnabledElements</name>
      <anchor>21ec5ea842fdde86b22e18b0642d0094</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getClassEnabledElements</name>
      <anchor>dab11c1c01b30d74e2b0fb09afcd0a20</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getClassActionMethods</name>
      <anchor>185636c7772ee714080f2194636d76fa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>a52a365fc0dc0ad3d41b55b1b29efb2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getOutput</name>
      <anchor>62b090e93a51b2c5c9fec072d2ce108b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>continueToApply</name>
      <anchor>19a3c7f211ce13fbd62cbe558cc335db</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>continueToApply</name>
      <anchor>0e7d46d16822b5a8214a771f6321b418</anchor>
      <arglist>(SoPath *path)</arglist>
    </member>
    <member kind="function">
      <name>beginTraversal</name>
      <anchor>64c4bd195eedb675edfbbcd4fb94f402</anchor>
      <arglist>(SoNode *node)</arglist>
    </member>
    <member kind="function">
      <name>shouldCompactPathLists</name>
      <anchor>4b84f1c711e3a368da9d56a19f97fac2</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoWWWAnchor</name>
    <base>SoLocateHighlight</base>
    <filename>classSoWWWAnchor.html</filename>
    <member kind="function">
      <name>Mapping</name>
      <anchor>2a4580c6e9b0c8fab426187220cdd189</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>ONE</name>
      <anchor>2a4580c6e9b0c8fab426187220cdd18932bf6285508c67925bc28e7a42943bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>OINT</name>
      <anchor>2a4580c6e9b0c8fab426187220cdd189ec04d56e0e9fcf51b054b4310703b8b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoWWWAnchor</name>
      <anchor>35fb89db784a9ab190bf22afee21f895</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoWWWAnchor</name>
      <anchor>fd6fd7ed6126815a97bcc09a22baeaf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>3808f059abd47f5c005f0ea446b8d044</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>71d2b8b2e3c9d297fe00c92e2a94e668</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>99e9967055097e8d7b462afd4ff0ad48</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>874c425f3ea130442ec709f18b2bd667</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>ef60d5250e8ea393edf07fb04731d0a7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setFullURLName</name>
      <anchor>5fc51c17700a1f8b9f60363ad40eb28e</anchor>
      <arglist>(const SbString &amp;url)</arglist>
    </member>
    <member kind="function">
      <name>getFullURLName</name>
      <anchor>51934e950ad8a49db4ce1173582161e9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>fe706b5178807c52884c06383a78f39d</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>setFetchURLCallBack</name>
      <anchor>cac8d9626af7544006a55009fa06f376</anchor>
      <arglist>(SoWWWAnchorCB *f, void *userData)</arglist>
    </member>
    <member kind="function">
      <name>setHighlightURLCallBack</name>
      <anchor>15d8a8959d59e332f0ff6aa7b4ad4326</anchor>
      <arglist>(SoWWWAnchorCB *f, void *userData)</arglist>
    </member>
    <member kind="function">
      <name>redrawHighlighted</name>
      <anchor>bfec756a06338bae8bb5c6e6f523f354</anchor>
      <arglist>(SoAction *act, SbBool isNowHighlighting)</arglist>
    </member>
    <member kind="function">
      <name>name</name>
      <anchor>4f74a7ccfc6835b944512050043f2de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>description</name>
      <anchor>428199dd1c076d07965f3e8458161c1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>map</name>
      <anchor>12db930014d56bccc298ad1a687bdf2c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoWWWInline</name>
    <base>SoNode</base>
    <filename>classSoWWWInline.html</filename>
    <member kind="function">
      <name>SoWWWInlineP</name>
      <anchor>6b8ddd069361e8113ffffc5c02669c3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>BboxVisibility</name>
      <anchor>18f5489bc37aac80927579f502098bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>EVER</name>
      <anchor>18f5489bc37aac80927579f502098bba9afd4dfd4f4518636b42e4f1827a28ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>NTIL_LOADED</name>
      <anchor>18f5489bc37aac80927579f502098bba4f9801db08c57544e62ce41cc06fea4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>LWAYS</name>
      <anchor>18f5489bc37aac80927579f502098bbaa625c2a99ff5afa329dc49df6f47a9c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>SoWWWInline</name>
      <anchor>68c18674bd02430b5ed369d84e9cee61</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>~SoWWWInline</name>
      <anchor>df5bddeaacaa0d140dcca325eaecdbd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <name>getClassTypeId</name>
      <anchor>7fac610750542d74db9f59159e11e894</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getTypeId</name>
      <anchor>ea5461cbd3dd59f7b1c04327d9dd5e7c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getFieldDataPtr</name>
      <anchor>e650e6ecc16cdcda572f8e2f372cc1da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>getFieldData</name>
      <anchor>25ea57ed2d6961a57c4ff789e0c641f1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>initClass</name>
      <anchor>3a2814555ec57e7d4e18772126c9e60f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setFullURLName</name>
      <anchor>e60cc8607f031bbfad4d54bec9520fbd</anchor>
      <arglist>(const SbString &amp;url)</arglist>
    </member>
    <member kind="function">
      <name>getFullURLName</name>
      <anchor>b115980a10c77eb203a481dd5865f6b2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>copyChildren</name>
      <anchor>6a188edfb188709d7ddc95c2640405f8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>requestURLData</name>
      <anchor>891996bb530f769017cc0e23ecc85804</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>isURLDataRequested</name>
      <anchor>e5867cc89694a4c640b52a74af9f9a97</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>isURLDataHere</name>
      <anchor>921f1c235018cea83c78b8a19ee6e9e7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>cancelURLDataRequest</name>
      <anchor>629f858440109635143b966fd1d4cd51</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setChildData</name>
      <anchor>08c1205a27bca45ad6ebba9645bc49a1</anchor>
      <arglist>(SoNode *urldata)</arglist>
    </member>
    <member kind="function">
      <name>getChildData</name>
      <anchor>44c8b5a0861218c3db99dac5310ec30a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>getChildren</name>
      <anchor>8763cf06fe4e4eb8e7c47e4edd85bd2c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <name>setFetchURLCallBack</name>
      <anchor>7d6a9ae13e1e6686e39c0803343a878f</anchor>
      <arglist>(SoWWWInlineFetchURLCB *f, void *userdata)</arglist>
    </member>
    <member kind="function">
      <name>setBoundingBoxVisibility</name>
      <anchor>2673ee66bfbe022561bd25a16e0477dc</anchor>
      <arglist>(BboxVisibility b)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBoxVisibility</name>
      <anchor>f8489da03299049291419383834472c2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setBoundingBoxColor</name>
      <anchor>706b7e9bf089fbdd91c32f292579298b</anchor>
      <arglist>(SbColor &amp;c)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBoxColor</name>
      <anchor>27050aae3ab596e6d6aa3f1a4b55e755</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>setReadAsSoFile</name>
      <anchor>4ff3e81b4d7a38ecf2ac43ff537a838a</anchor>
      <arglist>(SbBool onoff)</arglist>
    </member>
    <member kind="function">
      <name>getReadAsSoFile</name>
      <anchor>4cc0e73f9e3d454738e6c463dad4c4a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <name>doAction</name>
      <anchor>847a88250c42bfd62a7c68b8ab7dc1da</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>doActionOnKidsOrBox</name>
      <anchor>b73c33934bfe08aa77387902fb8cd22f</anchor>
      <arglist>(SoAction *action)</arglist>
    </member>
    <member kind="function">
      <name>callback</name>
      <anchor>a5e4cbccda3b51a5f8b7fd5bf876c5dc</anchor>
      <arglist>(SoCallbackAction *action)</arglist>
    </member>
    <member kind="function">
      <name>GLRender</name>
      <anchor>9983a4a8246393ac104eaf1844d0c3fe</anchor>
      <arglist>(SoGLRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getBoundingBox</name>
      <anchor>fb6187d58399bb64da34c5e481d4d332</anchor>
      <arglist>(SoGetBoundingBoxAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getMatrix</name>
      <anchor>6d12064311798072b0c5e4580f21172d</anchor>
      <arglist>(SoGetMatrixAction *action)</arglist>
    </member>
    <member kind="function">
      <name>handleEvent</name>
      <anchor>4fe522df4be85452b33dc769f8ef6360</anchor>
      <arglist>(SoHandleEventAction *action)</arglist>
    </member>
    <member kind="function">
      <name>search</name>
      <anchor>1a607488cf5b7c82abe319d825345496</anchor>
      <arglist>(SoSearchAction *action)</arglist>
    </member>
    <member kind="function">
      <name>pick</name>
      <anchor>6eb1c580ce4765bc81401758a3134922</anchor>
      <arglist>(SoPickAction *action)</arglist>
    </member>
    <member kind="function">
      <name>getPrimitiveCount</name>
      <anchor>c5c29c2710ae9823f5ef60aa988b37c4</anchor>
      <arglist>(SoGetPrimitiveCountAction *action)</arglist>
    </member>
    <member kind="function">
      <name>audioRender</name>
      <anchor>eecdfc7c6091b6437bace72832ea270d</anchor>
      <arglist>(SoAudioRenderAction *action)</arglist>
    </member>
    <member kind="function">
      <name>addBoundingBoxChild</name>
      <anchor>831bf26c3daeba4c2a16bdc975a6f7b5</anchor>
      <arglist>(SbVec3f center, SbVec3f size)</arglist>
    </member>
    <member kind="function">
      <name>readInstance</name>
      <anchor>5b52aaf9dbabf710e2e6cc6031a28983</anchor>
      <arglist>(SoInput *in, unsigned short flags)</arglist>
    </member>
    <member kind="function">
      <name>copyContents</name>
      <anchor>ecbd5170b14e0ee34223ac7a325373ee</anchor>
      <arglist>(const SoFieldContainer *fromfC, SbBool copyconnections)</arglist>
    </member>
    <member kind="function">
      <name>name</name>
      <anchor>159d4fcea61be137b8fbbbbac86449fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>bboxCenter</name>
      <anchor>d31888d169955f6c49a5b4636ec22b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>bboxSize</name>
      <anchor>f6ab3633187f00e2f1357d837323aca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>alternateRep</name>
      <anchor>5337971a1acc874c2dcc556a628ee256</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoIntersectingPrimitive</name>
    <filename>structSoIntersectingPrimitive.html</filename>
    <member kind="function">
      <name>path</name>
      <anchor>bc3bc113fe1e4b72725bba8373e0f449</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>type</name>
      <anchor>8b0583b1ed8810f99f5922b2a94823d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <name>vertex</name>
      <anchor>6971c994878d765b0a4fafd24b65301a</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="function">
      <name>xf_vertex</name>
      <anchor>6fbc00d06db4e57f23a5cd26653bc8d6</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
</tagfile>
